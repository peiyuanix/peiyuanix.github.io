<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>UbuntuDestop分区方案</title>
    <url>/2020/09/05/Ubuntu%20Destop%E5%88%86%E5%8C%BA%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<div class="table-container">
<table>
<thead>
<tr>
<th>分区</th>
<th>大小</th>
</tr>
</thead>
<tbody>
<tr>
<td>efi分区</td>
<td>1GB</td>
</tr>
<tr>
<td>/boot</td>
<td>4GB</td>
</tr>
<tr>
<td>/</td>
<td>50GB</td>
</tr>
<tr>
<td>/var</td>
<td>20GB</td>
</tr>
<tr>
<td>/home</td>
<td>剩下所有</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Openwrt使用问题记录</title>
    <url>/2020/09/11/Openwrt%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="Luci界面出错"><a href="#Luci界面出错" class="headerlink" title="Luci界面出错"></a>Luci界面出错</h1><p><img src="https://i.loli.net/2020/09/12/CgBhaKLjztmH4FR.png" alt=""></p>
<p>解决方法：安装 <code>luci-compat</code><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install luci-compat</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>RIME输入法配置</title>
    <url>/2020/09/11/RIME%E8%BE%93%E5%85%A5%E6%B3%95%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="安装rime"><a href="#安装rime" class="headerlink" title="安装rime"></a>安装rime</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ibus-rime</span><br></pre></td></tr></table></figure>
<h1 id="安装双拼"><a href="#安装双拼" class="headerlink" title="安装双拼"></a>安装双拼</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line">curl -fsSL https://git.io/rime-install | bash -s -- double-pinyin</span><br></pre></td></tr></table></figure>
<h1 id="配置选单"><a href="#配置选单" class="headerlink" title="配置选单"></a>配置选单</h1><p>创建<code>~/.config/ibus/rime/default.custom.yaml</code><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">patch:</span><br><span class="line">        &quot;menu/page_size&quot;: 6</span><br><span class="line"></span><br><span class="line">        schema_list:</span><br><span class="line">                - schema: luna_pinyin_simp</span><br><span class="line">                - schema: double_pinyin        # 自然碼雙拼</span><br><span class="line"></span><br><span class="line">        switcher/hotkeys:</span><br><span class="line">                - F4</span><br></pre></td></tr></table></figure></p>
<h1 id="禁用双拼的英文输入（我习惯使用系统自带英文输入）"><a href="#禁用双拼的英文输入（我习惯使用系统自带英文输入）" class="headerlink" title="禁用双拼的英文输入（我习惯使用系统自带英文输入）"></a>禁用双拼的英文输入（我习惯使用系统自带英文输入）</h1><p>修改 <code>~/.config/ibus/rime/double_pinyin.schema.yaml</code> 。注释掉 <code>engine/processors</code> 的 <code>ascii_composer</code> 那一行<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    ...</span><br><span class="line">    ...</span><br><span class="line">engine:</span><br><span class="line">  processors:</span><br><span class="line">#    - ascii_composer</span><br><span class="line">    - recognizer</span><br><span class="line">    - key_binder</span><br><span class="line">    - speller</span><br><span class="line">    - punctuator</span><br><span class="line">    - selector</span><br><span class="line">    - navigator</span><br><span class="line">    - express_editor</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu20.04安装QQ和微信</title>
    <url>/2020/09/11/Ubuntu20.04%E5%AE%89%E8%A3%85QQ%E5%92%8C%E5%BE%AE%E4%BF%A1/</url>
    <content><![CDATA[<h1 id="参照此项目即可"><a href="#参照此项目即可" class="headerlink" title="参照此项目即可"></a>参照此项目即可</h1><p><a href="https://github.com/zq1997/deepin-wine">zq1997/deepin-wine</a></p>
<h1 id="消除tray栏，也就是悬浮在桌面上的那个wine栏"><a href="#消除tray栏，也就是悬浮在桌面上的那个wine栏" class="headerlink" title="消除tray栏，也就是悬浮在桌面上的那个wine栏"></a>消除tray栏，也就是悬浮在桌面上的那个wine栏</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-shell-extension-top-icons-plus gnome-tweaks</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu20.04简单美化指南</title>
    <url>/2020/09/11/Ubuntu20.04%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="美化内容"><a href="#美化内容" class="headerlink" title="美化内容"></a>美化内容</h1><ul>
<li>底部Docker栏</li>
<li>自动隐藏状态栏</li>
</ul>
<h1 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h1><ol>
<li>安装Chrome，直接去官网下载deb包安装即可，推荐使用apt命令手动安装<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/Downloads</span><br><span class="line">sudo apt install ./你的包名 </span><br></pre></td></tr></table></figure></li>
<li>安装下面的软件包<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-tweaks gnome-shell-extensions chrome-gnome-shell gnome-shell-extension-autohidetopbar</span><br></pre></td></tr></table></figure></li>
<li>使用Chrome进入gnome-extention商店（网页），根据提示安装GNOME Shell integration插件</li>
<li>在gonme-extension商店搜索安装 <code>Dash to Dock</code></li>
<li>按Alt+F2，输入r然后回车，重启gnome-sehll</li>
<li>进入程序extensions，配置插件即可</li>
</ol>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu使用问题记录</title>
    <url>/2020/09/11/Ubuntu%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="开始时文件系统检查时间过长，启动速度慢"><a href="#开始时文件系统检查时间过长，启动速度慢" class="headerlink" title="开始时文件系统检查时间过长，启动速度慢"></a>开始时文件系统检查时间过长，启动速度慢</h1><p>经过排查，发现是因为安装系统时，原本磁盘上存在一个swap分区，而我又创建了一个swap分区，结果系统同时使用了两个swap分区，由于进入系统之后我删除了原本的swap分区，导致fstab中的一项swap分区无法挂载，系统可能在尝试寻找此分区，因而耗费了过多时间，解决办法是在<code>fstab</code>中删除那一项</p>
<h1 id="GLFW-libglfw3-dev-无法正常使用"><a href="#GLFW-libglfw3-dev-无法正常使用" class="headerlink" title="GLFW(libglfw3-dev) 无法正常使用"></a>GLFW(<code>libglfw3-dev</code>) 无法正常使用</h1><p>错误信息:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">glfwWindowShouldClose: Assertion `window != NULL` failed</span><br></pre></td></tr></table></figure><br>通过GDM3配置文件，改用X11而不是Wayland就正常了，虽然 <code>libglfw3-dev</code> 似乎被标记为 wayland 库，但是这么做确实解决了问题。</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Openwrt单线多拨</title>
    <url>/2020/09/13/Openwrt%E5%8D%95%E7%BA%BF%E5%A4%9A%E6%8B%A8/</url>
    <content><![CDATA[<h1 id="安装mwan和macvlan"><a href="#安装mwan和macvlan" class="headerlink" title="安装mwan和macvlan"></a>安装mwan和macvlan</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install kmod-macvlan mwan3 luci-app-mwan3</span><br></pre></td></tr></table></figure>
<h1 id="测试多拨"><a href="#测试多拨" class="headerlink" title="测试多拨"></a>测试多拨</h1><h2 id="创建虚拟网卡"><a href="#创建虚拟网卡" class="headerlink" title="创建虚拟网卡"></a>创建虚拟网卡</h2><p>使用macvlan创建虚拟网卡，其中接口名称需要根据实际情况调整，此处我使用 <code>eth0</code>，并且可以创建多个虚拟接口多次拨号，此处演示双拨，创建好之后使用 <code>ifconfig</code> 命令便可以看到</p>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>这种方法重启会失效，需要写入启动脚本中<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip link add link eth0 name veth01 type macvlan</span><br><span class="line">ifconfig veth01 up</span><br></pre></td></tr></table></figure></p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>写入 <code>/etc/config/network</code><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">config device &#x27;veth01&#x27;</span><br><span class="line">    option name &#x27;veth01&#x27;</span><br><span class="line">    option ifname &#x27;eth0&#x27;</span><br><span class="line">    option type &#x27;macvlan&#x27;</span><br></pre></td></tr></table></figure></p>
<h2 id="创建虚拟WAN"><a href="#创建虚拟WAN" class="headerlink" title="创建虚拟WAN"></a>创建虚拟WAN</h2><p>写入 <code>/etc/config/network</code>，此处需要注意每一个wan（包括原本的wan和创建的虚拟wan）都需要设置metric（跃点数），而且需要各不相同<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">config interface &#x27;vwan1&#x27;</span><br><span class="line">	option ifname &#x27;veth01&#x27;</span><br><span class="line">	option proto &#x27;pppoe&#x27;</span><br><span class="line">	option password &#x27;******&#x27;</span><br><span class="line">	option ipv6 &#x27;auto&#x27;</span><br><span class="line">	option metric &#x27;5&#x27;</span><br><span class="line">	option username &#x27;*************&#x27;</span><br></pre></td></tr></table></figure></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>设置好之后就可以看是否各个接口都能获取到IP，如果可以，那就是支持多播，可以继续操作，否则就没必要继续看了，我的可以获取，结果是这样的<img src="https://i.loli.net/2020/09/13/y5TaKW9JNB87j3v.png" alt=""></p>
<h2 id="修改防火墙"><a href="#修改防火墙" class="headerlink" title="修改防火墙"></a>修改防火墙</h2><p>在 <code>网络-防火墙-区域</code> 中修改wan，覆盖网络中勾选vwan1。在接口中关闭wan，尝试是否能够正常上网。</p>
<h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><p>需要设置四项内容：接口、成员、策略、规则</p>
<h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>在luci界面的 <code>网络-&gt;负载均衡-&gt;接口</code> 中添加接口，如果有默认的，全部删掉</p>
<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p>输入接口名称，点击添加<br><img src="https://i.loli.net/2020/09/13/zukCeOjAXMd1U8v.png" alt=""></p>
<h3 id="设置设置追踪的域名或IP"><a href="#设置设置追踪的域名或IP" class="headerlink" title="设置设置追踪的域名或IP"></a>设置设置追踪的域名或IP</h3><p>点击添加之后，仅需 <code>设置追踪的域名或IP</code>，可以使用 <code>8.8.4.4</code>，也可以设置我所使用的这四个<br><img src="https://i.loli.net/2020/09/13/AC37fpoLEZsr2WT.png" alt=""></p>
<h2 id="成员"><a href="#成员" class="headerlink" title="成员"></a>成员</h2><p>在 <code>网络-&gt;负载均衡-&gt;成员</code> 中输入 <code>member_wan</code>，点击添加，并选好接口，跃点数保持默认。按照相同的步骤添加其他虚拟接口。<br><img src="https://i.loli.net/2020/09/13/FU2HdsOT4tPC6hn.png" alt=""></p>
<h2 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h2><p>添加一个名为load_balance的策略，成员选择上一步创建的几个成员。<br><img src="https://i.loli.net/2020/09/13/qofZ7Qtx1jH5wbv.png" alt=""></p>
<h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><p>添加一条名为default的规则，通讯协议选all，策略选择上一步创建的策略即可</p>
<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>以上参考了以下几篇文章:</p>
<p><a href="https://acris.me/2017/06/25/Load-balancing-multiple-PPPoE-on-LEDE/">LEDE/OpenWrt使用macvlan和mwan3实现单线多拨</a></p>
<p><a href="https://igloo302.github.io/2020/openwrt%E4%BD%BF%E7%94%A8macvlan-mwan3%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%BA%BF%E5%A4%9A%E6%8B%A8/">OpenWrt使用macvlan+mwan3实现单线多拨</a></p>
]]></content>
      <tags>
        <tag>Openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Vmware安装Openwrt进行多拨问题记录</title>
    <url>/2020/09/14/%E4%BD%BF%E7%94%A8Vmware%E5%AE%89%E8%A3%85Openwrt%E8%BF%9B%E8%A1%8C%E5%A4%9A%E6%8B%A8%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="网络连接方式"><a href="#网络连接方式" class="headerlink" title="网络连接方式"></a>网络连接方式</h1><p>Openwrt虚拟机通过多个桥接接口多拨，主机连接Openwrt的Lan进行联网，主机和虚拟机Lan的连接方式为Host-Only。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[LAN]&lt;-----&gt;[eth0]&lt;------&gt;[HOST-VMware Virtual Ethernet Adapter for VMnet1]&lt;-----&gt;[USER]</span><br><span class="line">  |</span><br><span class="line">  |     /[VWAN1]---&gt;[eth1]-----\</span><br><span class="line">  |    /[VWAN2]----&gt;[eth2]------\</span><br><span class="line">[WAN] (..........................)--&gt;[Host-Realtek_Gaming_GBE_Family_Controller]---&gt;[ISP]</span><br><span class="line">       \[VWAN3]----&gt;[ethX]------/</span><br><span class="line">        \[VWAN4]---&gt;[ethY]-----/</span><br></pre></td></tr></table></figure></p>
<h1 id="多个网络接口同时连接无法联网"><a href="#多个网络接口同时连接无法联网" class="headerlink" title="多个网络接口同时连接无法联网"></a>多个网络接口同时连接无法联网</h1><p>我的原因是路由表中存在多项默认路由，删除多余默认路由，只保留到Openwrt虚拟机的默认路由即可。</p>
]]></content>
      <tags>
        <tag>Openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>HP暗影精灵3开启Wake-on-Lan</title>
    <url>/2020/09/21/HP%E6%9A%97%E5%BD%B1%E7%B2%BE%E7%81%B53%E5%BC%80%E5%90%AFWake-on-Lan/</url>
    <content><![CDATA[<h1 id="HP-PCs-Wake-On-LAN-Does-Not-Work-After-Windows-10-Upgrade-is-Performed"><a href="#HP-PCs-Wake-On-LAN-Does-Not-Work-After-Windows-10-Upgrade-is-Performed" class="headerlink" title="HP PCs - Wake On LAN Does Not Work After Windows 10 Upgrade is Performed"></a>HP PCs - Wake On LAN Does Not Work After Windows 10 Upgrade is Performed</h1><p><strong>This document pertains to HP and Compaq computers with Windows 10.</strong></p>
<p>The Wake On LAN (WOL) stops working after upgrading to Windows 10 or after the Windows 10 updates are installed. Windows 8 registry key enables Wake On LAN support under Classic Shutdown mode, but not under Hybrid Shutdown mode. After the operating system is upgraded to Windows 10, the registry key is not carried over, so the WOL function may not work after the upgrade is performed.</p>
<p>To enable the Wake On LAN (WOL) function after upgrading to Windows 10 or installing the Windows 10 update, perform the following the steps:</p>
<h2 id="Step-1-Update-the-BIOS"><a href="#Step-1-Update-the-BIOS" class="headerlink" title="Step 1: Update the BIOS"></a>Step 1: Update the BIOS</h2><p>Verify the computer has the latest BIOS version installed. Refer to the following links to locate, download and install the appropriate BIOS update for your computer:</p>
<ul>
<li><p><strong>Consumer computers:</strong> Go to <a href="http://support.hp.com/us-en/drivers">HP Customer Support - Software and Driver Downloads</a>.</p>
</li>
<li><p><strong>Business computers:</strong> Go to <a href="https://support.hp.com/in-en/document/c02860501">Using HP SoftPaq Download Manager</a>.</p>
</li>
</ul>
<h2 id="Step-2-Disable-Hybrid-Shutdown-mode"><a href="#Step-2-Disable-Hybrid-Shutdown-mode" class="headerlink" title="Step 2: Disable Hybrid Shutdown mode"></a>Step 2: Disable Hybrid Shutdown mode</h2><ol>
<li><p>Open Control Panel and select <strong>Hardware and Sound</strong>.</p>
</li>
<li><p>Select <strong>Power Options</strong>.</p>
</li>
<li><p>Click <strong>Require a password on wakeup</strong>.</p>
</li>
<li><p>Confirm the option of <strong>Turn on fast startup</strong> is unchecked.</p>
</li>
<li><p>Save changes.</p>
</li>
</ol>
<h2 id="Step-3-Enable-Wake-On-LAN-WOL-setting-for-LAN-driver"><a href="#Step-3-Enable-Wake-On-LAN-WOL-setting-for-LAN-driver" class="headerlink" title="Step 3: Enable Wake On LAN (WOL) setting for LAN driver"></a>Step 3: Enable Wake On LAN (WOL) setting for LAN driver</h2><ol>
<li><p>Open <strong>Device Manager</strong>.</p>
</li>
<li><p>Select <strong>Network adapters</strong>.</p>
</li>
<li><p>Locate the LAN device and click on it.</p>
</li>
<li><p>Select the A<strong>dvanced </strong>tab.</p>
</li>
<li><p>Confirm <strong>Shutdown Wake-On-Lan</strong> is enabled.</p>
</li>
<li><p>Select the <strong>Power Management</strong> tab.</p>
</li>
<li><p>Check the option <strong>Allow this device to wake the computer</strong>.</p>
</li>
<li><p>Save changes.</p>
</li>
<li><p>Close <strong>Device Manager</strong>.</p>
</li>
</ol>
<h2 id="Step-4-Manually-add-the-HP-registry-key"><a href="#Step-4-Manually-add-the-HP-registry-key" class="headerlink" title="Step 4: Manually add the HP registry key"></a>Step 4: Manually add the HP registry key</h2><blockquote>
<p>   CAUTION: </p>
<p>If you use Registry Editor incorrectly, you may cause serious problems that may require you to reinstall your operating system. HP cannot guarantee that you can solve problems that result from using Registry Editor incorrectly. <strong>Use Registry Editor at your own risk</strong>.</p>
</blockquote>
<ol>
<li><p>Press <strong>Win + x</strong>, select <strong>Run</strong> and type <strong>regedit</strong> in the run line.</p>
</li>
<li><p>Select <strong>OK</strong> to launch the <strong>Registry Editor</strong>.</p>
</li>
<li><p>Navigate<br>to <strong>KEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NDIS\Parameters</strong>.</p>
</li>
<li><p>Right click on <strong>Parameters</strong>.</p>
</li>
<li><p>Select <strong>New DWORD (32-bit) Value</strong>.</p>
</li>
<li><p>Add the key <strong>AllowWakeFromS5</strong>.</p>
</li>
<li><p>Set the value to <strong>1</strong>.</p>
</li>
<li><p>Close the <strong>Registry Editor</strong>.</p>
</li>
<li><p>Restart the computer.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
  </entry>
  <entry>
    <title>插入排序</title>
    <url>/2020/09/30/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="插入排序代码"><a href="#插入排序代码" class="headerlink" title="插入排序代码"></a>插入排序代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// insertion.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">insertion_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">size_t</span> arrsiz)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="comment">// 避免同一行刷新排序进度时覆盖其他程序输出</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> target_index=<span class="number">0</span>; target_index &lt; arrsiz; target_index++)</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="type">int</span> target_value = arr[target_index];</span><br><span class="line">                <span class="type">int</span> compare_index = target_index - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(compare_index &gt;= <span class="number">0</span> &amp;&amp; target_value &lt; arr[compare_index])</span><br><span class="line">                &#123;</span><br><span class="line">                        arr[compare_index + <span class="number">1</span>] = arr[compare_index];</span><br><span class="line">                        --compare_index;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[compare_index + <span class="number">1</span>] = target_value;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Progress: %d / %ld&quot;</span>, target_index, arrsiz);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>); <span class="comment">// 同一行刷新排序进度</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;                                                                                                               &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>); <span class="comment">// 清空刷新内容，避免干扰后续输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效率测试框架"><a href="#效率测试框架" class="headerlink" title="效率测试框架"></a>效率测试框架</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// sort.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">void</span> (*func)(<span class="type">int</span>*, <span class="type">size_t</span>))</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">size_t</span> lens[<span class="number">5</span>] = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">10000</span>, <span class="number">100000</span>, <span class="number">1000000</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> ind = <span class="number">0</span>; ind &lt; <span class="number">5</span>; ind++) &#123;</span><br><span class="line">                <span class="type">int</span> arr[lens[ind]];</span><br><span class="line">                srand(<span class="number">0</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;[SORT array_size=%lu]\n&quot;</span>, lens[ind]);</span><br><span class="line">                <span class="type">time_t</span> gen_start_time, gen_end_time, sort_start_time, sort_end_time;</span><br><span class="line">                gen_start_time = time(<span class="literal">NULL</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">size_t</span> jnd = <span class="number">0</span>; jnd &lt; lens[ind]; jnd++)</span><br><span class="line">                &#123;</span><br><span class="line">                        arr[jnd] = rand() % lens[ind];</span><br><span class="line">                &#125;</span><br><span class="line">                gen_end_time = time(<span class="literal">NULL</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\tgen_time: %ld\n&quot;</span>, gen_end_time - gen_start_time);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// output the first origin array to ensure the alg is correct</span></span><br><span class="line">                <span class="keyword">if</span>(ind == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\t\tORIGION ARRAY: [&quot;</span>);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">size_t</span> jnd = <span class="number">0</span>; jnd &lt; lens[ind]; jnd++)</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, arr[jnd]);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\b]\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sort_start_time = time(<span class="literal">NULL</span>);</span><br><span class="line">                func(arr, lens[ind]);</span><br><span class="line">                sort_end_time = time(<span class="literal">NULL</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\tsort_time: %ld\n&quot;</span>, sort_end_time - sort_start_time);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// output the first sorted array to ensure the alg is correct</span></span><br><span class="line">                <span class="keyword">if</span>(ind == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\t\tSORTED ARRAY: [&quot;</span>);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">size_t</span> jnd = <span class="number">0</span>; jnd &lt; lens[ind]; jnd++)</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot; %d,&quot;</span>, arr[jnd]);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\b]\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// sort_test.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">insertion_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">size_t</span> arrsiz)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">void</span> (*func)(<span class="type">int</span>*, <span class="type">size_t</span>))</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&gt;&gt;&gt; INSERTION SORT &gt;&gt;&gt;\n&quot;</span>);</span><br><span class="line">        sort(&amp;insertion_sort); </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&gt;&gt;&gt; INSERTION SORT &gt;&gt;&gt;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><pre><code>&gt;&gt;&gt; INSERTION SORT &gt;&gt;&gt;
[SORT array_size=10]
    gen_time: 0
        ORIGION ARRAY: [ 3, 6, 7, 5, 3, 5, 6, 2, 9, 1]
    sort_time: 0                                                              
        SORTED ARRAY: [ 1, 2, 3, 3, 5, 5, 6, 6, 7, 9]

[SORT array_size=100]
    gen_time: 0
    sort_time: 0                                                                               

[SORT array_size=10000]
    gen_time: 0
    sort_time: 0                                                                         

[SORT array_size=100000]
    gen_time: 0
    sort_time: 7                                                                         

[SORT array_size=1000000]
    gen_time: 0
    sort_time: 750
</code></pre>]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>简单选择排序</title>
    <url>/2020/10/01/%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="简单选择排序代码"><a href="#简单选择排序代码" class="headerlink" title="简单选择排序代码"></a>简单选择排序代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// primeselect.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">primeselect_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">size_t</span> arrsiz)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); <span class="comment">// 避免同一行刷新排序进度时覆盖其他程序输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> ind = <span class="number">0</span>; ind &lt; arrsiz; ind++) &#123;</span><br><span class="line">                <span class="type">int</span> max_ind = ind;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> jnd = ind + <span class="number">1</span>; jnd &lt; arrsiz; jnd++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (arr[jnd] &gt; arr[max_ind]) &#123;</span><br><span class="line">                               max_ind = jnd;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> swap_val = arr[max_ind];</span><br><span class="line">                arr[max_ind] = arr[ind];</span><br><span class="line">                arr[ind] = swap_val;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Progress: %d / %ld&quot;</span>, ind, arrsiz);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>); <span class="comment">// 同一行刷新排序进度</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;                                                                                                               &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>); <span class="comment">// 清空刷新内容，避免干扰后续输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效率测试框架"><a href="#效率测试框架" class="headerlink" title="效率测试框架"></a>效率测试框架</h2><p>与 <code>插入排序</code> 类似</p>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><pre><code>&gt;&gt;&gt; PRIEM SELECT SORT &gt;&gt;&gt;
[SORT array_size=10]
        gen_time: 0
                ORIGION ARRAY: [ 3, 6, 7, 5, 3, 5, 6, 2, 9, 1]
        sort_time: 0
                SORTED ARRAY: [ 9, 7, 6, 6, 5, 5, 3, 3, 2, 1]
[SORT array_size=100]
        gen_time: 0
        sort_time: 0
[SORT array_size=10000]
        gen_time: 0
        sort_time: 0
[SORT array_size=100000]
        gen_time: 0
        sort_time: 13
[SORT array_size=1000000]
        gen_time: 0
        sort_time: 1354
</code></pre>]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>归并排序</title>
    <url>/2020/10/01/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="归并排序代码"><a href="#归并排序代码" class="headerlink" title="归并排序代码"></a>归并排序代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// divide_merge.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span> *arr, <span class="type">size_t</span> p, <span class="type">size_t</span> q, <span class="type">size_t</span> r)</span> </span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">size_t</span> n1 = q - p + <span class="number">1</span>;</span><br><span class="line">        <span class="type">size_t</span> n2 = r - q;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> arr_left[n1+<span class="number">1</span>], arr_right[n2+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> ind = <span class="number">0</span>; ind &lt; n1; ind++) &#123;</span><br><span class="line">                arr_left[ind] = arr[p + ind];</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> ind = <span class="number">0</span>; ind &lt; n2; ind++) &#123;</span><br><span class="line">                arr_right[ind] = arr[q + <span class="number">1</span> + ind];</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">// sentinel</span></span><br><span class="line">        arr_left[n1] = arr_right[n2] = INT_MAX;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ind = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> jnd = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> knd = p; knd &lt;= r; knd++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr_left[ind] &lt;= arr_right[jnd]) &#123;</span><br><span class="line">                        arr[knd] = arr_left[ind];</span><br><span class="line">                        ++ind;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        arr[knd] = arr_right[jnd];</span><br><span class="line">                        ++jnd;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> head, <span class="type">int</span> tail)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> (head &lt; tail) &#123;</span><br><span class="line">                <span class="type">int</span> mid = (head + tail) / <span class="number">2</span>;</span><br><span class="line">                merge_sort(arr, head, mid);</span><br><span class="line">                merge_sort(arr, mid + <span class="number">1</span>, tail);</span><br><span class="line">                merge(arr, head, mid, tail);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">divide_merge_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">size_t</span> arrsiz)</span></span><br><span class="line">&#123;</span><br><span class="line">        merge_sort(arr, <span class="number">0</span>, (<span class="type">int</span>)arrsiz - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效率测试框架"><a href="#效率测试框架" class="headerlink" title="效率测试框架"></a>效率测试框架</h2><p>与 <code>插入排序</code> 类似</p>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p><font color="green">直接起飞！！！</font></p>
<pre><code>&gt;&gt;&gt; DEVIDE-MERGE SORT &gt;&gt;&gt;
[SORT array_size=10]
    gen_time: 0
        ORIGION ARRAY: [ 3, 6, 7, 5, 3, 5, 6, 2, 9, 1]
    sort_time: 0
        SORTED ARRAY: [ 1, 2, 3, 3, 5, 5, 6, 6, 7, 9]
[SORT array_size=100]
    gen_time: 0
    sort_time: 0
[SORT array_size=10000]
    gen_time: 0
    sort_time: 0
[SORT array_size=100000]
    gen_time: 0
    sort_time: 0
[SORT array_size=1000000]
    gen_time: 0
    sort_time: 0
&lt;&lt;&lt; DEVIDE-MERGE SORT &lt;&lt;&lt;
</code></pre>]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>冒泡排序</title>
    <url>/2020/10/04/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<h2 id="冒泡排序代码"><a href="#冒泡排序代码" class="headerlink" title="冒泡排序代码"></a>冒泡排序代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">size_t</span> arrsiz)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> ind = <span class="number">0</span>; ind &lt; (<span class="type">int</span>)(arrsiz) - <span class="number">1</span>; ind++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> jnd = (<span class="type">int</span>)(arrsiz) - <span class="number">1</span>; jnd &gt; ind; jnd--) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (arr[jnd] &lt; arr[jnd - <span class="number">1</span>]) &#123;</span><br><span class="line">                                <span class="type">int</span> tmp = arr[jnd];</span><br><span class="line">                                arr[jnd] = arr[jnd - <span class="number">1</span>];</span><br><span class="line">                                arr[jnd - <span class="number">1</span>] = tmp;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Progress: %d / %ld&quot;</span>, ind, arrsiz);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;                                                                                                               &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\r\033[k&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效率测试框架"><a href="#效率测试框架" class="headerlink" title="效率测试框架"></a>效率测试框架</h2><p>与 <code>插入排序</code> 类似</p>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p><font color="green">比插入和简单选择慢</font></p>
<pre><code>&gt;&gt;&gt; BUBBLE SORT &gt;&gt;&gt;
[SORT array_size=10]
        gen_time: 0
                ORIGION ARRAY: [ 3, 6, 7, 5, 3, 5, 6, 2, 9, 1]
        sort_time: 0
                SORTED ARRAY: [ 1, 2, 3, 3, 5, 5, 6, 6, 7, 9]
[SORT array_size=100]
        gen_time: 0
        sort_time: 0
[SORT array_size=10000]
        gen_time: 0
        sort_time: 1
[SORT array_size=100000]
        gen_time: 0
        sort_time: 31
[SORT array_size=1000000]
        gen_time: 0
        sort_time: 3037
&lt;&lt;&lt; BUBBLE SORT &lt;&lt;&lt;
</code></pre>]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>SAT solver与SMT solver</title>
    <url>/2020/12/10/SAT%20solver%E4%B8%8E%20SMT%20solver/</url>
    <content><![CDATA[<h2 id="SAT-solver"><a href="#SAT-solver" class="headerlink" title="SAT solver"></a>SAT solver</h2><h4 id="SAT"><a href="#SAT" class="headerlink" title="SAT"></a>SAT</h4><p>布尔可满足性问题（Boolean satisfiability problem），指是否存在一组解可以使一个布尔公式结果为True，此问题是NPC问题。现有算法可以有效解决涉及数万个变量和数百万子句的问题的能力。</p>
<h4 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h4><ol>
<li>完备算法：DPLL, CDCL, LA  </li>
<li>不完备算法：SLS, MP, EA  </li>
<li>混合求解  </li>
<li>并行求解<h4 id="SAT-Solver"><a href="#SAT-Solver" class="headerlink" title="SAT Solver"></a>SAT Solver</h4>是可用布尔公式（合取范式）描述的的一类问题的求解器。 <h4 id="求解方法"><a href="#求解方法" class="headerlink" title="求解方法"></a>求解方法</h4>将问题转换为合取范式，代入求解器即可。<h4 id="应用方向"><a href="#应用方向" class="headerlink" title="应用方向"></a>应用方向</h4></li>
<li>电路可满足问题：验证是否存在一组input，使得output为true  </li>
<li>电路形式等效检查：验证两个电路等效  <h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4>比如若要求解使析取范式 $(\neg A \vee B) \wedge (C \vee D)$ 为 True的所有结果<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pycosat</span><br><span class="line"></span><br><span class="line"># 用数字标识一个变量</span><br><span class="line"># (not a or b) and (c or d)</span><br><span class="line">for solution in list(pycosat.itersolve([(-1, 2), (3, 4)])):</span><br><span class="line">  print(solution)</span><br></pre></td></tr></table></figure>
输出如下<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[-1, 2, 3, 4]</span><br><span class="line">[-1, 2, 3, -4]</span><br><span class="line">[-1, 2, -3, 4]</span><br><span class="line">[-1, -2, -3, 4]</span><br><span class="line">[-1, -2, 3, 4]</span><br><span class="line">[-1, -2, 3, -4]</span><br><span class="line">[1, 2, 3, 4]</span><br><span class="line">[1, 2, 3, -4]</span><br><span class="line">[1, 2, -3, 4]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="SMT-solver"><a href="#SMT-solver" class="headerlink" title="SMT solver"></a>SMT solver</h2><h3 id="SMT-solver-1"><a href="#SMT-solver-1" class="headerlink" title="SMT solver"></a>SMT solver</h3><p>是SAT的扩展，使用一阶逻辑描述问题, 变量类型不再限于布尔变量，还可以是常量、函数、谓词等</p>
<h3 id="应用方向-1"><a href="#应用方向-1" class="headerlink" title="应用方向"></a>应用方向</h3><ol>
<li>软件包依赖检查</li>
<li>数独问题</li>
<li>八皇后</li>
<li>算术表达式满足性检查<h3 id="应用方向示例"><a href="#应用方向示例" class="headerlink" title="应用方向示例"></a>应用方向示例</h3>可以进行变量约束问题求解<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from z3 import Int, Solver</span><br><span class="line">x = Int(&#x27;x&#x27;)</span><br><span class="line">y = Int(&#x27;y&#x27;)</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">print(s)</span><br><span class="line"></span><br><span class="line">s.add(x &gt; 10, y == x + 2)</span><br><span class="line">print(s)</span><br><span class="line">print(&quot;Solving constraints in the solver s ...&quot;)</span><br><span class="line">print(s.check())</span><br><span class="line"></span><br><span class="line">print(&quot;Create a new scope...&quot;)</span><br><span class="line">s.push()</span><br><span class="line">s.add(y &lt; 11)</span><br><span class="line">print(s)</span><br><span class="line">print(&quot;Solving updated set of constraints...&quot;)</span><br><span class="line">print(s.check())</span><br><span class="line"></span><br><span class="line">print(&quot;Restoring state...&quot;)</span><br><span class="line">s.pop()</span><br><span class="line">print(s)</span><br><span class="line">print(&quot;Solving restored set of constraints...&quot;)</span><br><span class="line">print(s.check())</span><br></pre></td></tr></table></figure>
结果如下<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[]</span><br><span class="line">[x &gt; 10, y == x + 2]</span><br><span class="line">Solving constraints in the solver s ...</span><br><span class="line">sat</span><br><span class="line">Create a new scope...</span><br><span class="line">[x &gt; 10, y == x + 2, y &lt; 11]</span><br><span class="line">Solving updated set of constraints...</span><br><span class="line">unsat</span><br><span class="line">Restoring state...</span><br><span class="line">[x &gt; 10, y == x + 2]</span><br><span class="line">Solving restored set of constraints...</span><br><span class="line">sat</span><br></pre></td></tr></table></figure>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3>[1] <a href="https://rhettinger.github.io/overview.html">https://rhettinger.github.io/overview.html</a><br>[2] <a href="https://resources.mpi-inf.mpg.de/departments/rg1/conferences/vtsa08/slides/barret2_smt.pdf">https://resources.mpi-inf.mpg.de/departments/rg1/conferences/vtsa08/slides/barret2_smt.pdf</a><br>[3] <a href="http://www.jsjkx.com/CN/article/openArticlePDF.jsp?id=16156">http://www.jsjkx.com/CN/article/openArticlePDF.jsp?id=16156</a><br>[4] <a href="https://pysathq.github.io/docs/pysat.pdf">https://pysathq.github.io/docs/pysat.pdf</a><br>[5] <a href="https://ericpony.github.io/z3py-tutorial/guide-examples.htm">https://ericpony.github.io/z3py-tutorial/guide-examples.htm</a></li>
</ol>
]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>std sort踩坑</title>
    <url>/2020/12/10/std%20sort%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<p>T135 会在下列输入时报错<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1,2,3,5,4,3,2,1,4,3,2,1,3,2,1,1,2,3,4,4,3,2,1]</span><br></pre></td></tr></table></figure><br>可能跟sort内部实现有关，记得要使用 <code>&lt;=</code> 而不要用 <code>&gt;</code></p>
<h2 id="错误版本代码"><a href="#错误版本代码" class="headerlink" title="错误版本代码"></a>错误版本代码</h2><p>sort 里面使用 <code>&lt;=</code><br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">candy</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; ratings)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">index</span><span class="params">(ratings.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;index.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            index[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(index.<span class="built_in">begin</span>(), index.<span class="built_in">end</span>(), [&amp;ratings](<span class="type">int</span> ind1, <span class="type">int</span> ind2) &#123;</span><br><span class="line">            <span class="keyword">return</span> ratings[ind1] &lt;= ratings[ind2];</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">candy</span><span class="params">(ratings.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> ind: index) &#123;</span><br><span class="line">            <span class="type">int</span> ct = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(ind<span class="number">-1</span> &gt;= <span class="number">0</span> &amp;&amp; ratings[ind] &gt; ratings[ind<span class="number">-1</span>]) &#123;</span><br><span class="line">                ct = <span class="built_in">max</span>(candy[ind<span class="number">-1</span>] + <span class="number">1</span>, ct);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ind+<span class="number">1</span> &lt; ratings.<span class="built_in">size</span>() &amp;&amp; ratings[ind] &gt; ratings[ind+<span class="number">1</span>]) &#123;</span><br><span class="line">                ct = <span class="built_in">max</span>(candy[ind+<span class="number">1</span>] + <span class="number">1</span>, ct);</span><br><span class="line">            &#125;</span><br><span class="line">            candy[ind] = ct;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">accumulate</span>(candy.<span class="built_in">begin</span>(), candy.<span class="built_in">end</span>(), <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h2 id="正确版本代码"><a href="#正确版本代码" class="headerlink" title="正确版本代码"></a>正确版本代码</h2><p>sort 里面使用 <code>&lt;</code><br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">candy</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; ratings)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">index</span><span class="params">(ratings.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;index.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            index[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(index.<span class="built_in">begin</span>(), index.<span class="built_in">end</span>(), [&amp;ratings](<span class="type">int</span> ind1, <span class="type">int</span> ind2) &#123;</span><br><span class="line">            <span class="keyword">return</span> ratings[ind1] &lt; ratings[ind2];</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">candy</span><span class="params">(ratings.size())</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> ind: index) &#123;</span><br><span class="line">            <span class="type">int</span> ct = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(ind<span class="number">-1</span> &gt;= <span class="number">0</span> &amp;&amp; ratings[ind] &gt; ratings[ind<span class="number">-1</span>]) &#123;</span><br><span class="line">                ct = <span class="built_in">max</span>(candy[ind<span class="number">-1</span>] + <span class="number">1</span>, ct);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(ind+<span class="number">1</span> &lt; ratings.<span class="built_in">size</span>() &amp;&amp; ratings[ind] &gt; ratings[ind+<span class="number">1</span>]) &#123;</span><br><span class="line">                ct = <span class="built_in">max</span>(candy[ind+<span class="number">1</span>] + <span class="number">1</span>, ct);</span><br><span class="line">            &#125;</span><br><span class="line">            candy[ind] = ct;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">accumulate</span>(candy.<span class="built_in">begin</span>(), candy.<span class="built_in">end</span>(), <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>ResultSet初探</title>
    <url>/2020/12/14/ResultSet%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>ResultSet</code> 是一个接口，具体操作由jdbc驱动实现，本文以MySQL Driver为例分析 <code>ResultSet</code> 的实现。</p>
<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>测试 <code>executeQuery</code> 查询结果大于 <code>jvm</code> 内存时会发生什么。</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li><p>创建数据库 <code>db_research</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database db_search;</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建表 <code>table0</code>, 具有两个字段 <code>name varchar(255)</code>, <code>file longblob</code></p>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table0(name <span class="type">varchar</span>(<span class="number">255</span>), file longblob);</span><br></pre></td></tr></table></figure>
</li>
<li><p>插入 <code>64</code> 条 <code>file</code> 大小为 <code>1024*1024 B = 1 MB</code> 的数据</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pStat = conn.prepareStatement(<span class="string">&quot;insert into table0 values(?, ?);&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">64</span>; i++) &#123;</span><br><span class="line">    pStat.setString(<span class="number">1</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    pStat.setBinaryStream(<span class="number">2</span>, <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">String</span>(<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">1024</span>*<span class="number">1024</span>]).replace(<span class="string">&#x27;\0&#x27;</span>, <span class="string">&#x27;a&#x27;</span>).getBytes(StandardCharsets.UTF_8)));</span><br><span class="line">    pStat.addBatch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret[] = pStat.executeBatch();</span><br><span class="line">pStat.close();</span><br></pre></td></tr></table></figure>
</li>
<li><p>从 <code>table0</code> 中取所有数据，在默认虚拟机参数下该操作会正常执行</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pStat = conn.prepareStatement(<span class="string">&quot;select * from table0;&quot;</span>);</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> pStat.executeQuery();</span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">    System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">    System.out.println(rs.getBinaryStream(<span class="string">&quot;file&quot;</span>).read());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>限制 jvm 内存为 <code>16MB</code>，再次执行上面的 <code>select</code> 操作，则会由于内存不足而抛出错误，由此推测普通的查询操作试图将所有查询结果缓存到本地供用户使用</p>
 <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.sql.SQLException: Java heap space</span><br><span class="line">    at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:<span class="number">129</span>)</span><br><span class="line">    at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:<span class="number">97</span>)</span><br><span class="line">    at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:<span class="number">122</span>)</span><br><span class="line">    at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:<span class="number">953</span>)</span><br><span class="line">    at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:<span class="number">1003</span>)</span><br><span class="line">    at Main.main(Main.java:<span class="number">46</span>)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>根据上面的测试推测，Mysql Driver试图缓存所有查询结果到本地供 <code>ResultSet</code> 使用（具体存放位置暂时不知道，反之是本地，占用当前进程的jvm空间），并没有在内存不足时采取一些措施来避免出错，经过查阅资料，得知可以采用流式查询来避免查询量过大时爆内存的问题  </p>
<pre><code><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pStat = conn.prepareStatement(<span class="string">&quot;select * from table0;&quot;</span>, </span><br><span class="line">            ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);</span><br><span class="line">    pStat.setFetchSize(Integer.MIN_VALUE);</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> pStat.executeQuery();</span><br><span class="line">    <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">        System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        System.out.println(rs.getBinaryStream(<span class="string">&quot;file&quot;</span>).read());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</code></pre><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>经过查阅资料，得知 MySQL JDBC Driver 实际上有三种查询方式，普通查询，流式查询，基于游标的查询。下面的是最新源代码，参考链接中作者使用的是旧版源代码。</p>
<h3 id="普通查询和流式查询"><a href="#普通查询和流式查询" class="headerlink" title="普通查询和流式查询"></a>普通查询和流式查询</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Resultset</span>&gt; T <span class="title function_">readAllResults</span><span class="params">(<span class="type">int</span> maxRows, <span class="type">boolean</span> streamResults, NativePacketPayload resultPacket, <span class="type">boolean</span> isBinaryEncoded,</span></span><br><span class="line"><span class="params">        ColumnDefinition metadata, ProtocolEntityFactory&lt;T, NativePacketPayload&gt; resultSetFactory)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    resultPacket.setPosition(<span class="number">0</span>);</span><br><span class="line">    <span class="type">T</span> <span class="variable">topLevelResultSet</span> <span class="operator">=</span> read(Resultset.class, maxRows, streamResults, resultPacket, isBinaryEncoded, metadata, resultSetFactory);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.serverSession.hasMoreResults()) &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">currentResultSet</span> <span class="operator">=</span> topLevelResultSet;</span><br><span class="line">        <span class="keyword">if</span> (streamResults) &#123;</span><br><span class="line">            currentResultSet = readNextResultset(currentResultSet, maxRows, <span class="literal">true</span>, isBinaryEncoded, resultSetFactory);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">this</span>.serverSession.hasMoreResults()) &#123;</span><br><span class="line">                currentResultSet = readNextResultset(currentResultSet, maxRows, <span class="literal">false</span>, isBinaryEncoded, resultSetFactory);</span><br><span class="line">            &#125;</span><br><span class="line">            clearInputStream();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.hadWarnings) &#123;</span><br><span class="line">        scanForAndThrowDataTruncation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reclaimLargeReusablePacket();</span><br><span class="line">    <span class="keyword">return</span> topLevelResultSet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><p>上面代码中，对分析流式查询和普通查询最关键的代码如下，大概可以判断出，代码的意思：</p>
<blockquote>
<p>若当前模式为流式查询，那么只读取（从哪里读暂不清楚）下一条存入 ResultSet；若为普通查询，则读取所有结果放入 ResultSet</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>.serverSession.hasMoreResults()) &#123;</span><br><span class="line">    <span class="type">T</span> <span class="variable">currentResultSet</span> <span class="operator">=</span> topLevelResultSet;</span><br><span class="line">    <span class="comment">// 流式查询，只读下一条，否则，将读取所有的结果</span></span><br><span class="line">    <span class="keyword">if</span> (streamResults) &#123;</span><br><span class="line">        currentResultSet = readNextResultset(currentResultSet, maxRows, <span class="literal">true</span>, isBinaryEncoded, resultSetFactory);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">this</span>.serverSession.hasMoreResults()) &#123;</span><br><span class="line">            currentResultSet = readNextResultset(currentResultSet, maxRows, <span class="literal">false</span>, isBinaryEncoded, resultSetFactory);</span><br><span class="line">        &#125;</span><br><span class="line">        clearInputStream();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="能否在MySQL连接关闭后继续使用-ResultSet"><a href="#能否在MySQL连接关闭后继续使用-ResultSet" class="headerlink" title="能否在MySQL连接关闭后继续使用 ResultSet"></a>能否在MySQL连接关闭后继续使用 <code>ResultSet</code></h4><p>下面的错误是我试图执行完 <code>executeQuery</code>之后关闭 <code>MySQL</code>服务来探究是否支持在连接断开后继续使用 <code>ResultSet</code> 的结果。</p>
<ol>
<li>结果显示使用流式查询时，若连接断开（关闭MySQL服务器），将不能再使用 <code>ResultSet</code></li>
<li>而使用普通查询时，在断开MySQL连接之后，依旧可以持续使用 <code>ResultSet</code></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.sql.SQLException: Error retrieving record: Unexpected Exception: java.io.EOFException message given: Can not read response from server. Expected to read <span class="number">1</span>,048,<span class="number">586</span> bytes, read <span class="number">573</span>,<span class="number">436</span> bytes before connection was unexpectedly lost.</span><br><span class="line"></span><br><span class="line">Nested Stack Trace:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">** BEGIN NESTED EXCEPTION ** </span><br><span class="line"></span><br><span class="line">java.io.EOFException</span><br><span class="line">MESSAGE: Can not read response from server. Expected to read <span class="number">1</span>,048,<span class="number">586</span> bytes, read <span class="number">573</span>,<span class="number">436</span> bytes before connection was unexpectedly lost.</span><br><span class="line"></span><br><span class="line">STACKTRACE:</span><br><span class="line"></span><br><span class="line">java.io.EOFException: Can not read response from server. Expected to read <span class="number">1</span>,048,<span class="number">586</span> bytes, read <span class="number">573</span>,<span class="number">436</span> bytes before connection was unexpectedly lost.</span><br><span class="line">	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:<span class="number">67</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.SimplePacketReader.readMessage(SimplePacketReader.java:<span class="number">108</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.SimplePacketReader.readMessage(SimplePacketReader.java:<span class="number">45</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readMessage(TimeTrackingPacketReader.java:<span class="number">57</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readMessage(TimeTrackingPacketReader.java:<span class="number">41</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.MultiPacketReader.readMessage(MultiPacketReader.java:<span class="number">61</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.MultiPacketReader.readMessage(MultiPacketReader.java:<span class="number">44</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.ResultsetRowReader.read(ResultsetRowReader.java:<span class="number">75</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.ResultsetRowReader.read(ResultsetRowReader.java:<span class="number">42</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.NativeProtocol.read(NativeProtocol.java:<span class="number">1583</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.result.ResultsetRowsStreaming.next(ResultsetRowsStreaming.java:<span class="number">193</span>)</span><br><span class="line">	at com.mysql.cj.protocol.a.result.ResultsetRowsStreaming.next(ResultsetRowsStreaming.java:<span class="number">62</span>)</span><br><span class="line">	at com.mysql.cj.jdbc.result.ResultSetImpl.next(ResultSetImpl.java:<span class="number">1738</span>)</span><br><span class="line">	at Main.main(Main.java:<span class="number">54</span>)</span><br><span class="line"></span><br><span class="line">** END NESTED EXCEPTION **</span><br><span class="line"></span><br><span class="line">	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:<span class="number">129</span>)</span><br><span class="line">	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:<span class="number">97</span>)</span><br><span class="line">	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:<span class="number">122</span>)</span><br><span class="line">	at com.mysql.cj.jdbc.result.ResultSetImpl.next(ResultSetImpl.java:<span class="number">1753</span>)</span><br><span class="line">	at Main.main(Main.java:<span class="number">54</span>)</span><br><span class="line">Disconnected from the target VM, address: <span class="string">&#x27;127.0.0.1:8753&#x27;</span>, transport: <span class="string">&#x27;socket&#x27;</span></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="普通查询和流式查询的网络占用情况对比"><a href="#普通查询和流式查询的网络占用情况对比" class="headerlink" title="普通查询和流式查询的网络占用情况对比"></a>普通查询和流式查询的网络占用情况对比</h4><p>通过Wireshark抓包（<strong>npcap txdy，winpcap不支持localhost抓包</strong>），发现：</p>
<ol>
<li>流式传输时，会在每一次调用 <code>rs.next</code> 之后发生一次小规模的网络传输，推测可能是传输本次所需数据</li>
<li>普通查询时，只会在一开始调用 <code>execQuery</code> 时，发生一次超大规模的网络传输，推测可能是传输完所有所需数据</li>
</ol>
<h4 id="普通查询和流式查询的内存占用情况对比"><a href="#普通查询和流式查询的内存占用情况对比" class="headerlink" title="普通查询和流式查询的内存占用情况对比"></a>普通查询和流式查询的内存占用情况对比</h4><ol>
<li>使用普通查询时，若查询结果数据量较大，则程序对应的java进程内存占用量会明显增加</li>
<li>使用流式查询时，程序对应的java进程内存占用量与所读取的数据量没有明显关联</li>
</ol>
<h3 id="游标查询与另外两种的区别"><a href="#游标查询与另外两种的区别" class="headerlink" title="游标查询与另外两种的区别"></a>游标查询与另外两种的区别</h3><p>游标查询源码暂未分析，根据查询到的资料，结合上面的测试，三种查询的异同如下：</p>
<ol>
<li><strong>流式查询</strong> 和 <strong>普通查询</strong> 的区别发生在 <strong>客户端</strong>，服务端对这两种查询的反应都是一次查询出所有所需数据，然后试图全部发送给客户端。但是 <strong>流式查询</strong> 时，客户端在调用 <code>rs.next()</code> 才给服务端返回 <code>ack（TCP协议）</code> 以接收下一条数据，导致服务端不能一直发送数据，也就达到了 <strong>流式传输</strong> 的目的，而普通查询会在 <code>execQuery()</code> 时配合服务端接受所有的数据</li>
<li><strong>流式查询</strong> 和 <strong>游标查询</strong> 的区别发生在 <strong>服务端</strong>。服务端在流式传输中的行为上面已经说明；而服务端在游标查询中的行为是：按照 <code>fecthSize</code> 的指示查询出所需数目的数据并发送给客户端，这时客户端会直接接收 <code>fetchSize</code> 条数据（相比之下，<strong>流式查询</strong>时 <strong>客户端</strong> 一次从服务端接收一条），如果客户端需要更多数据，则会再次向服务端发送请求</li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] mysql-connector-java 8.0.22 源代码<br>[2] <a href="https://www.jianshu.com/p/c7c5dbe63019">https://www.jianshu.com/p/c7c5dbe63019</a></p>
]]></content>
      <tags>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode452-用最少数量的箭引爆气球</title>
    <url>/2020/12/15/Leetcode452-%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote>
<p>在二维空间中有许多球形的气球。对于每个气球，提供的输入是水平方向上，气球直径的开始和结束坐标。由于它是水平的，所以纵坐标并不重要，因此只要知道开始和结束的横坐标就足够了。开始坐标总是小于结束坐标。</p>
<p>一支弓箭可以沿着 x 轴从不同点完全垂直地射出。在坐标 x 处射出一支箭，若有一个气球的直径的开始和结束坐标为 xstart，xend， 且满足  xstart ≤ x ≤ xend，则该气球会被引爆。可以射出的弓箭的数量没有限制。 弓箭一旦被射出之后，可以无限地前进。我们想找到使得所有气球全部被引爆，所需的弓箭的最小数量。</p>
<p>给你一个数组 points ，其中 points [i] = [xstart,xend] ，返回引爆所有气球所必须射出的最小弓箭数。</p>
<p>示例 1：</p>
<p>输入：<code>points = [[10,16],[2,8],[1,6],[7,12]]</code><br>输出：<code>2</code><br>解释：对于该样例，x = 6 可以射爆 [2,8],[1,6] 两个气球，以及 x = 11 射爆另外两个气球<br>示例 2：</p>
<p>输入：<code>points = [[1,2],[3,4],[5,6],[7,8]]</code><br>输出：<code>4</code><br>示例 3：</p>
<p>输入：<code>points = [[1,2],[2,3],[3,4],[4,5]]</code><br>输出：<code>2</code><br>示例 4：</p>
<p>输入：<code>points = [[1,2]]</code><br>输出：<code>1</code><br>示例 5：</p>
<p>输入：<code>points = [[2,3],[2,3]]</code><br>输出：<code>1</code></p>
<p>提示：</p>
<p><code>0 &lt;= points.length &lt;= 104</code><br><code>points[i].length == 2</code><br><code>-231 &lt;= xstart &lt; xend &lt;= 231 - 1</code></p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons">https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
</blockquote>
<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>贪心策略为：优先向末端最靠前的气球射箭，且射箭位置为气球末端<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> <span class="title function_">findMinArrowShots</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; points)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (points.size() == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按照气球末端的位置进行排序</span></span><br><span class="line">        sort(points.begin(), points.end(), [](auto &amp;pt1, auto &amp;pt2) &#123;</span><br><span class="line">            <span class="keyword">return</span> pt1.back() &lt; pt2.back();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录前一支箭的位置和已射出箭的数目</span></span><br><span class="line">        <span class="comment">// 默认为第0支箭的末端位置，1支箭</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">arrowPos</span> <span class="operator">=</span> points.front().back();</span><br><span class="line">        <span class="type">int</span> <span class="variable">arrCnt</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从第一支箭开始循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;points.size(); i++) &#123;</span><br><span class="line">            auto &amp;pt = points[i];</span><br><span class="line">            <span class="comment">// 只需检查前一支箭能否射中该气球，因为是按照气球末端的位置排序</span></span><br><span class="line">            <span class="comment">// 前一支箭必定是最靠近此气球末端的箭，</span></span><br><span class="line">            <span class="comment">// 若它都不能射中此气球，前面的箭就更不可能射中此气球了</span></span><br><span class="line">            <span class="keyword">if</span> (!(arrowPos &gt;= pt.front() &amp;&amp; arrowPos &lt;= pt.back()))</span><br><span class="line">            &#123;</span><br><span class="line">                ++arrCnt;</span><br><span class="line">                arrowPos = pt.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arrCnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>Greedy</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode112-买卖股票的最佳时机 II</title>
    <url>/2020/12/22/Leetcode112-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII/</url>
    <content><![CDATA[<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>贪心策略为：只要知道今天比昨天赚钱，我就一定能把这点钱给赚了且能保证绝不在任意一天亏钱！具体可以按如下方法操作：</p>
<blockquote>
<p>假如我知道第 <code>i+1</code> 天股价高于第 <code>i</code> 天，那就一定可以赚到这笔钱。  </p>
<blockquote>
<p>假如我在第 <code>i</code> 天未持有股票，那就选择购买股票<br>假如我在第 <code>i</code> 天持有股票，那保留股票即可，无需操作  </p>
</blockquote>
<p>假如我知道第 <code>i+1</code> 天股价低于第 <code>i</code> 天，我一定可以保证不亏钱。  </p>
<blockquote>
<p>假如我在第 <code>i</code> 天未持有股票，那就不进行操作<br>假如我在第 <code>i</code> 天持有股票，那就售出股票  </p>
</blockquote>
</blockquote>
<p>在知道一定可以赚取所有收益且无任何亏损的情况下就不必实际进行买卖操作了，只需计算出前后两天之间的股价差，把所有的正值累加即可。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; prices)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">postiveSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;prices.size(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> prices[i] - prices[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (diff &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                postiveSum += diff;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> postiveSum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>Greedy</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode763-划分字母区间</title>
    <url>/2020/12/22/Leetcode763-%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4/</url>
    <content><![CDATA[<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><p>贪心策略为：从头开始搜索，使子串尽可能短。此题最关键的是事先确定每一个字符最后一次出现位置。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; <span class="title function_">partitionLabels</span><span class="params">(string S)</span> &#123;</span><br><span class="line">        <span class="comment">// 记录每个字母最后一次出现的位置</span></span><br><span class="line">        map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; lastPos;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i&lt;S.size(); i++)</span><br><span class="line">            lastPos[S[i]] = i;</span><br><span class="line"></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; retVec; </span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">pos</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(pos &lt; S.size()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">startPos</span> <span class="operator">=</span> pos;</span><br><span class="line">            <span class="type">int</span> <span class="variable">endPos</span> <span class="operator">=</span> lastPos[S[pos]];</span><br><span class="line">            <span class="keyword">for</span> (; pos &lt;= endPos; pos++) &#123;</span><br><span class="line">                endPos = max(endPos, lastPos[S[pos]]);</span><br><span class="line">            &#125;</span><br><span class="line">            retVec.push_back(pos - startPos);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> retVec;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>Greedy</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Xorg的Linux桌面环境（一）</title>
    <url>/2020/12/28/%E5%9F%BA%E4%BA%8EXorg%E7%9A%84Linux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>使用Linux桌面环境也两三年了，也曾几次打开介绍Xorg的文章，不过基本都是简单看一眼就过去了，这次打算好好看下基于Xorg的Liunx桌面环境总体构成、运行原理。</p>
<h2 id="X基本知识"><a href="#X基本知识" class="headerlink" title="X基本知识"></a>X基本知识</h2><h3 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h3><p>X: 即 X Window System，提供了用于构建GUI系统所需的基本框架或原语，这仅仅是一个规范，并不是实现<br>X11: X的最新版本<br>Xorg: 目前最流行的X实现<br>下文可能会混用这些词汇，但很多地方可以认为泛指X Window System  </p>
<h3 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h3><p>X采用C/S架构，由 <code>X Server</code> 和 <code>X Client</code> 组成，两者之间使用 <code>X Protocol</code> 进行通信。<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201229235024.png" alt="Xorg C/S" height="400"/></p>
<h3 id="C-S架构解释"><a href="#C-S架构解释" class="headerlink" title="C/S架构解释"></a>C/S架构解释</h3><p>在Xorg中，Server 和 Client划分可能并不是那么合乎人们的日常认识。  </p>
<ol>
<li>X Server运行在用户端，X Server控制显示器以及外设资源，但是它并不知道要绘制什么样的画面。  </li>
<li>X Client是应用程序，可以运行在远程服务器上，它本身并没有显示器资源，它与X Server通信以指示X Server绘制画面，还可以接收X Server发过来的外设操作指令。</li>
<li>这里的C/S划分是从Xorg的视角说的，根据显示器资源和外设资源而定的，X Server拥有显示器资源和外设资源，并向X Client（应用程序）提供服务。</li>
</ol>
<h2 id="启动一个X-Server并将X-Client连接到X-Server"><a href="#启动一个X-Server并将X-Client连接到X-Server" class="headerlink" title="启动一个X Server并将X Client连接到X Server"></a>启动一个X Server并将X Client连接到X Server</h2><p>平时使用的桌面环境都具有开箱即用的桌面环境，对用户屏蔽了Xorg的工作细节，因此这一次我决定使用Arch Linux从零配置基于Xorg的GUI环境。</p>
<h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><p>Arch Linux KVM 虚拟机，基本都是默认配置，按照<a href="https://wiki.archlinux.org/index.php/installation_guide">官方安装指引教程</a>安装即可，网卡也是默认的桥接模式。  </p>
<p>关于联网有一点需要注意：在安装好系统之后先不要重启，要在有网环境下在目标系统中安装好 <code>dhcpcd</code>，<br>然后重启进入系统，执行如下命令，再重启，系统就会自动通过<code>dhcpcd</code>为连接到局域网的网卡分配ip了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> dhcpd</span><br><span class="line">systemctl start dhcpd</span><br></pre></td></tr></table></figure>
<p>至于添加用户、配置sudo这种事情就不多说了。</p>
<h3 id="Xorg安装"><a href="#Xorg安装" class="headerlink" title="Xorg安装"></a>Xorg安装</h3><p>按照<a href="https://wiki.archlinux.org/index.php/Xorg">Arch官方指引</a>进行即可</p>
<h3 id="启动X-Server"><a href="#启动X-Server" class="headerlink" title="启动X Server"></a>启动X Server</h3><p>启动X Server，此处仅指定了一个<code>DisplayNumber</code>参数。  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">X :0</span><br></pre></td></tr></table></figure>
<p>启动之后，X Server就会接管显示器和外设资源，并为X Client提供服务。在执行完成上述命令之后，<br>由于还没有X Client连接至此X Server，虚拟机当中的虚拟显示器会黑屏，无法继续操作，需要有X Client连接上才能恢复（一旦连接，X Client会指示X Server进行UI绘制，然后就可以操作X Client对应的应用程序了）</p>
<h3 id="手动在本地启动X-Client并连接至X-Server"><a href="#手动在本地启动X-Client并连接至X-Server" class="headerlink" title="手动在本地启动X Client并连接至X Server"></a>手动在本地启动X Client并连接至X Server</h3><p>启动X Server的时候，显示器资源已经被X Server接管了，原本的终端应该已经无法正常使用了，可以使用ssh(当然，在此之前需要安装openssh并启动sshd)连接到虚拟机进行下面的操作。说起连接虚拟机就需要获取虚拟机IP，我所使用的KVM虚拟机可以在主机中用下面的命令获取已分配的IP：<code>virsh net-dhcp-leases default</code></p>
<p>要想启动X Client，首先要配置<code>DISPALY</code>环境变量：<code>[Address]:{DisplayNumber}.{ScreenNumber}</code> ,<br><code>ScreenNumber</code>的具体含义暂不深究，这里使用0是可行的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DISPLAY=:0.0</span><br></pre></td></tr></table></figure>
<p>然后就可以启动X Client了，可以直接启动 <code>xterm</code>，也可以启动 <code>twm</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xterm &amp;</span><br><span class="line">twm &amp;</span><br></pre></td></tr></table></figure>
<p>此时原本被X Server控制的屏幕应该就会出现上面启动的X Client了。<br>至此，我们已经使用手动的方式启动X Server，并将X Client连接至X Server了，似乎Xorg已经不再那么神秘了呢！  </p>
<h2 id="X-Forwarding"><a href="#X-Forwarding" class="headerlink" title="X Forwarding"></a>X Forwarding</h2><p>上面实现了本地X Server和本地X Client之间的连接，那么如何通过网络连接处于不同设备的X Server和X Client呢？</p>
<p>一种方式是使用ssh 的 X Forwarding功能（有没有其它办法我也不知道）。</p>
<p>接下来将说明如何通过X Forwarding功能在我的Ubuntu系统上运行位于Arch虚拟机当中的xterm程序。<br>架构如下。</p>
<ol>
<li>远程机器需要具备运行X Client的环境，但是不需要具备桌面环境  </li>
<li>本地机器需要具有显示器等运行X Server所需要的资源</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201230023346.png" width="500" alt="X Forwarding"></p>
<h3 id="配置Arch虚拟机"><a href="#配置Arch虚拟机" class="headerlink" title="配置Arch虚拟机"></a>配置Arch虚拟机</h3><h4 id="启用sshd的X-Forwarding功能"><a href="#启用sshd的X-Forwarding功能" class="headerlink" title="启用sshd的X Forwarding功能"></a>启用sshd的X Forwarding功能</h4><p>修改 <code>/etc/ssh/sshd_config</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">AllowTcpForwarding yes</span><br><span class="line">...</span><br><span class="line">X11Forwarding yes</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>然后重启sshd服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart sshd </span><br></pre></td></tr></table></figure>
<p>安装<a href="https://www.x.org/releases/X11R7.7/doc/man/man1/xauth.1.xhtml">xauth</a>程序，用于X Forwarding，没有这个软件就无法正常使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S xorg-xauth </span><br></pre></td></tr></table></figure>
<h3 id="在Ubuntu桌面环境下上使用ssh-X-Forwarding启动虚拟机中的xterm"><a href="#在Ubuntu桌面环境下上使用ssh-X-Forwarding启动虚拟机中的xterm" class="headerlink" title="在Ubuntu桌面环境下上使用ssh X Forwarding启动虚拟机中的xterm"></a>在Ubuntu桌面环境下上使用ssh X Forwarding启动虚拟机中的xterm</h3><p>使用ssh -X连接至remote Arch</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -X user@host</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201230030200.png" alt="">  </p>
<p>可以看到，在X Forawding正常启动的情况下，remote Arch的 <code>DISPLAY</code> 变量已经被设置好了</p>
<p>然后就可以启动X Client了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xterm</span><br></pre></td></tr></table></figure>
<p>不仅xterm，firefox这样的程序也是可以启动的<img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201230031248.png" alt="remote Firefox"></p>
<h3 id="X-Forwarding与VNC、RDP技术的比较"><a href="#X-Forwarding与VNC、RDP技术的比较" class="headerlink" title="X Forwarding与VNC、RDP技术的比较"></a>X Forwarding与VNC、RDP技术的比较</h3><p>很遗憾，经过查阅资料，得知 <code>X Forwarding</code> 应用领域和可靠性不如另外两种技术。</p>
<ol>
<li><p>X Forwarding对的带宽要求比另外两者高，因为X Client需要发送所有的绘制指令至X Server，然后由X Server绘制，而VNC技术直接传输图像，从理论上来说X Forward应该需要更少的网络资源才对，而实际上绘制指令往往比较随机，难以有效压缩，但VNC技术能有效利用现有数据压缩技术减少数据量，参考<a href="https://bharath.lohray.com/weblog/vnc-vs-x11/]">这篇博文</a></p>
</li>
<li><p>X Forwarding本身没有断线重连机制，即使可以使用screen对终端进行断线重连，也无法恢复经过X Forwarding的应用程序，参考<a href="https://en.wikipedia.org/wiki/X_Window_System#Network">维基百科</a></p>
<blockquote>
<p>An X client cannot generally be detached from one server and reattached to another unless its code specifically provides for it (Emacs is one of the few common programs with this ability). As such, moving an entire session from one X server to another is generally not possible. </p>
</blockquote>
</li>
</ol>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="https://www.x.org/releases/X11R7.7/doc/man/man1/index.xhtml">Xorg-Utils: Xorg体系中的一些命令行工具</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Xorg">Xorg-ArchWiki</a></li>
<li><a href="https://en.wikipedia.org/wiki/X_Window_System">X Window System-Wikipedia</a></li>
<li><a href="https://bharath.lohray.com/weblog/vnc-vs-x11/">VNC vs X11</a></li>
</ul>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>X</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux GUI无响应解决办法</title>
    <url>/2020/12/29/Linux%20GUI%E6%97%A0%E5%93%8D%E5%BA%94%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>使用 <code>Ctrl+Alt+F1..7</code> 切换到一个console，然后执行下面的命令杀掉 <code>Xorg进程</code>即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pkill Xorg</span><br></pre></td></tr></table></figure>
<p>如何连其它console都进不去，只能强制关机重启了</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Xorg的Linux桌面环境（二）</title>
    <url>/2020/12/29/%E5%9F%BA%E4%BA%8EXorg%E7%9A%84Linux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>在上一篇文章了解了X Window System的基本架构，现在来讨论如何使用。<br>本文关注的是如何在本机启动基于X的桌面环境，以及如何配置使其自动启动，最后讨论了执行 <code>X</code> 命令所需的权限。</p>
<p>本文主要涉及这几个概念或程序。</p>
<ol>
<li>xinit - X Window System initializer</li>
<li>startx - initialize an X session</li>
<li>Xsession - initialize X session</li>
</ol>
<h2 id="在本地启动X-Server和X-Client并连接"><a href="#在本地启动X-Server和X-Client并连接" class="headerlink" title="在本地启动X Server和X Client并连接"></a>在本地启动X Server和X Client并连接</h2><p>在上一篇文章讲了手动启动X Server，然后再启动X Client，使其连接到所创建X Server的方法。<br>但是使用那种操作方式虽然直观，但是一旦X Server启动成功，虚拟机显示器和其它外设便会由X Server接管，<br>也就无法在<strong>虚拟机本机</strong>同时完成X Server和X Client的启动。那么如何只使用一台机器完成操作呢？  </p>
<blockquote>
<p>也许使用对X使用vt参数可以借助虚拟终端完成本地启动？</p>
<p>这个想法在我电脑的Ubuntu系统上是可行的，可以在启动 <code>X</code> 时通过 <code>vtN</code> 参数指定其所占用的虚拟终端，这样一来执行 <code>X</code> 之后还能通过 <code>Ctrl+Alt+FN</code> 切回原来的console/tty，在其中启动X Client，并连接至刚才启动的X Server。<br>但是在虚拟机中的Arch里面似乎在试图切换到其它tty的时候会死机，暂不清楚原因，也许跟视频驱动有关系。</p>
</blockquote>
<p>可以使用shell脚本完成。</p>
<h3 id="使用SHELL脚本完成GUI启动"><a href="#使用SHELL脚本完成GUI启动" class="headerlink" title="使用SHELL脚本完成GUI启动"></a>使用SHELL脚本完成GUI启动</h3><p>可以创建如下脚本，使用bash执行。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> DISPLAY=:0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># X Server</span></span><br><span class="line">X :0 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># sleep是为了等待X Server启动</span></span><br><span class="line"><span class="comment"># 否则有可能因为X Client试图连接到X Server失败而退出</span></span><br><span class="line"><span class="comment"># 导致X Server最终启动成功，却没有X Client</span></span><br><span class="line"><span class="built_in">sleep</span> 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># X Client</span></span><br><span class="line">i3 &amp;</span><br></pre></td></tr></table></figure>
<p>使用root权限执行脚本就可以看到i3桌面环境了，如果想要回到刚才的命令行界面，可以在i3桌面下调出xterm，执行<code>pkill Xorg</code>。</p>
<details>
<summary>之前由于未加sleep语句而导致的愚蠢错误</summary>
<pre>
<blockquote>
<p><strong>破案了！！！在X Client前面加上一句 <code>sleep 3</code> 就能正常启动了，推测是因为X Server还没完全启动，xterm就尝试连接，发现失败，然后报错了，，，</strong><br><strong>之前犯的愚蠢错误，可以忽略</strong><br>虽然说X Client应该没有什么限制，但至少可以排除一个xterm，该程序似乎无法用超级用户权限执行（这么说应该不合适，因为随后进入i3桌面之后可以调出xterm，但是把脚本中i3换成xterm确实看不到它正常显示），也就是说如果把脚本中的i3换成xterm，看起来和只执行X是一样的效果，这一现象一度使我误以为X Server启动之后，后面的命令便无法执行了（显然这种猜测不合常理）。
报错信息如下：<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201230080643.png" alt="error"></p>
</blockquote>
</pre>
</details>

<h3 id="模拟非root用户登录"><a href="#模拟非root用户登录" class="headerlink" title="模拟非root用户登录"></a>模拟非root用户登录</h3><p>上面的脚本执行完毕会以root用户的身份启动X Client应用。这和平时所用的桌面环境行为并不一致，那么如何修改上述脚本从而以普通用户的身份启动i3桌面呢？可以像下面这样：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># X Server</span></span><br><span class="line">X :0 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># sleep是为了等待X Server启动</span></span><br><span class="line"><span class="comment"># 否则有可能因为X Client试图连接到X Server失败而退出</span></span><br><span class="line"><span class="comment"># 导致X Server最终启动成功，却没有X Client</span></span><br><span class="line"><span class="built_in">sleep</span> 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># X Client</span></span><br><span class="line"><span class="comment"># 需要设置 DISPLAY 变量</span></span><br><span class="line">su lpy -l -c <span class="string">&quot;DISPLAY=:0.0 i3 &amp;&quot;</span></span><br></pre></td></tr></table></figure>
<p>该脚本与上面的不同之处仅在X Client上，借助 <code>su $USER -l -c ...</code> 来以普通用户的身份启动X Client即可。</p>
<p>在这里使用 <code>-l</code> 参数是为了模拟<code>login</code>，避免当前root用户身份下的一些配置被传递给 i3 进程。<br>当时我遇到的情况是，由于环境变量<code>PWD=/root</code>被传递给了i3，我在i3中启动的xterm初始路径会是<code>/root</code>，尽管当时是以 <code>lpy</code> 的身份启动i3的。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-, -l, --login</span><br><span class="line">       Start the shell as a login shell with an environment similar to a real lo‐</span><br><span class="line">       gin:</span><br><span class="line"></span><br><span class="line">          o      clears  all  the environment variables except TERM and variables</span><br><span class="line">                 specified by --whitelist-environment</span><br><span class="line"></span><br><span class="line">          o      initializes the environment variables HOME,  SHELL,  USER,  LOG‐</span><br><span class="line">                 NAME, and PATH</span><br><span class="line"></span><br><span class="line">          o      changes to the target user&#x27;s home directory</span><br><span class="line"></span><br><span class="line">          o      sets  argv[0]  of  the shell to &#x27;-&#x27; in order to make the shell a</span><br><span class="line">                 login shell</span><br></pre></td></tr></table></figure>
<p>至此我们了解了利用脚本启动X Window System的方法。<br>这种方式还有个致命的缺陷，一旦一不小心退出了X Client，由于X Server还控制着显示器和其它外设，我们将无法进行其它操作。  </p>
<p><strong>新的疑问：能否在脚本里面指定<code>vt_n</code>这样的参数将其运行在某个虚拟终端上，而不是像现在这样无法切换虚拟终端？</strong>  </p>
<h2 id="xinit-和-startx"><a href="#xinit-和-startx" class="headerlink" title="xinit 和 startx"></a>xinit 和 startx</h2><p>自己完全控制X Server 和 X Client的启动及连接并不方便，现在介绍另外两个用于启动X Window System的工具。  </p>
<h3 id="xinit"><a href="#xinit" class="headerlink" title="xinit"></a>xinit</h3><p><a href="https://www.x.org/releases/X11R7.6/doc/man/man1/xinit.1.xhtml">xinit</a> 是X Window System的初始化程序。</p>
<p>该程序用于在不使用Diaplay Manager（例如xdm）的系统中启动X Server和第一个X Client程序，当其启动的第一个X Client程序退出之后，xinit将会关闭X Server，然后退出。</p>
<p>从console执行下面的命令可以启动i3，并且一旦i3退出，相应X Server也会退出，可以回到console。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo xinit i3</span><br></pre></td></tr></table></figure>
<blockquote>
<p>官方文档似乎提到了对出现在xinit参数中的程序名格式的限制，但这里并没有遵守，也可以正常执行  </p>
<p>An  alternate client and/or server may be specified on the command line.  The de‐<br>       sired client program and its arguments should be given as the first command  line<br>       arguments to xinit.  To specify a particular server command line, append a double<br>       dash (—) to the xinit command line (after any client and arguments) followed  by<br>       the desired server command.</p>
<p>Both  the client program name and the server program name must begin with a slash<br>       (/) or a period (.).  Otherwise, they are treated as an arguments to be  appended<br>       to  their respective startup lines.  This makes it possible to add arguments (for<br>       example, foreground and background colors) without having  to  retype  the  whole<br>       command line.</p>
</blockquote>
<p>具体用法参考<a href="https://www.x.org/releases/X11R7.6/doc/man/man1/xinit.1.xhtml">官方文档</a>。</p>
<p>关于xinit，很重要的一点是要理解它的行为，它会启动两个程序，一个叫做作 <code>A</code>(称为Client)，另一个叫作<code>B</code>（称为Server），一旦它检测到 <code>A</code> 进程结束，它就会终止 <code>B</code> 进程。<br>也许可以这么说（我瞎猜的），xinit程序本身并不知道它所启动的到底是两个什么程序，它所做的事情仅仅是等待 <code>A</code> 完成，然后终止 <code>B</code>。只要按照约定将 <code>X Client</code> 程序传递给它作为 <code>A</code>，将 <code>X Server</code> 传递给它作为 <code>B</code>，就能实现 <code>X Client</code> 进程结束时自动终止 <code>X Server</code> 的效果。<strong>也许可以尝试使用SHELL脚本模拟这个过程。</strong>  </p>
<p>理解了这个过程，就可以讨论 <code>xinit</code> 所接受的<code>程序参数</code>类型了。既然只要可以运行为一个进程就可以，也就不是必须传递给它二进制程序了，SHELL脚本也是可以的，因为可以由xinit创建一个sh进程执行脚本，然后将此sh进程作为所谓的的 <code>Client</code> 进程，等待它结束然后去终止 <code>Server</code>进程，同样的，所谓的 <code>Server</code> 进程也可以是shell脚本。  </p>
<p>在实际使用中，几乎总是使用脚本作为<code>程序参数</code>传递给xinit，并在 <code>Server</code> 脚本的最后使用 <code>exec</code> 命令启动<code>X Server</code>，这样一来就能将此sh进程转变成 <code>X Server</code> 进程，在 <code>Client</code> 脚本的最后使用 <code>exec</code> 命令启动 <code>X Client</code>，然后xinit按照其运行逻辑等待 <code>Client</code> 进程结束并终止 <code>Server</code> 即可。</p>
<p>而且，如何没有给xinit提供client和server参数，xinit会使用缺省参数，它会将 <code>/etc/X11/xinit/xserverrc</code> 作为 <code>Server</code>，将 <code>/etx/X11/xinit/xinitrc</code> 作为 <code>Client</code>。</p>
<p>下面的就是 <code>/etc/X11/xinit/xserverrc</code> 的内容，其实它就做了一件事，就是使用 <code>exec</code> 在sh进程空间运行 <code>X</code>。注意命令最后的 <code>$@</code>，意思是接收所有传递给该脚本的的命令行参数并传递给 <code>/usr/bin/X</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">exec</span> /usr/bin/X -nolisten tcp <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="startx"><a href="#startx" class="headerlink" title="startx"></a>startx</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p><code>startx</code> 是 <code>xinit</code> 的一个前端，是一个shell脚本，位于 <code>/usr/bin/startx</code>。  </p>
<p>既然已经有了<code>xinit</code>，为什么还需要 <code>startx</code>呢？<br>因为 <code>xinit</code> 的缺省配置并不友好，它的缺省 <code>DISPLAY</code> 总是 <code>:0</code>，默认情况不会使用 <code>vt_N</code> 参数使用虚拟终端，它仅仅提供了最基本的功能，几乎需要指明各种参数。  </p>
<p>而 <code>startx</code> 所做的事情就是在 <code>xinit</code> 的基础上按照其定义的策略确定一组恰当的默认配置参数，然后用这组参数调用 <code>xinit</code> 从而完成启动，从而减轻用户使用负担。它负责确定的配置，包括 <code>DISPLAY</code> 、 <code>vt_N</code>、<code>client</code>、<code>client_options</code>、<code>server</code>、<code>server_options</code>等。除了负责确定一组合适的xinit调用参数，它还会进行一些 <code>X Window System</code> 鉴权相关操作，比如设置 <code>xhost</code>，<code>xauth</code>等。</p>
<p><code>startx</code> 的参数格式也与 <code>xinit</code> 完全相同，可以像调用 <code>xinit</code> 那样直接调用 <code>startx</code>。下面的命令就可以在第8个虚拟终端上启动X Server和i3wm。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">startx i3 -- :0 vt8</span><br></pre></td></tr></table></figure>
<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>配置文件其实就是要传递给 xinit 的 Client 和 Server 脚本。在 commandline options 中提供的 Server 和  Client 优先级最高，如果用户没有提供 Client 和 Server 参数，startx 就会按照其约定的规则搜索确定要使用的 Client 和 Server 脚本。  </p>
<p>startx 相比 xinit 增加了用户配置文件的概念，会优先搜索用户配置 <code>~/.xinitrc</code> 作为 xinit 的 client，搜索 <code>~/.xserverrc</code> 作为 xinit 的 server，如果用户配置不存在，才会继续搜索系统配置文件。</p>
<p>具体配置文件路径及匹配规则如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">To determine the client to run, startx looks for the following files, in order:</span><br><span class="line"></span><br><span class="line">              $(HOME)/.startxrc</span><br><span class="line"></span><br><span class="line">              /usr/lib/x86_64-linux-gnu/sys.startxrc</span><br><span class="line"></span><br><span class="line">              $(HOME)/.xinitrc</span><br><span class="line"></span><br><span class="line">              /etc/X11/xinit/xinitrc</span><br><span class="line"></span><br><span class="line">       If  command line client options are given, they override this behavior and revert</span><br><span class="line">       to the xinit(1) behavior.  To determine the server to run, startx first looks for</span><br><span class="line">       a  file called .xserverrc in the user&#x27;s home directory.  If that is not found, it</span><br><span class="line">       uses the file xserverrc in the xinit library directory.  If command  line  server</span><br><span class="line">       options  are given, they override this behavior and revert to the xinit(1) behav‐</span><br><span class="line">       ior.  Users rarely need to provide a .xserverrc file.  See  the  xinit(1)  manual</span><br><span class="line">       page for more details on the arguments.</span><br><span class="line"></span><br><span class="line">       The  system-wide  xinitrc and xserverrc files are found in the /etc/X11/xinit di‐</span><br><span class="line">       rectory.</span><br></pre></td></tr></table></figure>
<h4 id="基于Debian的系统-XSession文件"><a href="#基于Debian的系统-XSession文件" class="headerlink" title="基于Debian的系统-XSession文件"></a>基于Debian的系统-XSession文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Note that in the Debian system, what many people traditionally put in the  .xini‐</span><br><span class="line">       trc  file  should go in .xsession instead; this permits the same X environment to</span><br><span class="line">       be presented whether startx, xdm, or xinit is used to start the  X  session.  All</span><br><span class="line">       discussion  of the .xinitrc file in the xinit(1) manual page applies equally well</span><br><span class="line">       to .xsession.  Keep in mind that .xinitrc is used only by xinit(1) and completely</span><br><span class="line">       ignored by xdm(1).</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>使用 <code>man Xsession</code> 命令进一步了解，这是Debian对<a href="https://wiki.debian.org/Xsession">Xsession</a>的介绍。</p>
<p>在我的Ubuntu系统上，<code>/etc/X11/xinit/xinitrc</code> 只是简单地执行了 <code>/etc/X11/Xsession</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line"># /etc/X11/xinit/xinitrc</span><br><span class="line">#</span><br><span class="line"># global xinitrc file, used by all X sessions started by xinit (startx)</span><br><span class="line"></span><br><span class="line"># invoke global X session script</span><br><span class="line">. /etc/X11/Xsession</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="startx脚本分析"><a href="#startx脚本分析" class="headerlink" title="startx脚本分析"></a>startx脚本分析</h2><p>如果需要在console启动X Windows System，一般会使用 <code>startx</code>， 因此理解 <code>startx</code> 的执行过程有助于更好地理解其配置方法。下面是我对startx脚本的简单注释，主要是指出了一些我之前未曾接触过的shell语法。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This is just a sample implementation of a slightly less primitive</span></span><br><span class="line"><span class="comment"># interface than xinit. It looks for user .xinitrc and .xserverrc</span></span><br><span class="line"><span class="comment"># files, then system xinitrc and xserverrc files, else lets xinit choose</span></span><br><span class="line"><span class="comment"># its default. The system xinitrc should probably do things like check</span></span><br><span class="line"><span class="comment"># for .Xresources files and merge them in, start up a window manager,</span></span><br><span class="line"><span class="comment"># and pop a clock and several xterms.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Site administrators are STRONGLY urged to write nicer versions.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> DBUS_SESSION_BUS_ADDRESS</span><br><span class="line"><span class="built_in">unset</span> SESSION_MANAGER</span><br><span class="line">userclientrc=<span class="variable">$HOME</span>/.xinitrc</span><br><span class="line">sysclientrc=/etc/X11/xinit/xinitrc</span><br><span class="line"></span><br><span class="line">userserverrc=<span class="variable">$HOME</span>/.xserverrc</span><br><span class="line">sysserverrc=/etc/X11/xinit/xserverrc</span><br><span class="line">defaultclient=/usr/bin/xterm</span><br><span class="line">defaultserver=/usr/bin/X</span><br><span class="line">defaultclientargs=<span class="string">&quot;&quot;</span></span><br><span class="line">defaultserverargs=<span class="string">&quot;&quot;</span></span><br><span class="line">defaultdisplay=<span class="string">&quot;&quot;</span></span><br><span class="line">clientargs=<span class="string">&quot;&quot;</span></span><br><span class="line">serverargs=<span class="string">&quot;&quot;</span></span><br><span class="line">vtarg=<span class="string">&quot;&quot;</span></span><br><span class="line">enable_xauth=1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically determine an unused $DISPLAY</span></span><br><span class="line"><span class="comment"># 自动找一个可用的 $DISPLAY</span></span><br><span class="line"><span class="comment">#（如果用户没有通过命令行界面指定 DISPLAY，就会使用这个参数）</span></span><br><span class="line">d=0</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> ; <span class="keyword">do</span></span><br><span class="line">    [ -e <span class="string">&quot;/tmp/.X<span class="variable">$d</span>-lock&quot;</span> -o -S <span class="string">&quot;/tmp/.X11-unix/X<span class="variable">$d</span>&quot;</span> ] || <span class="built_in">break</span></span><br><span class="line">    d=$((<span class="variable">$d</span> + <span class="number">1</span>))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">defaultdisplay=<span class="string">&quot;:<span class="variable">$d</span>&quot;</span></span><br><span class="line"><span class="built_in">unset</span> d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这一部分主要解析传递给 startx 的命令行参数，之后会传递给 xinit</span></span><br><span class="line">whoseargs=<span class="string">&quot;client&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个判断条件的意思是，$1不为空</span></span><br><span class="line"><span class="comment"># 看起来有点奇怪，可能是早期shell的限制导致不得不这么写吧</span></span><br><span class="line"><span class="keyword">while</span> [ x<span class="string">&quot;<span class="variable">$1</span>&quot;</span> != x ]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    <span class="comment"># &#x27;&#x27; required to prevent cpp from treating &quot;/*&quot; as a C comment.</span></span><br><span class="line">    /<span class="string">&#x27;&#x27;</span>*|\./<span class="string">&#x27;&#x27;</span>*) <span class="comment"># 匹配一个看起来像是路径的东西</span></span><br><span class="line">    <span class="comment"># 这个 PATTERN 可能是专门用来匹配 client 或 server 程序的</span></span><br><span class="line">    <span class="comment"># 这么奇怪可能与 xinit 对程序名这个参数的限制有关系</span></span><br><span class="line">    <span class="comment"># 似乎要求必须以 / 或 . 开头</span></span><br><span class="line">    <span class="comment"># 但是 xinit i3 又能正常执行启动i3桌面，又如何解释呢？</span></span><br><span class="line">    <span class="comment"># xinit 文档里是这么说的</span></span><br><span class="line">    <span class="comment"># An  alternate client and/or server may be specified on the command line.  The de‐</span></span><br><span class="line">    <span class="comment">#   sired client program and its arguments should be given as the first command  line</span></span><br><span class="line">    <span class="comment">#   arguments to xinit.  To specify a particular server command line, append a double</span></span><br><span class="line">    <span class="comment">#   dash (--) to the xinit command line (after any client and arguments) followed  by</span></span><br><span class="line">    <span class="comment">#   the desired server command.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Both  the client program name and the server program name must begin with a slash</span></span><br><span class="line">    <span class="comment">#   (/) or a period (.).  Otherwise, they are treated as an arguments to be  appended</span></span><br><span class="line">    <span class="comment">#   to  their respective startup lines.  This makes it possible to add arguments (for</span></span><br><span class="line">    <span class="comment">#   example, foreground and background colors) without having  to  retype  the  whole</span></span><br><span class="line">    <span class="comment">#   command line.</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 当前处理的是关于client的参数（--分隔符之前）</span></span><br><span class="line"> <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$whoseargs</span>&quot;</span> = <span class="string">&quot;client&quot;</span> ]; <span class="keyword">then</span> </span><br><span class="line">     <span class="comment"># 如何还未设置client及其options（按照约定client路径应该作为第一个参数）</span></span><br><span class="line">     <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$client</span>&quot;</span> = x ] &amp;&amp; [ x<span class="string">&quot;<span class="variable">$clientargs</span>&quot;</span> = x ]; <span class="keyword">then</span> </span><br><span class="line">  client=<span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="comment"># 设置 client</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">  clientargs=<span class="string">&quot;<span class="variable">$clientargs</span> <span class="variable">$1</span>&quot;</span> <span class="comment"># 设置 client options</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">     <span class="comment"># 当前处理的是关于server的参数（--分隔符之前）</span></span><br><span class="line">     <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$server</span>&quot;</span> = x ] &amp;&amp; [ x<span class="string">&quot;<span class="variable">$serverargs</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">  server=<span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="comment"># 设置 server</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">  serverargs=<span class="string">&quot;<span class="variable">$serverargs</span> <span class="variable">$1</span>&quot;</span> <span class="comment"># 设置 server options</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"> ;;</span><br><span class="line"></span><br><span class="line">   <span class="comment"># 遇到这个分隔符，表明接下来的是 server 相关参数</span></span><br><span class="line">    --)</span><br><span class="line"> whoseargs=<span class="string">&quot;server&quot;</span></span><br><span class="line"> ;;</span><br><span class="line">    *)</span><br><span class="line"> <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$whoseargs</span>&quot;</span> = <span class="string">&quot;client&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">     clientargs=<span class="string">&quot;<span class="variable">$clientargs</span> <span class="variable">$1</span>&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">     <span class="comment"># display must be the FIRST server argument</span></span><br><span class="line">     <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$serverargs</span>&quot;</span> = x ] &amp;&amp; \</span><br><span class="line">   <span class="built_in">expr</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> : <span class="string">&#x27;:[0-9][0-9]*$&#x27;</span> &gt; /dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">  display=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">  serverargs=<span class="string">&quot;<span class="variable">$serverargs</span> <span class="variable">$1</span>&quot;</span></span><br><span class="line">     <span class="keyword">fi</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"> ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># process client arguments</span></span><br><span class="line"><span class="comment"># 如果未通过commandline options确定client，就根据顺序选定一个配置脚本作为client </span></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$client</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">    client=<span class="variable">$defaultclient</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># For compatibility reasons, only use startxrc if there were no client command line arguments</span></span><br><span class="line">    <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$clientargs</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$userclientrc</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            client=<span class="variable">$userclientrc</span></span><br><span class="line">        <span class="keyword">elif</span> [ -f <span class="string">&quot;<span class="variable">$sysclientrc</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            client=<span class="variable">$sysclientrc</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if no client arguments, use defaults</span></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$clientargs</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">    clientargs=<span class="variable">$defaultclientargs</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果未通过commandline options确定server，就根据顺序选定一个配置脚本作为server </span></span><br><span class="line"><span class="comment"># process server arguments</span></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$server</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">    server=<span class="variable">$defaultserver</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># When starting the defaultserver start X on the current tty to avoid</span></span><br><span class="line">    <span class="comment"># the startx session being seen as inactive:</span></span><br><span class="line">    <span class="comment"># &quot;https://bugzilla.redhat.com/show_bug.cgi?id=806491&quot;</span></span><br><span class="line">    <span class="built_in">tty</span>=$(<span class="built_in">tty</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">expr</span> <span class="string">&quot;<span class="variable">$tty</span>&quot;</span> : <span class="string">&#x27;/dev/tty[0-9][0-9]*$&#x27;</span> &gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">        tty_num=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$tty</span>&quot;</span> | grep -oE <span class="string">&#x27;[0-9]+$&#x27;</span>)</span><br><span class="line">        vtarg=<span class="string">&quot;vt<span class="variable">$tty_num</span> -keeptty&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># For compatibility reasons, only use xserverrc if there were no server command line arguments</span></span><br><span class="line">    <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$serverargs</span>&quot;</span> = x -a x<span class="string">&quot;<span class="variable">$display</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$userserverrc</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">     server=<span class="variable">$userserverrc</span></span><br><span class="line"> <span class="keyword">elif</span> [ -f <span class="string">&quot;<span class="variable">$sysserverrc</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">     server=<span class="variable">$sysserverrc</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if no server arguments, use defaults</span></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$serverargs</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">    serverargs=<span class="variable">$defaultserverargs</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置vt参数（虚拟终端编号）</span></span><br><span class="line"><span class="comment"># if no vt is specified add vtarg (which may be empty)</span></span><br><span class="line">have_vtarg=<span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$serverargs</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">expr</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> : <span class="string">&#x27;vt[0-9][0-9]*$&#x27;</span> &gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">        have_vtarg=<span class="string">&quot;yes&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$have_vtarg</span>&quot;</span> = <span class="string">&quot;no&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    serverargs=<span class="string">&quot;<span class="variable">$serverargs</span> <span class="variable">$vtarg</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if no display, use default</span></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$display</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">    display=<span class="variable">$defaultdisplay</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这一部分控制身份验证相关的内容，还没仔细看</span></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$enable_xauth</span>&quot;</span> = x1 ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$XAUTHORITY</span>&quot;</span> = x ]; <span class="keyword">then</span></span><br><span class="line">        XAUTHORITY=<span class="variable">$HOME</span>/.Xauthority</span><br><span class="line">        <span class="built_in">export</span> XAUTHORITY</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    removelist=</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set up default Xauth info for this machine</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># check for GNU hostname</span></span><br><span class="line">    <span class="keyword">if</span> hostname --version &gt; /dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">&quot;`hostname --version 2&gt;&amp;1 | grep GNU`&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            hostname=`hostname -f`</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$hostname</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        hostname=`hostname`</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    authdisplay=<span class="variable">$&#123;display:-:0&#125;</span></span><br><span class="line"></span><br><span class="line">    mcookie=`/usr/bin/mcookie`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">test</span> x<span class="string">&quot;<span class="variable">$mcookie</span>&quot;</span> = x; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Couldn&#x27;t create cookie&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    dummy=0</span><br><span class="line"></span><br><span class="line">    <span class="comment"># create a file with auth information for the server. &#x27;:0&#x27; is a dummy.</span></span><br><span class="line">    xserverauthfile=`<span class="built_in">mktemp</span> --tmpdir serverauth.XXXXXXXXXX`</span><br><span class="line">    <span class="built_in">trap</span> <span class="string">&quot;rm -f &#x27;<span class="variable">$xserverauthfile</span>&#x27;&quot;</span> HUP INT QUIT ILL TRAP KILL BUS TERM</span><br><span class="line">    xauth -q -f <span class="string">&quot;<span class="variable">$xserverauthfile</span>&quot;</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">add :$dummy . $mcookie</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    serverargs=<span class="variable">$&#123;serverargs&#125;</span><span class="string">&quot; -auth &quot;</span><span class="variable">$&#123;xserverauthfile&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># now add the same credentials to the client authority file</span></span><br><span class="line">    <span class="comment"># if &#x27;$displayname&#x27; already exists do not overwrite it as another</span></span><br><span class="line">    <span class="comment"># server may need it. Add them to the &#x27;$xserverauthfile&#x27; instead.</span></span><br><span class="line">    <span class="keyword">for</span> displayname <span class="keyword">in</span> <span class="variable">$authdisplay</span> $hostname<span class="variable">$authdisplay</span>; <span class="keyword">do</span></span><br><span class="line">        authcookie=`xauth list <span class="string">&quot;<span class="variable">$displayname</span>&quot;</span> \</span><br><span class="line">        | sed -n <span class="string">&quot;s/.*<span class="variable">$displayname</span>[[:space:]*].*[[:space:]*]//p&quot;</span>` 2&gt;/dev/null;</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;z<span class="variable">$&#123;authcookie&#125;</span>&quot;</span> = <span class="string">&quot;z&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">            xauth -q &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">add $displayname . $mcookie</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">        removelist=<span class="string">&quot;<span class="variable">$displayname</span> <span class="variable">$removelist</span>&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            dummy=$((<span class="variable">$dummy</span>+<span class="number">1</span>));</span><br><span class="line">            xauth -q -f <span class="string">&quot;<span class="variable">$xserverauthfile</span>&quot;</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">add :$dummy . $authcookie</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动！</span></span><br><span class="line">xinit <span class="string">&quot;<span class="variable">$client</span>&quot;</span> <span class="variable">$clientargs</span> -- <span class="string">&quot;<span class="variable">$server</span>&quot;</span> <span class="variable">$display</span> <span class="variable">$serverargs</span></span><br><span class="line"></span><br><span class="line">retval=$?</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$enable_xauth</span>&quot;</span> = x1 ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$removelist</span>&quot;</span> != x ]; <span class="keyword">then</span></span><br><span class="line">        xauth remove <span class="variable">$removelist</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> [ x<span class="string">&quot;<span class="variable">$xserverauthfile</span>&quot;</span> != x ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">rm</span> -f <span class="string">&quot;<span class="variable">$xserverauthfile</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">command</span> -v deallocvt &gt; /dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    deallocvt</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$retval</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Ubuntu默认配置下，Gnome是如何被启动的"><a href="#Ubuntu默认配置下，Gnome是如何被启动的" class="headerlink" title="Ubuntu默认配置下，Gnome是如何被启动的"></a>Ubuntu默认配置下，Gnome是如何被启动的</h2><p>经过查看，我的Ubuntu系统上并不存在 <code>~/.xinitrc</code>，~<code>/.xsession</code> 等文件，因此启动Gnone这样的设定应该是某个系统配置文件所为，根据前面所说，在Debian系列系统上 <code>/etc/X11/xinit/xinitrc</code> 本身并无作用，只是在其中执行了 <code>. /etc/X11/Xsession</code>，因此推测应该是 <code>Xsession</code> 部分的某个系统配置文件所为。  </p>
<p>下面这段文档讲了Xsession的一个执行环节，其中涉及多个配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/X11/Xsession.d/50x11-common_determine-startup</span><br><span class="line">              Determine  startup  program.   The  X  client to launch as the controlling</span><br><span class="line">              process (the one that, upon exiting, causes the X server to exit as  well)</span><br><span class="line">              is  determined  next.   If a program or failsafe argument was given and is</span><br><span class="line">              allowed (see above), it is used as the controlling process.  Otherwise, if</span><br><span class="line">              the   line   ‘allow-user-xsession’   is  present  in  Xsession.options,  a</span><br><span class="line">              user-specified session program or script is used.  In the latter case, two</span><br><span class="line">              historically  popular  names  for user X session scripts are searched for:</span><br><span class="line">              $HOME/.xsession and $HOME/.Xsession (note the difference  in  case).   The</span><br><span class="line">              first one found is used.  If the script is not executable, it is marked to</span><br><span class="line">              be executed with the Bourne shell interpreter, sh.  Finally,  if  none  of</span><br><span class="line">              the   above   succeeds,   the   following   programs   are  searched  for:</span><br><span class="line">              /usr/bin/x-session-manager, /usr/bin/x-window-manager, and /usr/bin/x-ter‐</span><br><span class="line">              minal-emulator.  The first one found is used.  If none are found, Xsession</span><br><span class="line">              aborts with an error.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>由于我的用户目录没有Xsession相关配置，所以重点关注系统配置文件。  </p>
<p>上面文档提到的第一个系统配置文件 <code>/usr/bin/x-session-manager</code> 是个多级符号链接<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201231023816.png" alt="/usr/bin/x-session-manager"></p>
<p>内容如下，可以看到其中有对 <code>gnome-session-binary</code> 的调用，Gnome的启动应该与此脚本有关。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;x<span class="variable">$XDG_SESSION_TYPE</span>&quot;</span> = <span class="string">&quot;xwayland&quot;</span> ] &amp;&amp;</span><br><span class="line">   [ <span class="string">&quot;x<span class="variable">$XDG_SESSION_CLASS</span>&quot;</span> != <span class="string">&quot;xgreeter&quot;</span> ] &amp;&amp;</span><br><span class="line">   [  -n <span class="string">&quot;<span class="variable">$SHELL</span>&quot;</span> ] &amp;&amp;</span><br><span class="line">   grep -q <span class="string">&quot;<span class="variable">$SHELL</span>&quot;</span> /etc/shells &amp;&amp;</span><br><span class="line">   ! (<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SHELL</span>&quot;</span> | grep -q <span class="string">&quot;false&quot;</span>) &amp;&amp;</span><br><span class="line">   ! (<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$SHELL</span>&quot;</span> | grep -q <span class="string">&quot;nologin&quot;</span>); <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&#x27;-l&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exec</span> bash -c <span class="string">&quot;exec -l &#x27;<span class="variable">$SHELL</span>&#x27; -c &#x27;<span class="variable">$0</span> -l $*&#x27;&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#SETTING=$(G_MESSAGES_DEBUG=&#x27;&#x27; gsettings get org.gnome.system.locale region)</span></span><br><span class="line"><span class="comment">#REGION=$&#123;SETTING#\&#x27;&#125;</span></span><br><span class="line"><span class="comment">#REGION=$&#123;REGION%\&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$REGION</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">unset</span> LC_TIME LC_NUMERIC LC_MONETARY LC_MEASUREMENT LC_PAPER</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$LANG</span>&quot;</span> != <span class="string">&quot;<span class="variable">$REGION</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">export</span> LC_TIME=<span class="variable">$REGION</span></span><br><span class="line">    <span class="built_in">export</span> LC_NUMERIC=<span class="variable">$REGION</span></span><br><span class="line">    <span class="built_in">export</span> LC_MONETARY=<span class="variable">$REGION</span></span><br><span class="line">    <span class="built_in">export</span> LC_MEASUREMENT=<span class="variable">$REGION</span></span><br><span class="line">    <span class="built_in">export</span> LC_PAPER=<span class="variable">$REGION</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;XDG_RUNTIME_DIR&#125;</span>/systemd&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">exec</span> /usr/libexec/gnome-session-binary --systemd <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">exec</span> /usr/libexec/gnome-session-binary --<span class="built_in">builtin</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<h3 id="具体启动路径推测"><a href="#具体启动路径推测" class="headerlink" title="具体启动路径推测"></a>具体启动路径推测</h3><p>只考虑在 multi-user 模式下，在 console 执行 startx 手动启动 GUI 的过程。<br>我的 Ubuntu 系统的情况是，/home/lpy 里面没有任何 .xinitrc/.xsession/.xserverrc 等X Window System 的用户配置文件。  </p>
<p>具体启动步骤可能是这样的：</p>
<ol>
<li>用户执行 startx</li>
<li>startx 脚本根据文档所述规则，寻找用户配置失败</li>
<li>startx 确定使用 <code>/etc/X11/xinit/xinitrc</code> 作为 <code>client</code>，使用 <code>/etc/X11/xinit/xserverrc</code> 作为 <code>Server</code></li>
<li>startx 调用 <code>xinit /etc/X11/xinit/xinitrc [options...] -- /etc/X11/xinit/xserverrc [options...]</code> 启动 xinit</li>
<li>xinit 启动一个shell进程执行 <code>/etc/X11/xinit/xserverrc</code>，该shell进程作为 Server，脚本执行过程中使用 <code>exec X ...</code>在shell进程空间内执行<code>X Server</code>，此后原shell进程本质上已经变成 <code>X Server</code> 进程了</li>
<li>xinit 启动另一个shell进程执行 <code>/etc/X11/xinit/xinitrc</code>，该shell进程作为 Client，脚本执行过程如下</li>
<li><code>/etc/X11/xinit/xinitrc</code> 执行 <code>. /etc/X11/Xsession</code></li>
<li><code>/etc/X11/Xsession</code> 执行 <code>. /etc/X11/Xsession.d/50x11-common_determine-startup</code></li>
<li><code>/etc/X11/Xsession.d/50x11-common_determine-startup</code> 选定 <code>STARTUP</code>=<code>/usr/bin/x-session-manager</code></li>
<li><code>/etc/X11/Xsession</code> 执行 <code>/etc/X11/Xsession.d/99x11-common_start</code></li>
<li><code>/etc/X11/Xsession.d/99x11-common_start</code> 执行 <code>exec $STARTUP</code>，也就是 <code>exec /usr/bin/x-session-manager</code>，在此shell进程空间中执行 <code>/usr/bin/x-session-manager</code> 程序，经过查看，<code>/usr/bin/x-session-manager</code> 实际上是 <code>/usr/bin/gnome-session</code> 的符号链接，也就是此shell进程最后实际上成为了 <code>/usr/bin/gnome-session</code> 进程</li>
<li>至此gnome相关程序已经成功启动了</li>
</ol>
<h3 id="startx-gnome-pstree"><a href="#startx-gnome-pstree" class="headerlink" title="startx-gnome-pstree"></a>startx-gnome-pstree</h3><p>使用 startx 启动 gnome-session，进程关系如下:</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201231125141.png" alt="startx-gnome-pstree"></p>
<h2 id="通过Xsession配置文件默认启动-i3wm"><a href="#通过Xsession配置文件默认启动-i3wm" class="headerlink" title="通过Xsession配置文件默认启动 i3wm"></a>通过Xsession配置文件默认启动 i3wm</h2><p>这种方式理论上来说，在使用startx启动GUI时应该是会生效的。<br>如果使用Display Manger登录，我还不太确定是否应该生效，但是似乎在我的Ubuntu系统上测试并没有生效。</p>
<h3 id="添加-xsession文件"><a href="#添加-xsession文件" class="headerlink" title="添加~/.xsession文件"></a>添加<code>~/.xsession</code>文件</h3><p>内容如下，最关键的是最后的 <code>exec /usr/bin/i3</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disable DPMS turning off the screen</span></span><br><span class="line">xset dpms force on</span><br><span class="line">xset s off</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable bell</span></span><br><span class="line"><span class="comment"># xset -b</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable zapping (C-A-&lt;Bksp&gt; kills X)</span></span><br><span class="line">setxkbmap -option terminate:ctrl_alt_bksp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enforce correct locales from the beginning</span></span><br><span class="line"><span class="built_in">unset</span> LC_COLLATE</span><br><span class="line"><span class="comment"># export LC_CTYPE=zh_CN.UTF-8</span></span><br><span class="line"><span class="built_in">export</span> LC_TIME=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_NUMERIC=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_MONETARY=zh_CN.UTF-8</span><br><span class="line"><span class="comment"># export LC_MESSAGES=C</span></span><br><span class="line"><span class="built_in">export</span> LC_PAPER=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_NAME=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_ADDRESS=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_TELEPHONE=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_MEASUREMENT=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_IDENTIFICATION=zh_CN.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use XToolkit in java applications</span></span><br><span class="line"><span class="built_in">export</span> AWT_TOOLKIT=XToolkit</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set background color</span></span><br><span class="line">xsetroot -solid <span class="string">&quot;#333333&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable core dumps in case something goes wrong</span></span><br><span class="line"><span class="built_in">ulimit</span> -c unlimited</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面的带日志的启动命令会导致无法启动，不清楚原因</span></span><br><span class="line"><span class="comment"># Start i3 and log to ~/.i3/logfile</span></span><br><span class="line"><span class="comment"># echo &quot;Starting at $(date)&quot; &gt;&gt; ~/.i3/i3log-$(date +&#x27;%F-%k-%M-%S&#x27;) 2&gt;&amp;1</span></span><br><span class="line"><span class="comment"># exec /usr/bin/i3 -V -d all &gt;&gt; ~/.i3/i3log-$(date +&#x27;%F-%k-%M-%S&#x27;) 2&gt;&amp;1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> i3</span><br></pre></td></tr></table></figure>
<h2 id="运行逻辑"><a href="#运行逻辑" class="headerlink" title="运行逻辑"></a>运行逻辑</h2><p>与gnome启动过程类似，区别主要发生在 <code>/etc/X11/Xsession.d/50x11-common_determine-startup</code> 的执行过程中：</p>
<ol>
<li>用户执行 startx</li>
<li>startx 脚本根据文档所述规则，寻找用户配置失败</li>
<li>startx 确定使用 <code>/etc/X11/xinit/xinitrc</code> 作为 <code>client</code>，使用 <code>/etc/X11/xinit/xserverrc</code> 作为 <code>Server</code></li>
<li>startx 调用 <code>xinit /etc/X11/xinit/xinitrc [options...] -- /etc/X11/xinit/xserverrc [options...]</code> 启动 xinit</li>
<li>xinit 启动一个shell进程执行 <code>/etc/X11/xinit/xserverrc</code>，该shell进程作为 Server，脚本执行过程中使用 <code>exec X ...</code>在shell进程空间内执行<code>X Server</code>，此后原shell进程本质上已经变成 <code>X Server</code> 进程了</li>
<li>xinit 启动另一个shell进程执行 <code>/etc/X11/xinit/xinitrc</code>，该shell进程作为 Client，脚本执行过程如下</li>
<li><code>/etc/X11/xinit/xinitrc</code> 执行 <code>. /etc/X11/Xsession</code></li>
<li><code>/etc/X11/Xsession</code> 执行 <code>. /etc/X11/Xsession.d/50x11-common_determine-startup</code></li>
<li><code>/etc/X11/Xsession.d/50x11-common_determine-startup</code> 选定 <code>STARTUP</code>=<code>$HOME/.xsession</code></li>
<li><code>/etc/X11/Xsession</code> 执行 <code>/etc/X11/Xsession.d/99x11-common_start</code></li>
<li><code>/etc/X11/Xsession.d/99x11-common_start</code> 执行 <code>exec $STARTUP</code>，也就是 <code>exec $HOME/.xsession</code></li>
<li>具体如何exec一个脚本我还不是很确定，但是肯定是需要shell的，推测 <code>exec $HOME/.xsession</code> 的实际执行结果是在原先的shell进程空间运行了shell，然后在shell环境下执行 <code>$HOME/.xsession</code> 这个脚本的内容</li>
<li>执行 <code>$HOME/.xsession</code> 这个脚本时遇到命令 <code>exec /usr/bin/i3</code>，然后在其shell进程空间中执行 <code>i3</code> 程序，也就是此shell进程最后实际上成为了 <code>i3</code> 进程</li>
<li>至此 <code>i3</code> 已经成功启动了</li>
</ol>
<h3 id="startx-i3-pstree"><a href="#startx-i3-pstree" class="headerlink" title="startx-i3-pstree"></a>startx-i3-pstree</h3><p>使用 startx 启动 i3，进程关系如下:</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201231132607.png" alt="startx-i3-pstree"></p>
<h2 id="执行-X-程序所需权限"><a href="#执行-X-程序所需权限" class="headerlink" title="执行 X 程序所需权限"></a>执行 <code>X</code> 程序所需权限</h2><p>默认情况下，执行 <code>X</code> 命令是需要 root 权限的。但是在我的Ubuntu系统上不经配置就可以以普通用户的身份执行 <code>X</code>。难道是在Ubuntu上原本就允许以普通用户的的身份直接执行 <code>X</code> 吗？  </p>
<p>通过执行 <code>startx</code>，然后使用 <code>pstree -u</code> 就可以看到带有用户信息的进程树了，在图中可以看到，尽管<code>startx</code>和<code>xinit</code>都是以用户身份执行的，但是 <code>Xorg</code> 进程所属用户却是 <code>root</code>。<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210101030017.png" alt="pstree-u"></p>
<p>从这个信息可以知道，<code>Xorg</code> 并不是以用户的身份执行的，而是以 <code>root</code> 用户的身份执行的。可以推测，用户启动 <code>startx</code> 时，借助某个 <code>setuid</code> 程序完成了 <code>Xorg</code> 程序的启动。</p>
<p>那么是哪个setuid程序呢？我们可以沿着startx的执行路径寻找。在默认情况下，startx 会选定 <code>/etc/X11/xinit/xserverrc</code> 作为传递给 <code>xinit</code> 的Server参数，然后 <code>xinit</code> 启动它作为 <code>Server</code>。可以看到<code>/etc/X11/xinit/xserverrc</code>所做的事情是执行了<code>X</code>命令，继续追踪下去会发现 <code>X</code> 也是一个shell脚本，它的内容如下:  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Execute Xorg.wrap if it exists otherwise execute Xorg directly.</span></span><br><span class="line"><span class="comment"># This allows distros to put the suid wrapper in a separate package.</span></span><br><span class="line"></span><br><span class="line">basedir=/usr/lib/xorg</span><br><span class="line"><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>/Xorg.wrap ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exec</span> <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>/Xorg.wrap <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">exec</span> <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>/Xorg <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>它的运行逻辑是，如果存在 <code>/usr/lib/xorg/Xorg.wrap</code> 便启动它，否则启动 <code>/usr/lib/xorg/Xorg</code>，下面我们来看一些这两个文件的信息：<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210101013817.png" alt="Xorg[.wrap]"></p>
<p>从图中可以看到，这两个都是可执行二进制文件，并且 <code>Xorg.wrap</code> 是 <code>setuid</code> 和 <code>setgid</code> 的，简单地说就是任何对 <code>Xorg.wrap</code> 的执行都将以 <code>Xorg.wrap</code> 这个程序所属用户和用户组的身份进行，进一步查看就会发现它所属用户和用户组都是 <code>root</code>，也就是不管谁执行 <code>Xorg.wrap</code> 这个程序，都会以root身份进行，这样一来，普通用户能执行 <code>X</code> 与 <code>X</code> 要求root权限两件事情就不矛盾了。<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210101014401.png" alt="Xorg.wrap setuid">  </p>
<p>根据上面的讨论，可以确定正是借助 <code>Xorg.wrap</code>，我才能在Ubuntu系统上以普通用户的身份执行 <code>X</code>，也就可以执行基于X的 <code>xinit</code> 和 <code>startx</code> 了。</p>
<p>但是我的虚拟机中的 Arch 没有 <code>Xorg.wrap</code>， 因此以普通用户身份执行 <code>X</code> 会出错也就不奇怪了，经过搜索，我得知在Arch中，<code>Xorg.wrap</code> 是由 <code>xorg-server</code>这个程序包提供的，因此应该可以安装这个包并经过合适的配置，使得普通用户也可以启动桌面环境。(我没配好)</p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>X</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Xorg的Linux桌面环境（三）</title>
    <url>/2020/12/30/%E5%9F%BA%E4%BA%8EXorg%E7%9A%84Linux%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>这一部分主要研究X Window System的远程连接和鉴权机制。  </p>
<p>涉及这几个概念或程序。</p>
<ol>
<li>Xsession - initialize X session</li>
<li>xhost - server access control program for X</li>
<li>Xsecurity - X display access control</li>
<li>xauth - X authority file utility</li>
</ol>
<h2 id="本地用户ypl将自己的X-Client连接到在lpy所登录的GUI环境中"><a href="#本地用户ypl将自己的X-Client连接到在lpy所登录的GUI环境中" class="headerlink" title="本地用户ypl将自己的X Client连接到在lpy所登录的GUI环境中"></a>本地用户ypl将自己的X Client连接到在lpy所登录的GUI环境中</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>根据 Xsession中的文档，得知Xsession执行过程包括这样一个文件，其功能是为本地同一用户赋予X Server的访问权限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/X11/Xsession.d/35x11-common_xhost-local</span><br><span class="line">              Give access to the X server to the same user on the local  host.   If  the</span><br><span class="line">              xhost  command  is  available,  it will use it to allow any process of the</span><br><span class="line">              same user running on the local host to access the X server.</span><br></pre></td></tr></table></figure>
<p>而这个文件的内容如下：<br>它所做的事情就是使用 <code>xhost +si:localuser:$(id -un)</code> 命令允许当前用户添加到访问控制列表中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This file is sourced by Xsession(5), not executed.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If xhost (from x11-xserver-utils) is installed, use it to give access </span></span><br><span class="line"><span class="comment"># to the X server to any process from the same user on the local host.</span></span><br><span class="line"><span class="comment"># Unlike other uses of xhost, this is safe since the kernel can check </span></span><br><span class="line"><span class="comment"># the actual owner of the calling process.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span> xhost &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">  xhost +si:localuser:$(<span class="built_in">id</span> -un) || :</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>xhost命令简介如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NAME</span><br><span class="line">       xhost - server access control program for X</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       xhost [[+-]name ...]</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       The  xhost program is used to add and delete host names or user names to the list</span><br><span class="line">       allowed to make connections to the X server.  In the case of hosts, this provides</span><br><span class="line">       a  rudimentary form of privacy control and security.  It is only sufficient for a</span><br><span class="line">       workstation (single user) environment, although it does limit the  worst  abuses.</span><br><span class="line">       Environments which require more sophisticated measures should implement the user-</span><br><span class="line">       based mechanism or use the hooks in the protocol for passing other authentication</span><br><span class="line">       data to the server.</span><br></pre></td></tr></table></figure>
<p>看到这里的时候，我并不确定本地其它用户能否不经配置就将自己的X Client连接至其它用户登录时系统所创建的X Server。  </p>
<h3 id="尝试直接连接"><a href="#尝试直接连接" class="headerlink" title="尝试直接连接"></a>尝试直接连接</h3><p>尝试切换用户然后直接连接，结果如下，报错 <code>No protocol specified</code>。<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201231020706.png" alt=""></p>
<h3 id="使用xhost授权"><a href="#使用xhost授权" class="headerlink" title="使用xhost授权"></a>使用xhost授权</h3><p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201231021326.png" alt="Grant"></p>
<h3 id="再次连接"><a href="#再次连接" class="headerlink" title="再次连接"></a>再次连接</h3><p>就可以正常启动了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20201231021213.png" alt="Reconect"></p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>X</tag>
      </tags>
  </entry>
  <entry>
    <title>Arch从零配置GUI环境</title>
    <url>/2020/12/31/Arch%E4%BB%8E%E9%9B%B6%E9%85%8D%E7%BD%AEGUI%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h2 id="先随便列一下，有空再填坑"><a href="#先随便列一下，有空再填坑" class="headerlink" title="先随便列一下，有空再填坑"></a>先随便列一下，有空再填坑</h2><h2 id="arch安装"><a href="#arch安装" class="headerlink" title="arch安装"></a>arch安装</h2><p>dhcpcd,sudo,nvim,<br>nvim alias as vim/vi<br>sudo alias <code>&#39;sudo &#39;</code></p>
<h2 id="Xorg安装"><a href="#Xorg安装" class="headerlink" title="Xorg安装"></a>Xorg安装</h2><p>基本无需配置，只要写.xinitrc就行了，参考Arch Wiki <a href="https://wiki.archlinux.org/index.php/Xinit#xinitrc">关于xinitrc的介绍</a> </p>
<p><strong>注意先复制系统xinitrc，在其基础上修改，如果非要自己写，至少要记得source <code>/etc/X11/xinit/xinitrc.d/</code>中的脚本</strong></p>
<p>xorg-xserver,xorg-uitls,xorg-initx  </p>
<h2 id="i3安装以及默认启动"><a href="#i3安装以及默认启动" class="headerlink" title="i3安装以及默认启动"></a>i3安装以及默认启动</h2><p><a href="https://wiki.archlinux.org/index.php/I3">https://wiki.archlinux.org/index.php/I3</a><br><a href="https://wiki.archlinux.org/index.php/Autostarting">https://wiki.archlinux.org/index.php/Autostarting</a>  </p>
<p>这个其实没啥问题，不过后面的东西都是由于i3太过简单而必须自己配置</p>
<h2 id="联网问题"><a href="#联网问题" class="headerlink" title="联网问题"></a>联网问题</h2><p>dhcpcd -&gt; NetworkManager，network-manager-applet</p>
<h2 id="输入法问题"><a href="#输入法问题" class="headerlink" title="输入法问题"></a>输入法问题</h2><p><a href="https://wiki.archlinux.org/index.php/IBus">https://wiki.archlinux.org/index.php/IBus</a><br>ibus,rime</p>
<h2 id="多屏显示设置"><a href="#多屏显示设置" class="headerlink" title="多屏显示设置"></a>多屏显示设置</h2><p><code>xrandr</code></p>
<h2 id="使用-alsa-utlls-进行声音输入输出设备管理"><a href="#使用-alsa-utlls-进行声音输入输出设备管理" class="headerlink" title="使用 alsa-utlls 进行声音输入输出设备管理"></a>使用 <code>alsa-utlls</code> 进行声音输入输出设备管理</h2><p><a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture#Installation">https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture#Installation</a></p>
<p><code>alsamixer</code>,amixer</p>
<h2 id="安装虚拟终端-termite"><a href="#安装虚拟终端-termite" class="headerlink" title="安装虚拟终端 termite"></a>安装虚拟终端 <code>termite</code></h2><h2 id="bash自动补全、智能提示"><a href="#bash自动补全、智能提示" class="headerlink" title="bash自动补全、智能提示"></a>bash自动补全、智能提示</h2><p>bash-completion软件包</p>
<h2 id="使用-thunar-进行文件管理"><a href="#使用-thunar-进行文件管理" class="headerlink" title="使用 thunar 进行文件管理"></a>使用 <code>thunar</code> 进行文件管理</h2><p><a href="https://wiki.archlinux.org/index.php/File_manager_functionality#Overview">https://wiki.archlinux.org/index.php/File_manager_functionality#Overview</a><br><a href="https://wiki.archlinux.org/index.php/thunar">https://wiki.archlinux.org/index.php/thunar</a><br><a href="https://wiki.archlinux.org/index.php/Udisks">https://wiki.archlinux.org/index.php/Udisks</a></p>
<p>需要关注 <code>gvfs</code> 系列软件包，还有 <code>udisks2</code>，它提供的<code>udiskctl</code>可以将设备挂载到 <code>/run/media/$USERNAME</code>的子目录中，可能ubuntu上所做的自动挂载也跟它有关系</p>
<h2 id="使用-polkit-解决GUI中的权限问题"><a href="#使用-polkit-解决GUI中的权限问题" class="headerlink" title="使用 polkit 解决GUI中的权限问题"></a>使用 <code>polkit</code> 解决GUI中的权限问题</h2><p><a href="https://wiki.archlinux.org/index.php/Polkit">https://wiki.archlinux.org/index.php/Polkit</a></p>
<p>比如 thunar中磁盘挂载时可能需要授权，gparted的启动需要授权</p>
<p>相要使用它在GUI中授权还需要一个前端软件配合完成授权，我选择的是 <code>lxsession</code> 软件包，安装之后还需要设置使 <code>lxpolkit</code> 自启动，可以写在i3配置文件中。</p>
<h2 id="GNOME-Keyring"><a href="#GNOME-Keyring" class="headerlink" title="GNOME Keyring"></a>GNOME Keyring</h2><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://wiki.archlinux.org/index.php/GNOME/Keyring">https://wiki.archlinux.org/index.php/GNOME/Keyring</a></p>
<p>起因是这个<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210102002032.png" alt="keyring"></p>
<p>Troubleshooting Guide页面为：<a href="https://code.visualstudio.com/docs/editor/settings-sync#_troubleshooting-keychain-issues">https://code.visualstudio.com/docs/editor/settings-sync#_troubleshooting-keychain-issues</a>  </p>
<h3 id="之前犯的愚蠢错误"><a href="#之前犯的愚蠢错误" class="headerlink" title="之前犯的愚蠢错误"></a>之前犯的愚蠢错误</h3><p>GUI界面叫<code>seahorse</code>，现在按照文档配置了一下，似乎vscode还会报错，但seahorse可以打开</p>
<p>改用了 PAM 方法似乎还是不行呀</p>
<p>现在可以了，记录下全过程</p>
<p>componet是启动之后就没改过，下面说的只是gnome-keyring的配置</p>
<ol>
<li>只配.xinitrc，结果无效</li>
<li>只配PAM，无效</li>
<li>PAM和.xinitrc都配，无效</li>
<li>配PAM，并在.xinitrc 中 <code>source /etc/X11/xinit/xinitrc.d/50-systemd-user.sh</code>，这次奇迹般的可以了，参考<br><a href="https://unix.stackexchange.com/questions/265503/how-do-i-fix-no-such-secret-collection-at-path-for-gnome-keyring-and-arch-l">https://unix.stackexchange.com/questions/265503/how-do-i-fix-no-such-secret-collection-at-path-for-gnome-keyring-and-arch-l</a>  </li>
<li>只source，不配PAM可以吗？</li>
</ol>
<h3 id="破案了！！！"><a href="#破案了！！！" class="headerlink" title="破案了！！！"></a>破案了！！！</h3><p>之前所说的一切错误都源自不规范定义的.xinitrc，正确的做法是先复制默认的配置，然后在默认配置基础上更改其行为，至少要保证source <code>/etc/X11/xinit/xinitrc.d/</code> 中的脚本。  </p>
<p>这些脚本有些是应用定义的关键脚本，如果不执行的话，可能会导致应用行为不正常。而我原先的<code>.xinitrc</code>是自己写的，没有source <code>/etc/X11/xinit/xinitrc.d/</code> 中的脚本，出错也就不奇怪了，而默认的<code>/etc/X11/xinit/xinitrc</code>中就执行了类似的重要操作，在这个基础上修改就可以了  </p>
<p>参考Arch Wiki <a href="https://wiki.archlinux.org/index.php/Xinit#xinitrc">关于xinitrc的介绍</a><br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210102175329.png" alt=""></p>
<h3 id="其中可能涉及一个关键脚本"><a href="#其中可能涉及一个关键脚本" class="headerlink" title="其中可能涉及一个关键脚本"></a>其中可能涉及一个关键脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[lpy@lpyarch ~]$ <span class="built_in">cat</span> /etc/X11/xinit/xinitrc.d/50-systemd-user.sh </span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">systemctl --user import-environment DISPLAY XAUTHORITY</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">command</span> -v dbus-update-activation-environment &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">    dbus-update-activation-environment DISPLAY XAUTHORITY</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[lpy@lpyarch ~]$ </span><br></pre></td></tr></table></figure>
<p><code>/etc/X11/xinit/xinitrc.d/50-systemd-user.sh</code> 会为用户级的systemd导入两个变量 <code>DISPLAY</code> 和<code>XAUTHORITY</code>，据说十分重要。</p>
<p>参考这篇文章 <a href="https://wiki.archlinux.org/index.php/systemd/User#DISPLAY_and_XAUTHORITY">https://wiki.archlinux.org/index.php/systemd/User#DISPLAY_and_XAUTHORITY</a><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DISPLAY is used by any X application to know which display to use and XAUTHORITY to provide a path to the user&#x27;s .Xauthority file and thus the cookie needed to access the X server. If you plan on launching X applications from systemd units, these variables need to be set. Systemd provides a script in /etc/X11/xinit/xinitrc.d/50-systemd-user.sh to import those variables into the systemd user session on X launch. [3] So unless you start X in a nonstandard way, user services should be aware of the DISPLAY and XAUTHORITY</span><br></pre></td></tr></table></figure></p>
<h3 id="进一步分析"><a href="#进一步分析" class="headerlink" title="进一步分析"></a>进一步分析</h3><p>如果不source那个脚本，启动后会无法在seahorse中ublock，一个推测是，有运行在daemon的程序尝试让我输入密码来解锁，但它不知道DISPLAY和XAUTH，所以无法解锁</p>
<p>相关日志如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Jan 02 18:56:45 lpyarch dbus-daemon[474]: [session uid=1000 pid=474] Activating service name=&#x27;org.gnome.keyring.SystemPrompter&#x27; requested by &#x27;:1.34&#x27; (uid=1000 pid=404 comm=&quot;/usr/bin/gnome-keyring-daemon --daemonize --login &quot;)</span><br><span class="line">Jan 02 18:56:45 lpyarch org.gnome.keyring.SystemPrompter[1890]: Unable to init server: Could not connect: Connection refused</span><br><span class="line">Jan 02 18:56:45 lpyarch gcr-prompter[1890]: cannot open display: </span><br><span class="line">Jan 02 18:56:45 lpyarch dbus-daemon[474]: [session uid=1000 pid=474] Activated service &#x27;org.gnome.keyring.SystemPrompter&#x27; failed: Process org.gnome.keyring.SystemPrompter exited with status 1</span><br><span class="line">Jan 02 18:56:45 lpyarch gnome-keyring-daemon[404]: couldn&#x27;t create system prompt: GDBus.Error:org.freedesktop.DBus.Error.Spawn.ChildExited: Process org.gnome.keyring.SystemPrompter exited with status 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Jan 02 18:57:15 lpyarch dbus-daemon[474]: [session uid=1000 pid=474] Activating service name=&#x27;org.gnome.keyring.SystemPrompter&#x27; requested by &#x27;:1.34&#x27; (uid=1000 pid=404 comm=&quot;/usr/bin/gnome-keyring-daemon --daemonize --login &quot;)</span><br><span class="line">Jan 02 18:57:16 lpyarch org.gnome.keyring.SystemPrompter[1899]: Unable to init server: Could not connect: Connection refused</span><br><span class="line">Jan 02 18:57:16 lpyarch gcr-prompter[1899]: cannot open display: </span><br><span class="line">Jan 02 18:57:16 lpyarch dbus-daemon[474]: [session uid=1000 pid=474] Activated service &#x27;org.gnome.keyring.SystemPrompter&#x27; failed: Process org.gnome.keyring.SystemPrompter exited with status 1</span><br><span class="line">Jan 02 18:57:16 lpyarch gnome-keyring-daemon[404]: couldn&#x27;t create system prompt: GDBus.Error:org.freedesktop.DBus.Error.Spawn.ChildExited: Process org.gnome.keyring.SystemPrompter exited with status 1</span><br></pre></td></tr></table></figure>
<p>经过分析，可能的原因是：<br>相关应用通过dbus，请求keyring进行密码验证，但是kering运行在systemd中，这时候由于没有执行上述<code>/etc/X11/xinit/xinitrc.d/50-systemd-user.sh</code>， daemon中没有 <code>XAUTHORITY</code> 和 <code>DISPLAY</code>，keyring也就无法得知应该在哪里显示验证界面，所需授权文件又是哪个，故无法完成授权操作。</p>
<p>那么，在遇到这个问题的通过命令行systemd和dbus设置环境变量理应也可以解决这个问题，下面就来实际操作一下。</p>
<p>执行如下命令，再次去尝试unlock</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl --user import-environment DISPLAY XAUTHORITY</span><br><span class="line">dbus-update-activation-environment DISPLAY XAUTHORITY</span><br></pre></td></tr></table></figure>
<p>这一次执行日志如下，可以看到最后的信息已经表明解锁成功了，当然在GUI里面也能看到效果，这一次成功弹出了请求密码的界面。</p>
<p>我实际操作时，先故意输入了错误的密码，又一次输入了正确的密码，所以日志里有错误相关的信息也不奇怪<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Jan 02 19:45:17 lpyarch dbus-daemon[474]: [session uid=1000 pid=474] Activating service name=&#x27;org.gnome.keyring.SystemPrompter&#x27; requested by &#x27;:1.34&#x27; (uid=1000 pid=404 comm=&quot;/usr/bin/gnome-keyring-daemon --daemonize --login &quot;)</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: bus acquired: org.gnome.keyring.SystemPrompter</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: registering prompter</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: bus acquired: org.gnome.keyring.PrivatePrompter</span><br><span class="line">Jan 02 19:45:17 lpyarch dbus-daemon[474]: [session uid=1000 pid=474] Successfully activated service &#x27;org.gnome.keyring.SystemPrompter&#x27;</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: acquired name: org.gnome.keyring.SystemPrompter</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: received BeginPrompting call from callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: preparing a prompt for callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: creating new GcrPromptDialog prompt</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: GLib-GIO: _g_io_module_get_default: Found default implementation gvfs (GDaemonVfs) for ‘gio-vfs’</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: automatically selecting secret exchange protocol</span><br><span class="line">Jan 02 19:45:17 lpyarch gcr-prompter[3670]: Gcr: generating public key</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: beginning the secret exchange: [sx-aes-1]\npublic=2G5a5ux0oDxyKtwTtKQeVK1Y8xiejwsV88063Ue4SCKhagOPRZcHCF+XKSNjn6Xb74zHTN222E3/a5RrNbGcS8VRmPTVGxxUc9mNBlWlgUg4MtBNtKF4t9DPBTC4RA4zw1ybsu20vXqyCm+z1OCmic+SmrpBqQzSYYRFn3633l/WirlYBmK/B/W0OFtuCZYJH39M46n/RJCC2PsyVI0WATBN8wyjnIGWjeC/X87qs8hrYPQTFQVpdDwSZ3sTvfkM\n</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: calling the PromptReady method on /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: acquired name: org.gnome.keyring.PrivatePrompter</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: returned from the PromptReady method on /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: received PerformPrompt call from callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: receiving secret exchange: [sx-aes-1]\npublic=DD1Zv/mXj0MFxWWAleJ1k8HlPzKHpAIsC3Xx8PNnEe0MhY17Nu4NXBNI9isZXxMY5yJXBQbFWXHe9oE2URrSwAMIkkd3I2Myb2jWTgRjH+oIFDonvPGJTKfojyUBkWEvyy3B5a17W5RanbZ3lf0BF3PgA1boQDBiFIXrXwWUQedUkrf8OUdYmlcLFMR5eUpJDDcllwP8qeNonWJI0zI8OeC+xMc71BWTxVHcx9P7ArL3nX4r5Ol5j4NNV/YGoyZ/\n</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: deriving shared transport key</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: deriving transport key</span><br><span class="line">Jan 02 19:45:18 lpyarch gcr-prompter[3670]: Gcr: starting password prompt for callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: completed password prompt for callback :1.34@/org/gnome/keyring/Prompt/p56</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: encrypting data</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: sending the secret exchange: [sx-aes-1]\npublic=2G5a5ux0oDxyKtwTtKQeVK1Y8xiejwsV88063Ue4SCKhagOPRZcHCF+XKSNjn6Xb74zHTN222E3/a5RrNbGcS8VRmPTVGxxUc9mNBlWlgUg4MtBNtKF4t9DPBTC4RA4zw1ybsu20vXqyCm+z1OCmic+SmrpBqQzSYYRFn3633l/WirlYBmK/B/W0OFtuCZYJH39M46n/RJCC2PsyVI0WATBN8wyjnIGWjeC/X87qs8hrYPQTFQVpdDwSZ3sTvfkM\nsecret=YJvt3wtzr/dkfsZxg2nl1w==\niv=eTAIkduomuAKw163hVZkGQ==\n</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: calling the PromptReady method on /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: returned from the PromptReady method on /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: received PerformPrompt call from callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: receiving secret exchange: [sx-aes-1]\npublic=DD1Zv/mXj0MFxWWAleJ1k8HlPzKHpAIsC3Xx8PNnEe0MhY17Nu4NXBNI9isZXxMY5yJXBQbFWXHe9oE2URrSwAMIkkd3I2Myb2jWTgRjH+oIFDonvPGJTKfojyUBkWEvyy3B5a17W5RanbZ3lf0BF3PgA1boQDBiFIXrXwWUQedUkrf8OUdYmlcLFMR5eUpJDDcllwP8qeNonWJI0zI8OeC+xMc71BWTxVHcx9P7ArL3nX4r5Ol5j4NNV/YGoyZ/\n</span><br><span class="line">Jan 02 19:45:31 lpyarch gcr-prompter[3670]: Gcr: starting password prompt for callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: completed password prompt for callback :1.34@/org/gnome/keyring/Prompt/p56</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: encrypting data</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: sending the secret exchange: [sx-aes-1]\npublic=2G5a5ux0oDxyKtwTtKQeVK1Y8xiejwsV88063Ue4SCKhagOPRZcHCF+XKSNjn6Xb74zHTN222E3/a5RrNbGcS8VRmPTVGxxUc9mNBlWlgUg4MtBNtKF4t9DPBTC4RA4zw1ybsu20vXqyCm+z1OCmic+SmrpBqQzSYYRFn3633l/WirlYBmK/B/W0OFtuCZYJH39M46n/RJCC2PsyVI0WATBN8wyjnIGWjeC/X87qs8hrYPQTFQVpdDwSZ3sTvfkM\nsecret=TOLxilfEWSSqacnL1hAEMw==\niv=uoSuwtbaJMNBvJt2sTdZpw==\n</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: calling the PromptReady method on /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: returned from the PromptReady method on /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: received PerformPrompt call from callback /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: stopping prompting for operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: closing the prompt</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: stopping prompting for operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: couldn&#x27;t find the callback for prompting operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: stopping prompting for operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: couldn&#x27;t find the callback for prompting operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: stopping prompting for operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: couldn&#x27;t find the callback for prompting operation /org/gnome/keyring/Prompt/p56@:1.34</span><br><span class="line">Jan 02 19:45:38 lpyarch gcr-prompter[3670]: Gcr: calling the PromptDone method on /org/gnome/keyring/Prompt/p56@:1.34, and ignoring reply</span><br><span class="line">Jan 02 19:45:49 lpyarch gcr-prompter[3670]: Gcr: 10 second inactivity timeout, quitting</span><br><span class="line">Jan 02 19:45:49 lpyarch gcr-prompter[3670]: Gcr: unregistering prompter</span><br><span class="line">Jan 02 19:45:49 lpyarch gcr-prompter[3670]: Gcr: disposing prompter</span><br><span class="line">Jan 02 19:45:49 lpyarch gcr-prompter[3670]: Gcr: finalizing prompter</span><br></pre></td></tr></table></figure></p>
<p>至于为何在设置变量后就会自动授权而无需输入密码解锁，就是另一个问题了，可能跟设置的PAM有关。</p>
<h2 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h2><p>xsslock，i3lock，这个地方可能需要再好好了解一下系统的Session的概念和作用</p>
<p><a href="https://rapiz.me/2019/lock-and-suspend/">https://rapiz.me/2019/lock-and-suspend/</a></p>
<h2 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h2>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux的PAM认证机制</title>
    <url>/2021/01/01/Linux%E7%9A%84PAM%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.docs4dev.com/docs/zh/linux-pam/1.1.2/reference/adg-introduction.html">https://www.docs4dev.com/docs/zh/linux-pam/1.1.2/reference/adg-introduction.html</a></p>
<h2 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h2><p>注意按照程序开头的注释添加 <code>/etc/pam.d/check_user</code>。<br>编译命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -o check_user check_user.c -lpam -lpam_misc</span><br></pre></td></tr></table></figure>
<p>编译完之后运行，程序会提示你输入密码，然后告诉你授权是否成功。  </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  This program was contributed by Shane Watts</span></span><br><span class="line"><span class="comment">  [modifications by AGM and kukuk]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  You need to add the following (or equivalent) to the</span></span><br><span class="line"><span class="comment">  /etc/pam.d/check_user file:</span></span><br><span class="line"><span class="comment">  # check authorization</span></span><br><span class="line"><span class="comment">  auth       required     pam_unix.so</span></span><br><span class="line"><span class="comment">  account    required     pam_unix.so</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;security/pam_appl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;security/pam_misc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">pam_conv</span> <span class="title">conv</span> =</span> &#123;</span><br><span class="line">    misc_conv,</span><br><span class="line">    <span class="literal">NULL</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pam_handle_t</span> *pamh=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> retval;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *user=<span class="string">&quot;nobody&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(argc == <span class="number">2</span>) &#123;</span><br><span class="line">        user = argv[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(argc &gt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Usage: check_user [username]\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    retval = pam_start(<span class="string">&quot;check_user&quot;</span>, user, &amp;conv, &amp;pamh);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retval == PAM_SUCCESS)</span><br><span class="line">        retval = pam_authenticate(pamh, <span class="number">0</span>);    <span class="comment">/* is user really user? */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retval == PAM_SUCCESS)</span><br><span class="line">        retval = pam_acct_mgmt(pamh, <span class="number">0</span>);       <span class="comment">/* permitted access? */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* This is where we have been authorized or not. */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retval == PAM_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Authenticated\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Not Authenticated\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pam_end(pamh,retval) != PAM_SUCCESS) &#123;     <span class="comment">/* close Linux-PAM */</span></span><br><span class="line">        pamh = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;check_user: failed to release authenticator\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ( retval == PAM_SUCCESS ? <span class="number">0</span>:<span class="number">1</span> );       <span class="comment">/* indicate success */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="PAM的应用"><a href="#PAM的应用" class="headerlink" title="PAM的应用"></a>PAM的应用</h2><h3 id="GNOME-Keyring"><a href="#GNOME-Keyring" class="headerlink" title="GNOME Keyring"></a>GNOME Keyring</h3>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>DBus和freedesktop</title>
    <url>/2021/01/02/DBus%E5%92%8Cfreedesktop/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>DBus：一个消息总线服务，在Linux桌面环境下应用广泛。Gnome和KDE的许多组件都使用了DBus。  </p>
<p>freedesktop：制定了许多桌面环境下的设计规范，各个Linux桌面都或多或少实现了其中的一些规范，很多应用也依照规范提供的接口进行设计。  </p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://unix.stackexchange.com/questions/46301/a-list-of-available-d-bus-services">https://unix.stackexchange.com/questions/46301/a-list-of-available-d-bus-services</a><br><a href="https://www.freedesktop.org/wiki/Software/dbus/">https://www.freedesktop.org/wiki/Software/dbus/</a><br><a href="https://www.freedesktop.org/wiki/Specifications/secret-storage-spec/">https://www.freedesktop.org/wiki/Specifications/secret-storage-spec/</a><br><a href="https://www.freedesktop.org/wiki/Specifications/file-manager-interface/">https://www.freedesktop.org/wiki/Specifications/file-manager-interface/</a>  </p>
<h2 id="DBus命令行测试工具"><a href="#DBus命令行测试工具" class="headerlink" title="DBus命令行测试工具"></a>DBus命令行测试工具</h2><h3 id="dbus-monitor-可以监测消息"><a href="#dbus-monitor-可以监测消息" class="headerlink" title="dbus-monitor 可以监测消息"></a>dbus-monitor 可以监测消息</h3><h3 id="dbus-send-可以发送消息"><a href="#dbus-send-可以发送消息" class="headerlink" title="dbus-send 可以发送消息"></a>dbus-send 可以发送消息</h3><h4 id="列出DBus已知的服务"><a href="#列出DBus已知的服务" class="headerlink" title="列出DBus已知的服务"></a>列出DBus已知的服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dbus-send --print-reply --dest=org.freedesktop.DBus  /org/freedesktop/DBus org.freedesktop.DBus.ListNames</span><br></pre></td></tr></table></figure>
<p>结果如下，可以看到其中有几个<code>org.freedesktop</code>系列的服务，包括<code>org.freedesktop.secrets</code>，VSCode应该就是通过这个服务存储密钥的，根据我的配置，应该是由Gnome Keyring实际提供了这个服务。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">method return time=1609574874.565918 sender=org.freedesktop.DBus -&gt; destination=:1.236 serial=3 reply_serial=2</span><br><span class="line">   array [</span><br><span class="line">      string &quot;org.freedesktop.DBus&quot;</span><br><span class="line">      string &quot;:1.7&quot;</span><br><span class="line">      string &quot;:1.93&quot;</span><br><span class="line">      string &quot;org.freedesktop.network-manager-applet&quot;</span><br><span class="line">      string &quot;org.freedesktop.portal.IBus&quot;</span><br><span class="line">      string &quot;:1.8&quot;</span><br><span class="line">      string &quot;:1.9&quot;</span><br><span class="line">      string &quot;org.xfce.Thunar&quot;</span><br><span class="line">      string &quot;:1.95&quot;</span><br><span class="line">      string &quot;org.a11y.Bus&quot;</span><br><span class="line">      string &quot;org.freedesktop.systemd1&quot;</span><br><span class="line">      string &quot;:1.20&quot;</span><br><span class="line">      string &quot;:1.21&quot;</span><br><span class="line">      string &quot;:1.10&quot;</span><br><span class="line">      string &quot;org.xfce.Xfconf&quot;</span><br><span class="line">      string &quot;:1.22&quot;</span><br><span class="line">      string &quot;org.gnome.keyring&quot;</span><br><span class="line">      string &quot;:1.11&quot;</span><br><span class="line">      string &quot;:1.23&quot;</span><br><span class="line">      string &quot;org.freedesktop.FileManager1&quot;</span><br><span class="line">      string &quot;:1.12&quot;</span><br><span class="line">      string &quot;:1.13&quot;</span><br><span class="line">      string &quot;:1.0&quot;</span><br><span class="line">      string &quot;org.gtk.vfs.Daemon&quot;</span><br><span class="line">      string &quot;:1.14&quot;</span><br><span class="line">      string &quot;org.freedesktop.secrets&quot;</span><br><span class="line">      string &quot;:1.15&quot;</span><br><span class="line">      string &quot;:1.2&quot;</span><br><span class="line">      string &quot;:1.113&quot;</span><br><span class="line">      string &quot;:1.16&quot;</span><br><span class="line">      string &quot;:1.3&quot;</span><br><span class="line">      string &quot;org.lxde.lxpolkit&quot;</span><br><span class="line">      string &quot;:1.17&quot;</span><br><span class="line">      string &quot;org.xfce.FileManager&quot;</span><br><span class="line">      string &quot;org.freedesktop.IBus.Panel.Extension.Gtk3&quot;</span><br><span class="line">      string &quot;:1.4&quot;</span><br><span class="line">      string &quot;:1.236&quot;</span><br><span class="line">      string &quot;:1.115&quot;</span><br><span class="line">      string &quot;:1.104&quot;</span><br><span class="line">      string &quot;ca.desrt.dconf&quot;</span><br><span class="line">      string &quot;:1.18&quot;</span><br><span class="line">      string &quot;:1.5&quot;</span><br><span class="line">      string &quot;:1.105&quot;</span><br><span class="line">      string &quot;org.freedesktop.IBus&quot;</span><br><span class="line">      string &quot;:1.6&quot;</span><br><span class="line">   ]</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h4 id="列出文件夹中的文件"><a href="#列出文件夹中的文件" class="headerlink" title="列出文件夹中的文件"></a>列出文件夹中的文件</h4><p>执行下面的命令，然后默认的文件管理器就会打开Pictures文件夹了<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dbus-send --print-reply --dest=org.freedesktop.FileManager1 /org/freedesktop/FileManager1 org.freedesktop.FileManager1.ShowFolders array:string:<span class="string">&quot;file:///home/lpy/Pictures&quot;</span> string:3</span><br></pre></td></tr></table></figure></p>
<h2 id="使用DBus的应用"><a href="#使用DBus的应用" class="headerlink" title="使用DBus的应用"></a>使用DBus的应用</h2><p><a href="https://www.freedesktop.org/wiki/Software/dbus/">https://www.freedesktop.org/wiki/Software/dbus/</a><br><a href="https://www.freedesktop.org/wiki/Specifications/desktop-config-spec/">https://www.freedesktop.org/wiki/Specifications/desktop-config-spec/</a><br><a href="https://www.freedesktop.org/wiki/Specifications/file-manager-interface/">https://www.freedesktop.org/wiki/Specifications/file-manager-interface/</a>   </p>
<h3 id="GNOME-Keyring"><a href="#GNOME-Keyring" class="headerlink" title="GNOME Keyring"></a>GNOME Keyring</h3><h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Nvidia双显卡笔记本双屏配置</title>
    <url>/2021/01/16/Nvidia%E5%8F%8C%E6%98%BE%E5%8D%A1%E7%AC%94%E8%AE%B0%E6%9C%AC%E5%8F%8C%E5%B1%8F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>对于Ubuntu 20.10已经可以开箱即用，不过对于Debian10，Arch等系统还是需要专门进行配置才行。  </p>
<h2 id="方案一-使用开源驱动nouveau"><a href="#方案一-使用开源驱动nouveau" class="headerlink" title="方案一 使用开源驱动nouveau"></a>方案一 使用开源驱动nouveau</h2><p>此方案在此时最新的Arch上可行（我的是1050Ti），如果不想折腾直接安装nouveau软件包即可。<br>但是在我的Debian10上并不能直接使用，在此系统上如果没有在内核启动参数添加<code>nouveau.modeset=0</code>的话会直接卡到无法操作，所以PASS。  </p>
<h2 id="方案二-使用Nvidia官方驱动，采用Nvidia单显卡渲染"><a href="#方案二-使用Nvidia官方驱动，采用Nvidia单显卡渲染" class="headerlink" title="方案二 使用Nvidia官方驱动，采用Nvidia单显卡渲染"></a>方案二 使用Nvidia官方驱动，采用Nvidia单显卡渲染</h2><p>步骤如下。</p>
<h3 id="安装nvidia驱动"><a href="#安装nvidia驱动" class="headerlink" title="安装nvidia驱动"></a>安装nvidia驱动</h3><p>这一步根据系统不同安装不同的软件包即可，一般情况下，安装nvidia软件包的时候会自动blasklist nouveau，如果是上古版本可能需要手动blasklist。</p>
<h3 id="xorg-conf配置"><a href="#xorg-conf配置" class="headerlink" title="xorg.conf配置"></a>xorg.conf配置</h3><p>可以在xorg.conf中进行具体配置，也可以在xorg.conf.d中添加一个nvidia配置用于自动配置，第二种方式不需要xorg.conf文件。</p>
<h4 id="方法一-直接配置xorg-conf文件"><a href="#方法一-直接配置xorg-conf文件" class="headerlink" title="方法一 直接配置xorg.conf文件"></a>方法一 直接配置xorg.conf文件</h4><p>为Nvidia显卡配置驱动nvidia，为Intel核显配置驱动modesetting，具体工作原理参见debian和nvidia文档。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Section <span class="string">&quot;ServerLayout&quot;</span></span><br><span class="line">    Identifier     <span class="string">&quot;Layout0&quot;</span></span><br><span class="line">    Screen      0  <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">    Inactive       <span class="string">&quot;intel&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Device&quot;</span></span><br><span class="line">    Identifier     <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">    Driver         <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">    <span class="comment"># By default, the NVIDIA X driver will bail out if there </span></span><br><span class="line">    <span class="comment"># are no displays available. In order to ensure that the </span></span><br><span class="line">    <span class="comment"># X server can start with no heads connected directly to </span></span><br><span class="line">    <span class="comment"># the dGPU, you must add </span></span><br><span class="line">    <span class="comment"># &#x27;Option &quot;AllowEmptyInitialConfiguration&quot;&#x27; to the </span></span><br><span class="line">    <span class="comment"># &quot;Screen&quot; section of xorg.conf.</span></span><br><span class="line">    Option         <span class="string">&quot;AllowEmptyInitialConfiguration&quot;</span></span><br><span class="line">    VendorName     <span class="string">&quot;NVIDIA Corporation&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Device&quot;</span></span><br><span class="line">    Identifier     <span class="string">&quot;intel&quot;</span></span><br><span class="line">    <span class="comment"># By default, your xorg.conf will be set up such that only</span></span><br><span class="line">    <span class="comment"># the NVIDIA driver will be loaded. In order to ensure </span></span><br><span class="line">    <span class="comment"># that the iGPU’s heads are available for configuration, </span></span><br><span class="line">    <span class="comment"># the &#x27;modesetting&#x27; driver must be specified.</span></span><br><span class="line">    Driver         <span class="string">&quot;modesetting&quot;</span></span><br><span class="line">    VendorName     <span class="string">&quot;Intel Graphics&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Screen&quot;</span></span><br><span class="line">    Identifier     <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">    Device         <span class="string">&quot;nvidia&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Screen&quot;</span></span><br><span class="line">    Identifier     <span class="string">&quot;intel&quot;</span></span><br><span class="line">    Device         <span class="string">&quot;intel&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其实有一个官方工具<code>nvidia-xconfig</code>可以自动生成配置，但是它生成的配置只会在外接显示器上显示，所以需要自己配置双屏，不过可以借助此工具生成一个配置框架再修改。</p>
<h4 id="方法二-添加文件-etc-X11-xorg-conf-d-10-nvidia-drm-outputclass-conf指导系统进行自动配置"><a href="#方法二-添加文件-etc-X11-xorg-conf-d-10-nvidia-drm-outputclass-conf指导系统进行自动配置" class="headerlink" title="方法二 添加文件/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf指导系统进行自动配置"></a>方法二 添加文件<code>/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf</code>指导系统进行自动配置</h4><p>这个方法来自<a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus#Use_NVIDIA_graphics_only">Arch的文档</a>，和方法一的核心配置大致相同，只是方法一是直接指定了Device，Screen，ServerLayout等，这里只是添加OutputClass，指导X Server自动配置。</p>
<p>添加文件<code>/etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf</code>，内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Section &quot;OutputClass&quot;</span><br><span class="line">	Identifier  &quot;intel&quot;</span><br><span class="line">	MatchDriver &quot;i915&quot;</span><br><span class="line">	Driver      &quot;modesetting&quot;</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section &quot;OutputClass&quot;</span><br><span class="line">	Identifier  &quot;nvidia&quot;</span><br><span class="line">	MatchDriver &quot;nvidia-drm&quot;</span><br><span class="line">	Driver      &quot;nvidia&quot;</span><br><span class="line">	Option      &quot;AllowEmptyInitialConfiguration&quot;</span><br><span class="line">	Option      &quot;PrimaryGPU&quot;   &quot;yes&quot;</span><br><span class="line">	ModulePath  &quot;/usr/lib/nvidia/xorg&quot;</span><br><span class="line">	ModulePath  &quot;/usr/lib/xorg/modules&quot;</span><br><span class="line">EndSection</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="使用xrandr配置双屏"><a href="#使用xrandr配置双屏" class="headerlink" title="使用xrandr配置双屏"></a>使用<code>xrandr</code>配置双屏</h3><p>配置完上面的之后可能需要重启X服务，最简单的方法大概就是直接重启机器了。  </p>
<p>配置内容如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xrandr --setprovideroutputsource modesetting NVIDIA-0</span><br><span class="line">xrandr --auto</span><br><span class="line"><span class="comment"># 如果显示DPI不正常的话添加下面的DPI配置</span></span><br><span class="line"><span class="comment"># xrandr --dpi 96</span></span><br></pre></td></tr></table></figure>
<p>其中最关键的是第一条命令。可以把这几条命令写入 <code>~/.xinitrc</code> 或者 <code>~/xsession</code>，根据自己的具体情况吧，也可能需要配置你的Display Manager（如果有的话）。</p>
<p>核心步骤已经说的差不多了，到这里为止应该已经可以在xrandr中看到内置显示器和外置显示器都处于connected状态了，已经可以根据自己的需要进行输出了。</p>
<p>顺便附上自己的 <code>.xinitrc</code>，这来自一台没有使用Display Manager的Arch系统，在 <code>.xinitrc</code> 的最后启动了i3桌面管理器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment">#            original /etc/X11/xinit/xinitrc          #</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"></span><br><span class="line">userresources=<span class="variable">$HOME</span>/.Xresources</span><br><span class="line">usermodmap=<span class="variable">$HOME</span>/.Xmodmap</span><br><span class="line">sysresources=/etc/X11/xinit/.Xresources</span><br><span class="line">sysmodmap=/etc/X11/xinit/.Xmodmap</span><br><span class="line"></span><br><span class="line"><span class="comment"># merge in defaults and keymaps</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$sysresources</span> ]; <span class="keyword">then</span></span><br><span class="line">    xrdb -merge <span class="variable">$sysresources</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$sysmodmap</span> ]; <span class="keyword">then</span></span><br><span class="line">    xmodmap <span class="variable">$sysmodmap</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$userresources</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    xrdb -merge <span class="string">&quot;<span class="variable">$userresources</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$usermodmap</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    xmodmap <span class="string">&quot;<span class="variable">$usermodmap</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># start some nice programs</span></span><br><span class="line"><span class="keyword">if</span> [ -d /etc/X11/xinit/xinitrc.d ] ; <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">for</span> f <span class="keyword">in</span> /etc/X11/xinit/xinitrc.d/?*.sh ; <span class="keyword">do</span></span><br><span class="line">  [ -x <span class="string">&quot;<span class="variable">$f</span>&quot;</span> ] &amp;&amp; . <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line"> <span class="built_in">unset</span> f</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"><span class="comment">#                     lpy&#x27;s xinitrc                   #</span></span><br><span class="line"><span class="comment">#######################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dual Display</span></span><br><span class="line"><span class="comment"># The X server must be told to configure iGPU displays using PRIME. </span></span><br><span class="line"><span class="comment"># This can be done using the ‘xrandr’ command line tool, </span></span><br><span class="line"><span class="comment"># via ‘xrandr –setprovideroutputsource modesetting NVIDIA-0’. </span></span><br><span class="line"><span class="comment"># If this fails, you can verify the available graphics devices </span></span><br><span class="line"><span class="comment"># using ‘xrandr –listproviders’.</span></span><br><span class="line">xrandr --setprovideroutputsource modesetting NVIDIA-0</span><br><span class="line"><span class="comment"># Once PRIME is configured as described above, the iGPU’s heads may </span></span><br><span class="line"><span class="comment"># be configured as if they were the dGPU’s with any RandR-aware tool, </span></span><br><span class="line"><span class="comment"># be it ‘xrandr’ or a distro-provided graphical tool. The easiest way </span></span><br><span class="line"><span class="comment"># to get something to display is ‘xrandr –auto’, but more complicated </span></span><br><span class="line"><span class="comment"># configuration is possible as well.</span></span><br><span class="line">xrandr --auto</span><br><span class="line"><span class="comment"># If your display dpi is not correct add the following line</span></span><br><span class="line"><span class="comment"># xrandr --dpi 96</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable DPMS turning off the screen</span></span><br><span class="line">xset -dpms</span><br><span class="line">xset s off</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable bell</span></span><br><span class="line">xset -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable zapping (C-A-&lt;Bksp&gt; kills X)</span></span><br><span class="line">setxkbmap -option terminate:ctrl_alt_bksp</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enforce correct locales from the beginning:</span></span><br><span class="line"><span class="comment"># LC_ALL is unset since it overwrites everything</span></span><br><span class="line"><span class="comment"># LANG=de_DE.UTF-8 is used, except for:</span></span><br><span class="line"><span class="comment"># LC_MESSAGES=C never translates program output</span></span><br><span class="line"><span class="comment"># LC_TIME=en_DK leads to yyyy-mm-dd hh:mm date/time output</span></span><br><span class="line"><span class="built_in">unset</span> LC_ALL</span><br><span class="line"><span class="built_in">export</span> LANG=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> LC_MESSAGES=C</span><br><span class="line"><span class="built_in">export</span> LC_TIME=en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use XToolkit in java applications</span></span><br><span class="line"><span class="built_in">export</span> AWT_TOOLKIT=XToolkit</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set background color</span></span><br><span class="line">xsetroot -solid <span class="string">&quot;#333333&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable core dumps in case something goes wrong</span></span><br><span class="line"><span class="built_in">ulimit</span> -c unlimited</span><br><span class="line"></span><br><span class="line"><span class="comment"># input method</span></span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=ibus</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=ibus</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=@im=ibus</span><br><span class="line"></span><br><span class="line"><span class="comment"># i3-sensible-terminal</span></span><br><span class="line"><span class="built_in">export</span> TERMINAL=termite</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start i3 and log to ~/.i3/logfile</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.i3/log</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Starting at <span class="subst">$(date)</span>&quot;</span> &gt;&gt; ~/.i3/log/<span class="string">&quot;<span class="subst">$(date +%Y%m%d)</span>&quot;</span>.<span class="built_in">log</span></span><br><span class="line"><span class="built_in">exec</span> /usr/bin/i3 -V -d all &gt;&gt; ~/.i3/log/<span class="string">&quot;<span class="subst">$(date +%Y%m%d)</span>&quot;</span>.<span class="built_in">log</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://wiki.debian.org/NVIDIA%20Optimus">Debian Wiki - NVIDIA Optimus</a><br><a href="https://forums.developer.nvidia.com/t/prime-and-prime-synchronization/44423">Nvidia Forums - Prime and Prime synchronization</a><br><a href="https://wiki.archlinux.org/index.php/NVIDIA_Optimus#Use_NVIDIA_graphics_only">Arch Wiki - NVIDIA Optimus</a>  </p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>X</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA加密算法阅读笔记</title>
    <url>/2021/05/20/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近读到了阮一峰介绍的的<a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">RSA算法原理</a>，本文作为对这篇文章的简单批注。</p>
<h2 id="一、非对称加密算法"><a href="#一、非对称加密算法" class="headerlink" title="一、非对称加密算法"></a>一、非对称加密算法</h2><p>对称加密算法的加密与解密过程采用相同的密钥，在这种情况下，往往需要传输密钥，一旦密钥被拦截，就会暴露所传递的信息。</p>
<p>非对称加密算法包含一对密钥，称为公钥和私钥，私钥由密钥所有者保存，不必公开，公钥可以公开。非对称加密算法既可以用于加密也可用于签名。</p>
<p>当用于加密时，消息发送者使用接收者的公钥对消息进行加密，然后将密文传输给接收者，接收者使用对应的私钥对密文进行解密即可得到原始消息。由于经公钥加密的密文只能由对应的私钥进行解密，只要不暴露私钥，就可以安全地传输消息。而非对称加密算法都采用了十分安全的算法保证攻击者难以通过公钥推算私钥，因此可以安全地公开公钥。</p>
<p>当用于签名时，私钥持有者使用自己的私钥对消息的摘要进行签名，然后将消息和摘要的签名一并发送给接收者，接收者可以利用对应的公钥对签名进行解密，并将解密结果与消息摘要进行比对，以确定消息是否被篡改。</p>
<h2 id="二、互质关系"><a href="#二、互质关系" class="headerlink" title="二、互质关系"></a>二、互质关系</h2><p>如果两个正整数，除了1以外，没有其他公因子，我们就称这两个数是互质关系（coprime）。比如，15和32没有公因子，所以它们是互质关系。这说明，不是质数也可以构成互质关系。</p>
<p>关于互质关系，不难得到以下结论：</p>
<blockquote>
<p>　　1. 任意两个质数构成互质关系，比如13和61。</p>
<p>　　2. 一个数是质数，另一个数只要不是前者的倍数，两者就构成互质关系，比如3和10。</p>
<p>　　3. 如果两个数之中，较大的那个数是质数，则两者构成互质关系，比如97和57。</p>
<p>　　4. 1和任意一个自然数是都是互质关系，比如1和99。</p>
<p>　　5. p是大于1的整数，则p和p-1构成互质关系，比如57和56。</p>
<p>　　6. p是大于1的奇数，则p和p-2构成互质关系，比如17和15。</p>
</blockquote>
<p>上述结论中1-4均显而易见，下面对第5点进行证明：</p>
<blockquote>
<p>假设p和p-1存在公因子k，k为正整数，则：<br>(1) p = mk，m为正整数<br>(2) p-1 = nk，n为正整数<br>由(1)(2)可得：(3) (m-n)k = 1<br>由于m，n均为正整数，则m-n也为整数，记为a=m-n<br>则 ak=1，由于a和k均为整数，且k&gt;0，可得a=k=1<br>上述结论说明，p与p-1的公因子k只能为1，即p与p-1互质</p>
</blockquote>
<p>下面对第6点进行证明：</p>
<blockquote>
<p>假设p和p-1存在公因子k，k为正整数，则：<br>(1) p = mk，m为正整数<br>(2) p-2 = nk，n为正整数<br>由(1)(2)可得：(3) (m-n)k = 2<br>由于m，n均为正整数，则m-n也为整数，且k&gt;0<br>则可得两组解：<br>解(1): m-n=1,k=2<br>解(2): m-n=2,k=1<br>由于p为奇数，则因子k不能为偶数，第一组解不成立<br>故只能使用第二组解，可得p和p-2的公因子k为1，p和p-2互质</p>
</blockquote>
<h2 id="不写了"><a href="#不写了" class="headerlink" title="不写了"></a>不写了</h2><p>需要学的东西还很多，有一些阮一峰未介绍的转换细节，参考<a href="https://cnodejs.org/topic/5bb9c31e15e4fd1923f48d0b">RSA算法的数学原理与证明</a>吧，写不动了，太菜了，总是RSA算法很NB，需要用到大量数论知识</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">阮一峰：RSA算法原理（一）</a><br><a href="http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html">阮一峰：RSA算法原理（二）</a><br><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html">阮一峰：数字签名是什么？</a><br><a href="https://cnodejs.org/topic/5bb9c31e15e4fd1923f48d0b">RSA算法的数学原理与证明</a></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>辗转相除法</title>
    <url>/2021/05/21/%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>辗转相除法，又称欧几里得算法，用于系统性地求两个自然数的最大公约数。</p>
<h2 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h2><p>对于任意两个正整数 $a$ 和 $b$ ，求 $a$ 和 $b$ 的最大公约数 $gcd(a, b)$，等价于求解 $gcd(b, a \% b)$，相关资料一般会限定 $a \geq b$，但其实即使 $a &lt; b$ 也无妨，在这种情况下，第一步计算相当于交换 $a$ 和 $b$ 的位置。</p>
<h2 id="证明该算法所需知识"><a href="#证明该算法所需知识" class="headerlink" title="证明该算法所需知识"></a>证明该算法所需知识</h2><p>下文的论证会用到三种相关的数学方法，分别是数学归纳法、递归和无穷递降。</p>
<h3 id="归纳"><a href="#归纳" class="headerlink" title="归纳"></a>归纳</h3><p>数学归纳法经常用来证明某个定理对所有自然数成立：首先证明定理对一个特定的数n0成立（通常是1）；然后证明如果定理对自然数n成立的话，那么它对自然数n + 1成立。这样，便可证明定理对所有大于n0的自然数也成立。</p>
<h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><p>递归是将相关的数组成一个数列$(a1, a2, a3…)$，当中除初始项外，其中每一项都用前一项或前几项表示。如斐波那契数列就是递归的，每一项$F<em>n$都等于$F</em>{n−1} + F_{n−2}（n\geq2）$。辗转相除法中的一些等式也是递归的。</p>
<h3 id="无穷递降"><a href="#无穷递降" class="headerlink" title="无穷递降"></a>无穷递降</h3><p>最后，无穷递降是用方程的一个自然数解导出比它小的自然数解。但是，这种转化不能永远进行下去，因为只有有限个小于原来的自然数解的自然数。所以，要么方程无解，不然在有限步内必然能得出最小的自然数解。在下文会用到此法来证明辗转相除法一定会在有限步内结束。</p>
<h2 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h2><p>下面以非负整数为例说明如何算法步骤，每一次计算的输入都是前两次计算的非负余数 $r<em>{k-1}$和$r</em>{k-2}$，记$a=r<em>{-2}$，$b=r</em>{-1}$，按如下步骤递归计算  </p>
<blockquote>
<p>$a = p<em>0b + r_0$<br>$b = p_0r_0 + r_1$<br>$r_0 = p_0r_1 + r_2$<br>$r_1 = p_0r_2 + r_3$<br>…<br>$r</em>{k-2} = p<em>0r</em>{k-1} + r_k$  </p>
</blockquote>
<p>按照该算法进行计算，$r_k$必然会逐渐减小，并且由于$[0,r_0]$之间数字有限，该算法必然能够在第$N$步终止。</p>
<p>此时$r<em>N$为0，$r</em>{N-1}$即为$gcd(a,b)$</p>
<h2 id="证明上述算法的正确性"><a href="#证明上述算法的正确性" class="headerlink" title="证明上述算法的正确性"></a>证明上述算法的正确性</h2><p>辗转相除法的正确性可以分成两步来证明。在第一步，我们会证明算法的最终结果$r<em>{N-1}$同时整除$a$和$b$。因为它是一个公约数，所以必然小于或者等于最大公约数$g$。在第二步，我们证明$g$能整除$r</em>{N-1}$。所以g一定小于或等于$r<em>{N-1}$。两个不等式只在$r</em>{N-1}=g$时同时成立。具体证明如下：</p>
<h3 id="1-r-N-1-能整除-a-和-b"><a href="#1-r-N-1-能整除-a-和-b" class="headerlink" title="(1) $r_{N-1}$能整除$a$和$b$"></a>(1) $r_{N-1}$能整除$a$和$b$</h3><p>在算法终止时，余数$r<em>N=0$。则有：$r</em>{N-2} = p<em>0r</em>{N-1}$<br>说明$r<em>{N-1}$能整除$r</em>{N-2}$，又根据$r<em>{N-3} = p_0r</em>{N-2} + r<em>{N-1}$<br>可推断$r</em>{N-1}$能整除$r<em>{N-3}$，以此类推，最终可推断：<br>**$r</em>{N-1}$能整除$a$和$b$<strong>，说明 </strong>$r<em>{N-1}$是$a$和$b$的一个公约数**，且由于$g$是最大公约数，应有$r</em>{N-1} \leq g$</p>
<h3 id="2-g-能整除-r-N-1"><a href="#2-g-能整除-r-N-1" class="headerlink" title="(2) $g$能整除$r_{N-1}$"></a>(2) $g$能整除$r_{N-1}$</h3><p>根据定义，$g$是$a$和$b$的最大公约数，则$g$能整除$a$和$b$，$a$和$b$可表示为$a=mg$，$b=ng$<br>由$r<em>0=a-p_0b=mg-p_0ng=(m-p_0n)g$，可知$g|r_0$，即$g$能整除$r_0$,<br>由$r_1=b-p_0r_0$，$g|r_0$，$g|b$，可得$g|r_1$,<br>依此类推，最终可得$g|r</em>{N-1}$，则$g \leq r_{N-1}$</p>
<p>综合(1)(2)，可知$g=r_{N-1}$</p>
<h2 id="算法优化"><a href="#算法优化" class="headerlink" title="算法优化"></a>算法优化</h2><p><a href="https://zhuanlan.zhihu.com/p/31824895">漫画算法：辗转相除法是什么鬼？ - 知乎</a></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">辗转相除法 - 维基百科</a>  </p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>NumberTheory</tag>
      </tags>
  </entry>
  <entry>
    <title>扩展欧几里得算法</title>
    <url>/2021/05/21/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>上一篇文章简单介绍了欧几里得算法，即辗转相除法，它可以用于求解任意两个自然数 $a$ 和 $b$ 的最大公约数。而扩展欧几里得算法在求得 $gcd(a.b)$ 的同时，也能找到整数 $x$ 和 $y$ ,使它们满足裴蜀等式：<br>  
  $$ax+by=gcd(a,b)$$
  </p>
<h2 id="裴蜀定理"><a href="#裴蜀定理" class="headerlink" title="裴蜀定理"></a>裴蜀定理</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>在数论中，<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E7%AD%89%E5%BC%8F">裴蜀定理</a>是一个关于最大公约数的定理。</p>
<blockquote>
<p>对任意两个整数 $a$、$b$，设 $g=gcd(a,b)$ 是它们的最大公约数。那么关于未知数 $x$ 和 $y$ 的线性<a href="https://zh.wikipedia.org/wiki/%E4%B8%9F%E7%95%AA%E5%9C%96%E6%96%B9%E7%A8%8B">裴蜀等式</a>：<br>  
  $$ax+by=m$$
  <br> 有整数解 $(x, y)$ 当且仅当 $m$ 是 $g$ 的整数倍。</p>
</blockquote>
<p>裴蜀等式有解时必然有无穷多个解，每组解 $(x,y)$ 都称为裴蜀数。</p>
<h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p>参考<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E7%AD%89%E5%BC%8F">裴蜀定理 - 维基百科</a>  </p>
<blockquote>
<p>维基百科中证明步骤的大概思路是这样的：<br>(1) 给出集合 $A = {ax+by|(x,y)\in\mathbb{Z}^2}$<br>(2) 通过$A\cap\mathbb{N}^*\neq\emptyset$，$\mathbb{N}$良序等讨论，指出$A$中必然存在最小正元素$d_0=ax_0+by_0$  </p>
<blockquote>
<p>基本逻辑是这样的，<script type="math/tex">A\cap\mathbb{N}^*</script>中包含了$A$中所有的正元素，且$A\cap\mathbb{N}^*$是良序集合自然数集合$\mathbb{N}$的非空子集，故其中存在最小元素。也就是说集合$A$中存在最小正元素，记为$d_0$。  </p>
</blockquote>
<p>(3) 假设$p=ax+by$为$A$中任何一个正整数，试图计算$p$对$d_0$的带模除法，记为$p=qd_0+r$，因为$d_0$是$A$中最小正整数，故另一正整数$p$必然满足$p \geq d_0$，故$q &gt; 0$，$0\leq r &lt; d_0$<br>(4) 可得$r=p-qd_0=ax+by-q(ax_0+by_0)=a(x-qx_0)+b(y-qy_0)$，根据其形式可判断$r\in A$，结合上一条的结论$0\leq r &lt; d_0$，且$d_0$是$A$中的最小正元素，可推断$r=0$，则可知$A$中任意正整数$p$都满足$p=qd_0$，即$A$中任意正整数$p$都是$d_0$的整数倍，记为$d_0|p$，并且显然$a \in A,b \in A$，故$d_0|a$，$d_0|b$，于是可知$d_0$是$a$和$b$的公约数</p>
<blockquote>
<p>只能判断是公约数，结合后面的证明才得出最大公约数的结论，并且，上面的论述没有仔细考虑$a$，$b$为负值的情况，<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E7%AD%89%E5%BC%8F">裴蜀定理 - 维基百科</a>的证明也许适用于负数  </p>
</blockquote>
<p>(5) 设$a$与$b$的任意公约数为$d$，则$a$与$b$可表示为$a=kd$，$b=ld$，那么$d_0=ax_0+by_0=kdx_0+ldy_0=(kx_0+ly_0)d$，可知$d|d_0$，也就是说$d_0$是任何$a$和$b$的公约数$d$的倍数，最大公约数也不例外，且由上一点可知$d_0$是$a$和$b$的公约数，由此可推断$d_0$本身就是$a$与$b$的最大公约数<br>(6) 关于解的数量无限的讨论，详见<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E7%AD%89%E5%BC%8F">裴蜀定理 - 维基百科</a><br>(7) 总之，从上面的讨论可以得出如下结论：在集合$A = {ax+by|(x,y)\in\mathbb{Z}^2}$当中，最小正元素$d_0=gcd(a,b)$，且$A$中任意正元素都是$d_0$的倍数<br>(8) 因此如果$ax+by=m$有整数解，显然$m \in A$，根据上面的讨论可知 $gcd(a,b)|m$，即$m$是$gcd(a,b)$的整数倍</p>
</blockquote>
<h2 id="算法步骤"><a href="#算法步骤" class="headerlink" title="算法步骤"></a>算法步骤</h2><p>相比欧几里得算法，扩展欧几里得算法在计算余数($q_i$)和商($r_i$)的基础上又增加了两列数据：$s_i$和$t_i$，最终得到的$s_i$和$t_i$满足裴蜀等式：<br>  
  $$as_i+bt_i=r_i=gcd(a,b)$$
  </p>
<p>具体算法步骤如下:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">序号</th>
<th style="text-align:center">余数$r_i$</th>
<th style="text-align:center">$s_i$</th>
<th style="text-align:center">$t_i$</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$0$</td>
<td style="text-align:center">$a$</td>
<td style="text-align:center">$1$</td>
<td style="text-align:center">$0$</td>
</tr>
<tr>
<td style="text-align:center">$1$</td>
<td style="text-align:center">$b$</td>
<td style="text-align:center">$0$</td>
<td style="text-align:center">$1$</td>
</tr>
<tr>
<td style="text-align:center">$\vdots$</td>
<td style="text-align:center">$\vdots$</td>
<td style="text-align:center">$\vdots$</td>
<td style="text-align:center">$\vdots$</td>
</tr>
<tr>
<td style="text-align:center">$i+1$</td>
<td style="text-align:center">$r<em>{i+1}=r</em>{i-1}-q_ir_i$</td>
<td style="text-align:center">$s<em>{i+1}=s</em>{i-1}-q_is_i$</td>
<td style="text-align:center">$t<em>{i+1}=t</em>{i-1}-q_it_i$</td>
</tr>
</tbody>
</table>
</div>
<p>终止条件与欧几里得算法相同，当$r_{i+1}=0$时终止，此时：<br>  
  $$as_i+bt_i=r_i=gcd(a,b)$$
  </p>
<h2 id="证明-1"><a href="#证明-1" class="headerlink" title="证明"></a>证明</h2><p>上一篇文章证明了欧几里得算法的正确性，在此基础上说明扩展欧几里得算法的正确性。  </p>
<p>当$i=0$时，$r_0=a,s_0=1,t_i=0$，显然满足$as_i+bt_i=r_i$<br>当$i=1$时，$r_1=b,s_0=0,t_i=1$，显然满足$as_i+bt_i=r_i$<br>由下列递推式可推及所有$i&gt;1$时的情况：<br>  
  $$\begin{equation}\begin{split}
  r_{i+1}&=r_{i-1}-q_ir_i\\\\
  &=(as_{i-1}+bt_{i-1})-q_i(as_i+bt_i)\\\\
  &=a(s_{i-1}-q_is_i)-b(t_{i-1}-q_it_i)\\\\
  &=as_{i+1}+bt_{i+1} 
  \end{split}\end{equation}$$  
    </p>
<p>因此当$r_{i+1}=0$，算法终止时：<br>
$$as_i+bt_i=r_i=gcd(a,b)$$
</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95">扩展欧几里得算法 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">辗转相除法 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E7%AD%89%E5%BC%8F">裴蜀定理 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E4%B8%9F%E7%95%AA%E5%9C%96%E6%96%B9%E7%A8%8B">丢番图方程 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%85%83%E5%85%B3%E7%B3%BB">二元关系 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E5%81%8F%E5%BA%8F%E5%85%B3%E7%B3%BB">偏序关系 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E5%BA%8F%E5%85%B3%E7%B3%BB">全序关系 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E8%89%AF%E5%BA%8F%E5%85%B3%E7%B3%BB">良序关系 - 维基百科</a></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>NumberTheory</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA加密算法原理</title>
    <url>/2021/05/23/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>RSA加密算法是一种非对称加密算法。</p>
<h2 id="所需数学知识"><a href="#所需数学知识" class="headerlink" title="所需数学知识"></a>所需数学知识</h2><p>想要完整地理解RSA加密算法，需要了解不少数论知识，下面介绍几点核心内容。</p>
<h3 id="同余"><a href="#同余" class="headerlink" title="同余"></a>同余</h3><p><a href="https://zh.wikipedia.org/wiki/%E5%90%8C%E9%A4%98">同余</a>是数论中的一种等价关系。两个整数 $a$、$b$，若它们除以正整数 $m$ 所得的余数相等，则称 $a$、$b$ 对于模 $m$ 同余，表示为：<br>  
  $$a \equiv b \quad (mod \quad m)$$  
  </p>
<p>同余式有多种性质：  </p>
<ol>
<li><p>整除性  </p>
 
    $$a\equiv b{\pmod {m}}\Rightarrow c\cdot m=a-b,c\in \mathbb {Z}$$  
      
</li>
<li><p>传递性  </p>
 
    $$ \left.{\begin{matrix}a\equiv b{\pmod {m}}\\b\equiv c{\pmod {m}}\end{matrix}}\right\} \Rightarrow a\equiv c{\pmod {m}}$$  
      
</li>
<li><p>保持基本运算</p>
 
    $$\left.{\begin{matrix}a\equiv b{\pmod {m}}\\c\equiv d{\pmod {m}}\end{matrix}}\right\}\Rightarrow \left\{{\begin{matrix}a\pm c\equiv b\pm d{\pmod {m}}\\ac\equiv bd{\pmod {m}}\end{matrix}}\right.$$
    
<p> 当 $c=d$ 时，则为等量加法、减法：$a\pm c\equiv b\pm c{\pmod {m}}$  </p>
<p> 此性质更可进一步引申成：</p>
 
    $$ a\equiv b{\pmod {m}}\Rightarrow {\begin{cases}an\equiv bn{\pmod {m}},\forall n\in \mathbb {Z} \\a^{n}\equiv b^{n}{\pmod {m}},\forall n\in \mathbb {N} ^{0}\end{cases}}$$
    
</li>
<li><p>更多性质见<a href="https://zh.wikipedia.org/wiki/%E5%90%8C%E9%A4%98">同余 - 维基百科</a></p>
</li>
</ol>
<h3 id="欧拉定理"><a href="#欧拉定理" class="headerlink" title="欧拉定理"></a>欧拉定理</h3><p>在数论中，<a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%AE%9A%E7%90%86_(%E6%95%B0%E8%AE%BA">欧拉定理</a>)是一个关于同余的性质。  </p>
<p>若 $n$, $a$ 为正整数，且 $n$, $a$ 互质，即 $gcd(n,a)=1$，则<br>  
  $$a^{\varphi(n)}\equiv1 \quad (mod \quad n)$$  
  <br>其中 $\varphi(n)$ 为<a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0">欧拉函数</a>。</p>
<h3 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h3><p>在数论中，对正整数 $n$，<a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0">欧拉函数</a> $\varphi (n)$ 是小于或等于 $n$ 的正整数中与 $n$ 互质的数的数目。<br>特别地：  </p>
<ul>
<li>若 $n$ 为质数，则 $\varphi(n) = n - 1$  </li>
<li>若 $n$ 可以表示为两个互质的整数之积，比如 $n=pq$，则 $\varphi(n)=\varphi(p)\varphi(q)$  </li>
<li>若 $n$ 可以表示为两个质数之积，比如 $n=pq$，则 $\varphi(n)=\varphi(p)\varphi(q) = (p-1)(q-1)$  </li>
</ul>
<h3 id="扩展欧几里得算法"><a href="#扩展欧几里得算法" class="headerlink" title="扩展欧几里得算法"></a>扩展欧几里得算法</h3><p><a href="https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95">扩展欧几里得算法</a>是欧几里得算法的扩展。已知整数 $a$、$b$，扩展欧几里得算法在求得 $gcd(a,b)$ 的同时，能找到整数 $x$、$y$，使它们满足<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E5%AE%9A%E7%90%86">裴蜀等式</a>：<br>  
  $$ax+by=gcd(a,b)$$  
  </p>
<p>扩展欧几里得算法可用于求解<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E5%AE%9A%E7%90%86">裴蜀等式</a>：<br>  
  $$ax+by=m$$ 
   </p>
<p>当且仅当 $m$ 是 $a$ 与 $b$ 的最大公约数的倍数时，该方程有解，且有解时必有无数组解。</p>
<h3 id="模反元素"><a href="#模反元素" class="headerlink" title="模反元素"></a>模反元素</h3><p><a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%8F%8D%E5%85%83%E7%B4%A0">模反元素</a>也称为模倒数，或者模逆元。</p>
<p>一整数 $a$ 对同余 $n$ 之模逆元是指满足以下公式的整数 $b$<br>  
  $$a^{-1}\equiv b{\pmod {n}}$$
  </p>
<p>也可以写成以下的式子<br>  
  $$ab\equiv 1{\pmod  {n}}$$
  </p>
<p>或者<br>  
  $$ab{\pmod n}=1$$
  </p>
<p>由定义可得：<br>  
  $$ab = 1 + kn \Rightarrow ab - kn = 1$$  
  </p>
<p>要求解 $b$，就需要求不定方程 $ax + ny = 1$ 的解，根据<a href="https://zh.wikipedia.org/wiki/%E8%B2%9D%E7%A5%96%E7%AD%89%E5%BC%8F">裴蜀定理</a>，当且仅当 $1$ 是 $gcd(a, n)$ 的整数倍时，即 $a$ 与 $n$ 互质时，上述方程有解。用扩展欧几里得算法求得的 $x$ 即为模反元素 $b$。</p>
<h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>假设Alice想要通过一个不可靠的媒体接收Bob的一条私人信息。她可以用以下的方式来产生一个公钥和一个私钥：</p>
<ol>
<li>任意选取两个大质数 $p$、$q$，保证 $p \neq q$ ， 计算 $N=pq$  </li>
<li>根据欧拉函数，计算
  $$\begin{equation}\begin{split}
  \varphi(N)&=\varphi(pq)\\\\
  &=\varphi(p)\varphi(q)\\\\
  &=(p-1)(q-1)\end{split}\end{equation}$$  
  </li>
<li>选择一个小于 $\varphi(N)$ 的整数 $e$，使 $e$ 与 $\varphi(N)$ 互质，并求得 $e$ 关于 $\varphi(N)$ 的模逆元，称为 $d$。<br>由模逆元的定义可得： $ed \equiv 1 {\pmod {\varphi(N)}}$<br>则有 $ed + h\varphi(N) = 1$<br>已知 $e$ 与 $\varphi(N)$ 互质，根据裴蜀定理知该不定方程有解，利用扩展欧几里得算法即可求得 $e$ 的模逆元 $d$  </li>
<li>销毁 $p$、$q$、$\varphi(N)$  </li>
</ol>
<p>Alice将她的公钥 $(N,e)$ 传给Bob，而将她的私钥 $(N,d)$ 藏起来。</p>
<h2 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h2><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><p>假设Bob想给Alice送一个消息，他知道Alice产生的 $N$ 和 $e$。他使用起先与Alice约好的格式将消息转换为一个小于 $N$ 的非负整数 $m$，比如他可以将每一个字转换为这个字的Unicode码，然后将这些数字连在一起组成一个数字。假如他的信息非常长的话，他可以将这个信息分为几段，然后将每一段转换为 $m$。用下面这个公式他可以将 $m$ 加密为 $c$：<br>
$$ c\equiv m^e {\pmod N}$$
</p>
<p>计算 $c$ 并不复杂。Bob算出 $c$ 后就可以将它传递给Alice。</p>
<h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><p>Alice得到Bob的消息 $c$ 后就可以利用她的密钥 $N$ 和 $d$ 来解码。她可以用以下这个公式来将 $c$ 转换为 $m$：<br>
$$m \equiv c^d {\pmod N}$$
</p>
<p>得到 $m$ 后，她可以将原来的信息重新复原。</p>
<h3 id="解密原理"><a href="#解密原理" class="headerlink" title="解密原理"></a>解密原理</h3><p>根据加密公式可得：  </p>

$$\begin{equation}\begin{split}
&c \equiv m^e {\pmod N} \Rightarrow\\\\
&(c)^d \equiv (m^e)^d {\pmod N} \Rightarrow\\\\
&c^d \equiv m^{ed} {\pmod N}\\\\
\end{split}\end{equation}$$

<p>只要能证明下面的式子，就说明解密公式是正确的：</p>

$$\begin{equation}
c^d \equiv m^{ed} \equiv m {\pmod N}
\end{equation}$$

<p><strong>证明</strong>：<br>根据密钥推导过程，可知 $ed = 1 + h\varphi(N) $，则<br>
$$m^{ed} = m^{1+h\varphi(N)} = (m^{\varphi(N)})^h  m$$
</p>
<p>若明文 $m$ 与 $N$ 互质，根据欧拉定理可得：  </p>

$$\begin{equation}\begin{split}
&m^{\varphi(N)} \equiv 1 {\pmod N} \Rightarrow\\\\
&(m^{\varphi(N)})^h \equiv (1)^h {\pmod N} \Rightarrow\\\\
&(m^{\varphi(N)})^hm \equiv (1)^hm {\pmod N} \Rightarrow\\\\
&m^{ed} \equiv m {\pmod N} \Rightarrow\\\\
&c^{d} \equiv m {\pmod N}\\\\
\end{split}\end{equation}$$

<p>若明文 $m$ 与 $N$ 不互质，由于 $N=pq$，且$p$、$q$均为质数，而 $0 &lt; m &lt; N$，故 $m=kp$ 或 $m=kq$，下面以 $m=kp$ 为例展开证明：</p>
<p>如果 $m=kp$，则 $m$ 不会是 $q$ 的倍数，否则 $m$ 就会大于等于 $N$，违反了前提条件，而 $q$ 又是质数，故 $m$ 与 $q$ 互质，根据欧拉定理可得：<br>
$$\begin{equation}\begin{split}
&m^{\varphi(q)} \equiv 1 {\pmod q} \Rightarrow\\\\
&(m^{\varphi(q)})^{\varphi(p)} \equiv (1)^{\varphi(p)} {\pmod q} \Rightarrow\\\\
&m^{\varphi(q)\varphi(p)} \equiv 1 {\pmod q} \Rightarrow\\\\
&m^{\varphi(N)} \equiv 1 {\pmod q} \Rightarrow\\\\
&m^{h\varphi(N)} \equiv 1 {\pmod q} \Rightarrow\\\\
&m^{1+h\varphi(N)} \equiv m {\pmod q} \Rightarrow\\\\
&(kp)^{1+h\varphi(N)} \equiv kp {\pmod q} \Rightarrow\\\\
\end{split}\end{equation}$$
</p>
<p>由上式可得：</p>

$$\begin{equation}\begin{split}
&kp(kp)^{h\varphi(N)} = kp + tq\\\\
\end{split}\end{equation}$$

<p>由于$p$ 与 $q$ 互质，要使该式成立，须有 $t=t’p$，代入上式可得：</p>

$$\begin{equation}\begin{split}
&(kp)^{1+h\varphi(N)} = kp + t‘qp \Rightarrow\\\\
&(kp)^{1+h\varphi(N)} = kp + t‘N \Rightarrow\\\\
&m^{1+h\varphi(N)} = m + t‘N \Rightarrow\\\\
&m^{1+h\varphi(N)} \equiv m {\pmod N} \Rightarrow
\end{split}\end{equation}$$

<p>结合 $m^{ed} = m^{1+h\varphi(N)} = (m^{\varphi(N)})^h  m$ 可得：</p>

$$\begin{equation}\begin{split}
&c^d \equiv m^{ed} \equiv m^{1+h\varphi(N)} \equiv m {\pmod N}
\end{split}\end{equation}$$

<h2 id="签名与验证"><a href="#签名与验证" class="headerlink" title="签名与验证"></a>签名与验证</h2><p>见<a href="https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95">RSA加密算法 - 维基百科</a>。</p>
<p>基本原理与加密、解密基本一致，只是用私钥加密，用公钥解密。</p>
<h2 id="算法安全性"><a href="#算法安全性" class="headerlink" title="算法安全性"></a>算法安全性</h2><p>假设偷听者Eve获得了Alice的公钥 $n$ 和 $e$ 以及Bob的加密消息 $c$，但她无法直接获得Alice的密钥 $d$。要获得 $d$，最简单的方法是将 $n$ 分解为 $p$ 和 $q$，这样她可以得到同余方程 $ed\equiv 1{\pmod{(p-1)(q-1)}}$并解出 $d$，然后代入解密公式<br>  
  $$c^{d}\equiv m\ (\mathrm {mod} \ n)$$
  </p>
<p>导出m（破密）。但至今为止还没有人找到一个多项式时间的算法来分解一个大的整数的因子，同时也还没有人能够证明这种算法不存在（见因数分解）。  </p>
<p>至今为止也没有人能够证明对 $n$ 进行因数分解是唯一的从 $c$ 导出 $n$ 的方法，直到今天也还没有找到比它更简单的方法。（至少没有公开的方法。）</p>
<p>因此今天一般认为只要 $n$ 足够大，那么黑客就没有办法了。</p>
<p>假如 $n$ 的长度小于或等于256位，那么用一台个人电脑在几个小时内就可以分解它的因子了。1999年，数百台电脑合作分解了一个512位长的 $n$。一个由Shamir 和Tromer在2003年从理论上构建的硬件TWIRL，使人们开始质疑1024位长的 $n$ 的安全性，目前推荐 $n$ 的长度至少为2048位。</p>
<p>1994年彼得·秀尔（Peter Shor）证明一台量子计算机可以在多项式时间内进行因数分解。假如量子计算机有朝一日可以成为一种可行的技术的话，那么秀尔的算法可以淘汰RSA和相关的派生算法。（即依赖于分解大整数困难性的加密算法）</p>
<p>假如有人能够找到一种有效的分解大整数的算法的话，或者假如量子计算机可行的话，那么在解密和制造更长的钥匙之间就会展开一场竞争。但从原理上来说RSA在这种情况下是不可靠的。  </p>
<h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p>下面的代码根据上述原理实现了一个简单版本的RSA密钥生成、加密、解密的DEMO。 </p>
<p>本以为应该不难实现，结果发现大质数的生成本身就是问题，除此之外还有其它的一些问题。关键问题以及大致思路：</p>
<ol>
<li><p>质数的生成，经过查阅资料，得知大致方法是随机选取大整数，并通过一些方法判断它是不是质数，然而暴力的方法复杂度极高，目前有几种比较有效的质数判定方法，在此不再赘述，可自行查阅相关资料。下列程序当中使用了 <code>Crypto</code> 模块的素数生成功能。  </p>
</li>
<li><p>公钥参数 $e$ 的生成， $e$ 需要与 $\varphi(N)$ 互质，一种简单的思路是选取一个质数 $e$，只要 $\phi(N)$ 不是它的整数倍即可。</p>
</li>
</ol>
<p>具体代码如下:</p>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Tuple</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RSAKey</span>:</span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">RSAParams</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, p, q, N, phiN, e, d</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.p = p</span><br><span class="line">        self.q = q</span><br><span class="line">        self.N = N</span><br><span class="line">        self.phiN = phiN</span><br><span class="line">        self.e = e</span><br><span class="line">        self.d = d</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;&quot;&quot;&#123;&#123;</span></span><br><span class="line"><span class="string">  p: <span class="subst">&#123;self.p&#125;</span>\n</span></span><br><span class="line"><span class="string">  q: <span class="subst">&#123;self.q&#125;</span>\n</span></span><br><span class="line"><span class="string">  N: <span class="subst">&#123;self.N&#125;</span>\n</span></span><br><span class="line"><span class="string">  phiN: <span class="subst">&#123;self.phiN&#125;</span>\n</span></span><br><span class="line"><span class="string">  e: <span class="subst">&#123;self.e&#125;</span>\n</span></span><br><span class="line"><span class="string">  d: <span class="subst">&#123;self.d&#125;</span></span></span><br><span class="line"><span class="string">&#125;&#125;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    self.params = self.__generateRSAParams()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">getPublicKey</span>(<span class="params">self</span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">int</span>, <span class="built_in">int</span>]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;get public key</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        Tuple[int, int]: (N, e)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (self.params.N, self.params.e)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">getPrivateKey</span>(<span class="params">self</span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">int</span>, <span class="built_in">int</span>]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;get private key</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        Tuple[int, int]: (N, d)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> (self.params.N, self.params.d)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__generateRSAParams</span>(<span class="params">self</span>) -&gt; RSAParams:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Generate parameters for RSA</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        RSAParams: instance of RSAParams</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 产生两个大素数</span></span><br><span class="line">    <span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line">    p : <span class="built_in">int</span> = number.getPrime(<span class="number">10</span>)</span><br><span class="line">    q : <span class="built_in">int</span> = number.getPrime(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># p 与 q 不能相等</span></span><br><span class="line">    <span class="keyword">while</span> q == p:</span><br><span class="line">      q : <span class="built_in">int</span> = number.getPrime(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># N = p x q</span></span><br><span class="line">    N : <span class="built_in">int</span> = p * q</span><br><span class="line"></span><br><span class="line">    <span class="comment"># phi(N)</span></span><br><span class="line">    phiN : <span class="built_in">int</span> = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 取公钥参数 e，e 应小于 phi(N) 且与 phi(N) 互质</span></span><br><span class="line">    <span class="comment"># 一种简单的思路是找到一个质数 e，只要 phi(N) 不是它的倍数即可</span></span><br><span class="line">    e : <span class="built_in">int</span> = number.getPrime(<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">while</span> phiN % e == <span class="number">0</span>:</span><br><span class="line">      e : <span class="built_in">int</span> = number.getPrime(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用扩展欧几里得算法求解 e 的模逆元 d</span></span><br><span class="line">    _, d, _ = self.__exgcd(e, phiN)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果计算得到的 d 是负数，则加上 phi(N) 将其转为正数，仍然与 phi(N) 保持同余关系 </span></span><br><span class="line">    <span class="keyword">if</span> d &lt; <span class="number">0</span>:</span><br><span class="line">      d = d + phiN</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> self.RSAParams(p, q, N, phiN, e, d)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__exgcd</span>(<span class="params">self, a, b</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;扩展欧几里得算法</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        a (int): a</span></span><br><span class="line"><span class="string">        b (int): b</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        int: (gcd, x, y)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ri :<span class="built_in">int</span> = a</span><br><span class="line">    rj :<span class="built_in">int</span> = b</span><br><span class="line">    si :<span class="built_in">int</span> = <span class="number">1</span></span><br><span class="line">    sj :<span class="built_in">int</span> = <span class="number">0</span></span><br><span class="line">    ti :<span class="built_in">int</span> = <span class="number">0</span></span><br><span class="line">    tj :<span class="built_in">int</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> rj != <span class="number">0</span>:</span><br><span class="line">      qi = ri // rj</span><br><span class="line"></span><br><span class="line">      rtemp = rj</span><br><span class="line">      rj = ri - qi * rj</span><br><span class="line">      ri = rtemp</span><br><span class="line"></span><br><span class="line">      stemp = sj</span><br><span class="line">      sj = si - qi * sj</span><br><span class="line">      si = stemp</span><br><span class="line"></span><br><span class="line">      ttemp = tj</span><br><span class="line">      tj = ti - qi * tj</span><br><span class="line">      ti = ttemp</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> ri, si, ti</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">m, publicKey</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">  <span class="string">&quot;&quot;&quot;encrypt message using public key</span></span><br><span class="line"><span class="string">  Args:</span></span><br><span class="line"><span class="string">      m (int): origin message m</span></span><br><span class="line"><span class="string">      publicKey (Tuple[int, int]): (N, e)</span></span><br><span class="line"><span class="string">  Returns:</span></span><br><span class="line"><span class="string">      int: encrypted message c</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">  N, e = publicKey</span><br><span class="line">  c = m ** e % N</span><br><span class="line">  <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, privateKey</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">  <span class="string">&quot;&quot;&quot;decrypt message using private key</span></span><br><span class="line"><span class="string">  Args:</span></span><br><span class="line"><span class="string">      c (int): encrypted message c</span></span><br><span class="line"><span class="string">      privateKey (Tuple[int, int]): (N, d)</span></span><br><span class="line"><span class="string">  Returns:</span></span><br><span class="line"><span class="string">      int: origin message m</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">  N, d = privateKey</span><br><span class="line">  m = c ** d % N</span><br><span class="line">  <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">  rsakey = RSAKey()</span><br><span class="line">  publicKey = rsakey.getPublicKey()</span><br><span class="line">  privateKey = rsakey.getPrivateKey()</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;publicKey: <span class="subst">&#123;publicKey&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;privateKey: <span class="subst">&#123;privateKey&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">  message = <span class="number">12345</span></span><br><span class="line">  encryptedMessage = encrypt(message, publicKey)</span><br><span class="line">  decryptedMessage = decrypt(encryptedMessage, privateKey)</span><br><span class="line"></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;origin message: <span class="subst">&#123;message&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;encrypted message: <span class="subst">&#123;encryptedMessage&#125;</span>&quot;</span>)</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">f&quot;decrypted message: <span class="subst">&#123;decryptedMessage&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zh.wikipedia.org/wiki/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95">扩展欧几里得算法 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E5%90%8C%E9%A4%98">同余 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%AE%9A%E7%90%86_(%E6%95%B0%E8%AE%BA">欧拉定理 - 维基百科</a>)<br><a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0">欧拉函数 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%8F%8D%E5%85%83%E7%B4%A0">模反元素 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95">RSA加密算法 - 维基百科</a><br><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">阮一峰：RSA算法原理（一）</a><br><a href="http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html">阮一峰：RSA算法原理（二）</a><br><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html">阮一峰：数字签名是什么？</a><br><a href="https://cnodejs.org/topic/5bb9c31e15e4fd1923f48d0b">RSA算法的数学原理与证明</a>  </p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>NumberTheory</tag>
      </tags>
  </entry>
  <entry>
    <title>利用快速幂模运算加速RSA加密解密过程</title>
    <url>/2021/07/02/%E5%88%A9%E7%94%A8%E5%BF%AB%E9%80%9F%E5%B9%82%E6%A8%A1%E8%BF%90%E7%AE%97%E5%8A%A0%E9%80%9FRSA%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>之前实现RSA加密算法时，计算幂成了程序的瓶颈，前段时间了解了快速幂以及快速幂模运算，这种算法可以用于加速RSA加密解密过程中的幂模计算过程。</p>
<h2 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h2><h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>  用精确的数学符号表示的话，有下面两种写法：  </p>
  
  $$ a ^ b = {\begin{cases}(a ^ {\frac b 2}) ^ 2, &if\ b\ is\ even\\a \cdot (a ^ {\frac {b-1} 2}) ^ 2, &if\ b\ is\ odd\end{cases}}$$
  
<p>  或</p>
  
  $$ a ^ b = {\begin{cases}(a ^ {\lfloor {\frac b 2} \rfloor}) ^ 2, &if\ b\ is\ even\\a \cdot (a ^ {\lfloor {\frac b 2} \rfloor}) ^ 2, &if\ b\ is\ odd\end{cases}}$$
  
<p>  上述公式显然成立，故计算幂可用上述递推式进行。</p>
<p>  而在编程语言中，整除一般就相当于向下取整，故上述递推式可以表示成下面的伪代码：<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func pow(a, b):</span><br><span class="line">  if b is 0:</span><br><span class="line">    return 1</span><br><span class="line">  if b is even:</span><br><span class="line">    return pow(a, b/2) ^ 2</span><br><span class="line">  if b is odd:</span><br><span class="line">    return pow(a, b/2) ^ 2 * a</span><br></pre></td></tr></table></figure></p>
<h3 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h3><p>  对于 $a^b$，用原始的求幂算法，需要计算 $b$ 次乘法，用上述递推式大约需要运算 $log\ b$ 次</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>下面的代码实现了朴素求幂算法和快速幂算法，并对比了他们的运算时间。  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calc_time</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner_func</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        func(*args, **kwargs)</span><br><span class="line">        end_time = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Time used: <span class="subst">&#123;end_time - start_time&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> inner_func</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@calc_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prime_pow</span>(<span class="params">base, power</span>):</span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(power):</span><br><span class="line">        res *= base</span><br><span class="line">    <span class="comment"># print(f&#x27;The last five digits of the result &#123;base&#125; ^ &#123;power&#125;: &#123;str(res)[-5:]&#125;&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">quick_pow</span>(<span class="params">base, power</span>):</span><br><span class="line">    <span class="keyword">if</span> power == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    res = quick_pow(base, power // <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> power % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> res * res</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> res * res * base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@calc_time</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">quick_pow_wrapper</span>(<span class="params">base, power</span>):</span><br><span class="line">    res = quick_pow(base, power)</span><br><span class="line">    <span class="comment"># print(f&#x27;The last five digits of the result of &#123;base&#125; ^ &#123;power&#125;: &#123;str(res)[-5:]&#125;&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">prime_pow(<span class="number">2</span>, <span class="number">1000000</span>) <span class="comment"># Time used: 15.331219911575317</span></span><br><span class="line">quick_pow_wrapper(<span class="number">2</span>, <span class="number">1000000</span>) <span class="comment"># Time used: 0.003216981887817383</span></span><br><span class="line">quick_pow_wrapper(<span class="number">13789</span>, <span class="number">722341</span>) <span class="comment"># Time used: 0.003216981887817383</span></span><br><span class="line">prime_pow(<span class="number">13789</span>, <span class="number">722341</span>) <span class="comment"># long long long long no result</span></span><br></pre></td></tr></table></figure>
<h2 id="快速幂模"><a href="#快速幂模" class="headerlink" title="快速幂模"></a>快速幂模</h2><h3 id="基本原理-1"><a href="#基本原理-1" class="headerlink" title="基本原理"></a>基本原理</h3><p>求模运算有这样一条性质: <script type="math/tex">(a * b) \% m = (a \% m * b \% m) \% m</script></p>
<p>利用这一性质，结合快速幂递推式可得：</p>
  
  $$ a ^ b \% m = {\begin{cases}(a ^ {\lfloor {\frac b 2} \rfloor} \% m) ^ 2 \%m, &if\ b\ is\ even\\(a \%m \cdot (a ^ {\lfloor {\frac b 2} \rfloor} \%m) ^ 2) \%m, &if\ b\ is\ odd\end{cases}}$$
  
<p>表示成伪代码如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func pow_mod(a, b, m):</span><br><span class="line">  if b is 0:</span><br><span class="line">    return 1</span><br><span class="line">  if b is even:</span><br><span class="line">    return pow_mod(a, b/2, m) ^ 2 % m</span><br><span class="line">  if b is odd:</span><br><span class="line">    return (a % m * pow_mod(a, b/2, m) ^ 2) % m</span><br></pre></td></tr></table></figure>
<h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">pow_mod</span>(<span class="params">a, b, m</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    res = pow_mod(a, b // <span class="number">2</span>, m)</span><br><span class="line">    <span class="keyword">if</span> b % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> res * res % m</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> res * res * (a % m) % m</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(pow_mod(<span class="number">2147483647</span>, <span class="number">200</span>, <span class="number">1337</span>))</span><br></pre></td></tr></table></figure>
<h2 id="加速RSA加密解密过程"><a href="#加速RSA加密解密过程" class="headerlink" title="加速RSA加密解密过程"></a>加速RSA加密解密过程</h2><p>RSA加密和解密需要计算大数幂的模，用原始计算方法难以进行，可以用快速幂模运算加速运算过程。</p>
<p>下面的代码是对 <code>2021-05-23-RSA加密算法原理</code> 中RSA密钥生成、加密、解密的DEMO的改进。 </p>
<p>具体代码如下:</p>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Tuple</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RSAKey</span>:</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">RSAParams</span>:</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, p, q, N, phiN, e, d</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">            self.p = p</span><br><span class="line">            self.q = q</span><br><span class="line">            self.N = N</span><br><span class="line">            self.phiN = phiN</span><br><span class="line">            self.e = e</span><br><span class="line">            self.d = d</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;&quot;&quot;&#123;&#123;</span></span><br><span class="line"><span class="string">  p: <span class="subst">&#123;self.p&#125;</span>\n</span></span><br><span class="line"><span class="string">  q: <span class="subst">&#123;self.q&#125;</span>\n</span></span><br><span class="line"><span class="string">  N: <span class="subst">&#123;self.N&#125;</span>\n</span></span><br><span class="line"><span class="string">  phiN: <span class="subst">&#123;self.phiN&#125;</span>\n</span></span><br><span class="line"><span class="string">  e: <span class="subst">&#123;self.e&#125;</span>\n</span></span><br><span class="line"><span class="string">  d: <span class="subst">&#123;self.d&#125;</span></span></span><br><span class="line"><span class="string">&#125;&#125;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        self.params = self.__generateRSAParams()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getPublicKey</span>(<span class="params">self</span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">int</span>, <span class="built_in">int</span>]:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;get public key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Tuple[int, int]: (N, e)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> (self.params.N, self.params.e)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getPrivateKey</span>(<span class="params">self</span>) -&gt; <span class="type">Tuple</span>[<span class="built_in">int</span>, <span class="built_in">int</span>]:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;get private key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Tuple[int, int]: (N, d)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> (self.params.N, self.params.d)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__generateRSAParams</span>(<span class="params">self</span>) -&gt; RSAParams:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;Generate parameters for RSA</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            RSAParams: instance of RSAParams</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 产生两个大素数</span></span><br><span class="line">        <span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line">        p: <span class="built_in">int</span> = number.getPrime(<span class="number">476</span>)</span><br><span class="line">        q: <span class="built_in">int</span> = number.getPrime(<span class="number">476</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># p 与 q 不能相等</span></span><br><span class="line">        <span class="keyword">while</span> q == p:</span><br><span class="line">            q: <span class="built_in">int</span> = number.getPrime(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># N = p x q</span></span><br><span class="line">        N: <span class="built_in">int</span> = p * q</span><br><span class="line"></span><br><span class="line">        <span class="comment"># phi(N)</span></span><br><span class="line">        phiN: <span class="built_in">int</span> = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 取公钥参数 e，e 应小于 phi(N) 且与 phi(N) 互质</span></span><br><span class="line">        <span class="comment"># 一种简单的思路是找到一个质数 e，只要 phi(N) 不是它的倍数即可</span></span><br><span class="line">        e: <span class="built_in">int</span> = number.getPrime(<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">while</span> phiN % e == <span class="number">0</span>:</span><br><span class="line">            e: <span class="built_in">int</span> = number.getPrime(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用扩展欧几里得算法求解 e 的模逆元 d</span></span><br><span class="line">        _, d, _ = self.__exgcd(e, phiN)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果计算得到的 d 是负数，则加上 phi(N) 将其转为正数，仍然与 phi(N) 保持同余关系</span></span><br><span class="line">        <span class="keyword">if</span> d &lt; <span class="number">0</span>:</span><br><span class="line">            d = d + phiN</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> self.RSAParams(p, q, N, phiN, e, d)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__exgcd</span>(<span class="params">self, a, b</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;扩展欧几里得算法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            a (int): a</span></span><br><span class="line"><span class="string">            b (int): b</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            int: (gcd, x, y)</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        ri: <span class="built_in">int</span> = a</span><br><span class="line">        rj: <span class="built_in">int</span> = b</span><br><span class="line">        si: <span class="built_in">int</span> = <span class="number">1</span></span><br><span class="line">        sj: <span class="built_in">int</span> = <span class="number">0</span></span><br><span class="line">        ti: <span class="built_in">int</span> = <span class="number">0</span></span><br><span class="line">        tj: <span class="built_in">int</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> rj != <span class="number">0</span>:</span><br><span class="line">            qi = ri // rj</span><br><span class="line"></span><br><span class="line">            rtemp = rj</span><br><span class="line">            rj = ri - qi * rj</span><br><span class="line">            ri = rtemp</span><br><span class="line"></span><br><span class="line">            stemp = sj</span><br><span class="line">            sj = si - qi * sj</span><br><span class="line">            si = stemp</span><br><span class="line"></span><br><span class="line">            ttemp = tj</span><br><span class="line">            tj = ti - qi * tj</span><br><span class="line">            ti = ttemp</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ri, si, ti</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pow_mod</span>(<span class="params">a: <span class="built_in">int</span>, b: <span class="built_in">int</span>, m: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;fast power module</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        a : a ^ b % m</span></span><br><span class="line"><span class="string">        b : a ^ b % m</span></span><br><span class="line"><span class="string">        m : a ^ b % m</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        int: a ^ b % m</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    res = pow_mod(a, b // <span class="number">2</span>, m)</span><br><span class="line">    <span class="keyword">if</span> b % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> res * res % m</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> res * res * (a % m) % m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">m, publicKey</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;encrypt message using public key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        m (int): origin message m</span></span><br><span class="line"><span class="string">        publicKey (Tuple[int, int]): (N, e)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        int: encrypted message c</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    N, e = publicKey</span><br><span class="line">    c = pow_mod(m, e, N)</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">c, privateKey</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;decrypt message using private key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        c (int): encrypted message c</span></span><br><span class="line"><span class="string">        privateKey (Tuple[int, int]): (N, d)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        int: origin message m</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    N, d = privateKey</span><br><span class="line">    <span class="comment"># m = c ** d % N</span></span><br><span class="line">    m = pow_mod(c, d, N)</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    rsakey = RSAKey()</span><br><span class="line">    publicKey = rsakey.getPublicKey()</span><br><span class="line">    privateKey = rsakey.getPrivateKey()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;publicKey: <span class="subst">&#123;publicKey&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;privateKey: <span class="subst">&#123;privateKey&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    message = <span class="number">123456789</span></span><br><span class="line">    encryptedMessage = encrypt(message, publicKey)</span><br><span class="line">    decryptedMessage = decrypt(encryptedMessage, privateKey)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;origin message: <span class="subst">&#123;message&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;encrypted message: <span class="subst">&#123;encryptedMessage&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;decrypted message: <span class="subst">&#123;decryptedMessage&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>NumberTheory</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10配置过程记录</title>
    <url>/2021/07/10/Win10%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>由于原来的系统出了一些问题，今日重装了Windows10系统，下面简要记录一下各种基本设定以及开发环境的配置过程，供今后参考。</p>
<h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><h3 id="如何让Win10在系统盘重建ESP分区？"><a href="#如何让Win10在系统盘重建ESP分区？" class="headerlink" title="如何让Win10在系统盘重建ESP分区？"></a>如何让Win10在系统盘重建ESP分区？</h3><p>系统安装基本没什么好说的，只是需要注意如果有多块磁盘，并且其中一个磁盘存在ESP分区（Fat32），则在重装Win10时，即使选择安装到另一块未分区的磁盘，似乎Win10安装器也不会在另一块磁盘重建ESP分区，而会使用已有的ESP分区，如果想要Win10安装器在操作系统所在磁盘重建ESP分区，可以把另一块磁盘的ESP分区删掉。</p>
<p>对于无洁癖用户大可不必这样操作，不过给Win10预留一个未分区磁盘，还是比分好一个NTFS分区给它用要好的， 这样Win10安装器似乎会建立好几个分区，也许多余的分区是用于系统恢复的。</p>
<h3 id="UEFI启动项管理软件"><a href="#UEFI启动项管理软件" class="headerlink" title="UEFI启动项管理软件"></a>UEFI启动项管理软件</h3><ul>
<li>*nix系统建议直接使用 <code>efibootmgr</code>，至少Arch系、Debian系的系统都自带这个工具。  </li>
<li>Windows系统可以用 <code>EasyUEFI</code>，不过试用版过期后就没法用了，即使重装、删除注册表项，也难以重新试用，可以用pj版。  </li>
</ul>
<h3 id="指定用户名"><a href="#指定用户名" class="headerlink" title="指定用户名"></a>指定用户名</h3><p>如果按照Win10默认的引导进行配置，它会诱导用户登录微软账户，并自动把微软账户名的前缀（邮箱前缀）作为系统用户名，作为一个经常使用终端的CSer，是无法容忍奇奇怪怪的用户名的。  </p>
<p>如果想要自定义用户名，需要先以本地账户登录，自己起一个用户名，之后再切换到微软账户登录即可。</p>
<h2 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h2><h3 id="卸载自带应用"><a href="#卸载自带应用" class="headerlink" title="卸载自带应用"></a>卸载自带应用</h3><p>卸载一系列自带的无用软件。</p>
<h3 id="Onedrive同步"><a href="#Onedrive同步" class="headerlink" title="Onedrive同步"></a>Onedrive同步</h3><p>登录Onedrive并开启个人文件夹同步，打开 <strong>文档</strong> 文件夹的同步功能，这样应该可以实现微信和QQ聊天记录的同步，写此文时尚未安装QQ和微信，所以不是特别确定。</p>
<h2 id="WSL2配置"><a href="#WSL2配置" class="headerlink" title="WSL2配置"></a>WSL2配置</h2><p>本次重装彻底删掉了Ubuntu系统，打算迁移到WSL2，毕竟双系统切换太麻烦了。  </p>
<h3 id="WSL2安装"><a href="#WSL2安装" class="headerlink" title="WSL2安装"></a>WSL2安装</h3><p>按照官方教程配置即可，主要步骤大概如下：</p>
<ul>
<li>开启两项可选功能： Linux子系统 和 虚拟化平台</li>
<li>下载安装最新的 WSL2 Linux内核升级包</li>
<li>设置wsl默认版本为wsl2</li>
<li>安装所需发行版</li>
</ul>
<h3 id="如何从主机访问WSL2？"><a href="#如何从主机访问WSL2？" class="headerlink" title="如何从主机访问WSL2？"></a>如何从主机访问WSL2？</h3><p>由于wsl2的ip地址是动态配置的，而自动端口映射功能也并不稳定，为了便捷地从win10访问wsl2，一种可靠的方案是动态获取wsl2的ip地址并在win10的hosts文件中为其设置域名。  </p>
<p><a href="https://github.com/shayne/go-wsl2-host.git">go-wsl2-host</a> 项目实现了这个功能，参照项目说明进行配置,使用时可能会遇到一些问题：  </p>
<ul>
<li>服务启动失败：检查用户名和密码，用户名基本就是个人文件夹的名字，密码为微软账户密码  </li>
<li>账号密码正确仍无法登录：<code>开始-&gt;Windows管理工具-&gt;本地安全策略-&gt;本地策略-&gt;用户权限分配-&gt;作为服务登录-&gt;添加用户或组</code>，把相应用户添加进去  </li>
<li>服务启动成功，但hosts文件却没变：可以使用 <code>wsl2host debug</code> 命令查看程序输出，如果程序提示无法写入hosts，检查hosts文件是否为只读，把只读属性取消即可。hosts路径为 <code>C:\Windows\System32\drivers\etc\hosts</code>  </li>
</ul>
<h3 id="自动启动WSL2，以及其中的一些服务"><a href="#自动启动WSL2，以及其中的一些服务" class="headerlink" title="自动启动WSL2，以及其中的一些服务"></a>自动启动WSL2，以及其中的一些服务</h3><p>WSL2不支持systemd，也就无法通过systemctl配置自启服务，可以在 <code>/etc/init.wsl</code> 中写入一些启动服务的命令，并在Windows中配置开机执行 <code>wsl -u root /etc/init.wsl</code>。可以利用Win10的 <code>任务计划程序</code> 配置执行上述命令。</p>
<p>我导出的任务计划程序配置（wsl2-init.xml）如下:<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-16&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Task</span> <span class="attr">version</span>=<span class="string">&quot;1.2&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://schemas.microsoft.com/windows/2004/02/mit/task&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RegistrationInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Date</span>&gt;</span>2021-07-01T20:23:06.8672886<span class="tag">&lt;/<span class="name">Date</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Author</span>&gt;</span>OMEN\lpyhe<span class="tag">&lt;/<span class="name">Author</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Description</span>&gt;</span>Windows开机时自动运行WSL2并且运行 /etc/init.wsl<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">URI</span>&gt;</span>\Custom\WSL-INIT<span class="tag">&lt;/<span class="name">URI</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">RegistrationInfo</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Triggers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">BootTrigger</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">Enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">BootTrigger</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Triggers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Principals</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Principal</span> <span class="attr">id</span>=<span class="string">&quot;Author&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">UserId</span>&gt;</span>S-1-5-21-226882884-566579671-1051654333-1001<span class="tag">&lt;/<span class="name">UserId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">LogonType</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">LogonType</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RunLevel</span>&gt;</span>LeastPrivilege<span class="tag">&lt;/<span class="name">RunLevel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Principal</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Principals</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">MultipleInstancesPolicy</span>&gt;</span>IgnoreNew<span class="tag">&lt;/<span class="name">MultipleInstancesPolicy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DisallowStartIfOnBatteries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">DisallowStartIfOnBatteries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StopIfGoingOnBatteries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">StopIfGoingOnBatteries</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">AllowHardTerminate</span>&gt;</span>true<span class="tag">&lt;/<span class="name">AllowHardTerminate</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">StartWhenAvailable</span>&gt;</span>false<span class="tag">&lt;/<span class="name">StartWhenAvailable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RunOnlyIfNetworkAvailable</span>&gt;</span>false<span class="tag">&lt;/<span class="name">RunOnlyIfNetworkAvailable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">IdleSettings</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">StopOnIdleEnd</span>&gt;</span>true<span class="tag">&lt;/<span class="name">StopOnIdleEnd</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RestartOnIdle</span>&gt;</span>false<span class="tag">&lt;/<span class="name">RestartOnIdle</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">IdleSettings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">AllowStartOnDemand</span>&gt;</span>true<span class="tag">&lt;/<span class="name">AllowStartOnDemand</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">Enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Hidden</span>&gt;</span>false<span class="tag">&lt;/<span class="name">Hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RunOnlyIfIdle</span>&gt;</span>false<span class="tag">&lt;/<span class="name">RunOnlyIfIdle</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">WakeToRun</span>&gt;</span>false<span class="tag">&lt;/<span class="name">WakeToRun</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ExecutionTimeLimit</span>&gt;</span>PT72H<span class="tag">&lt;/<span class="name">ExecutionTimeLimit</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Priority</span>&gt;</span>7<span class="tag">&lt;/<span class="name">Priority</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Settings</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Actions</span> <span class="attr">Context</span>=<span class="string">&quot;Author&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Exec</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Command</span>&gt;</span>wsl<span class="tag">&lt;/<span class="name">Command</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">Arguments</span>&gt;</span>-u root /etc/init.wsl<span class="tag">&lt;/<span class="name">Arguments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Exec</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">Actions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Task</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="Windows-Terminal-中-wsl自动进入"><a href="#Windows-Terminal-中-wsl自动进入" class="headerlink" title="Windows Terminal 中 wsl自动进入 ~"></a>Windows Terminal 中 wsl自动进入 <code>~</code></h3><p>在windows terminal中配置wsl的启动目录为 <code>//wsl$/Ubuntu-20.04/home/用户名/</code>，可能需要根据实际情况修改wsl名称和用户名。</p>
<h2 id="Win10-实用软件"><a href="#Win10-实用软件" class="headerlink" title="Win10 实用软件"></a>Win10 实用软件</h2><h3 id="WinSW-设置守护服务"><a href="#WinSW-设置守护服务" class="headerlink" title="WinSW: 设置守护服务"></a>WinSW: 设置守护服务</h3><p>Win10配置守护服务不像Debian、Arch的systemd那样方便，可以借助第三方程序实现，比如 <a href="https://github.com/winsw/winsw.git">WinSW</a>。</p>
<p>下面是一个将frpc配置为服务的配置示例：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- ID of the service. It should be unique across the Windows system--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Display name of the service --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Service description --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- Path to the executable, which should be started --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">executable</span>&gt;</span>C:\Programs\Frpc\frpc.exe<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>-c C:\Programs\Frpc\frpc.ini<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">onfailure</span> <span class="attr">action</span>=<span class="string">&quot;restart&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="AutohotKey-配置快捷键"><a href="#AutohotKey-配置快捷键" class="headerlink" title="AutohotKey: 配置快捷键"></a>AutohotKey: 配置快捷键</h3><p>可用于配置快捷键，下面的脚本将 <code>Ctrl + Alt + T</code> 配置为启动<code>Windows Terminal</code>的快捷键。将写好的ahk脚本放到 <code>C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code> 中即可开机自启。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">^!t::</span><br><span class="line">Run, wt.exe</span><br><span class="line">return</span><br></pre></td></tr></table></figure>
<h2 id="WSL2子系统环境配置"><a href="#WSL2子系统环境配置" class="headerlink" title="WSL2子系统环境配置"></a>WSL2子系统环境配置</h2><h3 id="使用python3作为默认python"><a href="#使用python3作为默认python" class="headerlink" title="使用python3作为默认python"></a>使用python3作为默认python</h3><p>推荐使用 <code>update-alternatives</code> 进行配置，这样便于管理。为python3添加alternatives的命令为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 30</span><br></pre></td></tr></table></figure>
<h3 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h3><p> 首先安装 <a href="https://github.com/junegunn/vim-plug.git">vim-plug</a>，然后准备好vim配置文件 <code>~/.config/nvim/init.vim</code>， 接下来启动 <code>vim</code> 等待各种插件安装完成，其中Coc插件需要高版本的node，官方源版本过低，参考下一条进行node的安装。</p>
<p> 我的Vim配置文件：</p>
 <figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&quot; setting</span></span><br><span class="line"><span class="comment">&quot; setting - basic</span></span><br><span class="line"><span class="keyword">set</span> nocompatible</span><br><span class="line"><span class="keyword">set</span> encoding=utf8</span><br><span class="line"><span class="keyword">set</span> showcmd</span><br><span class="line"><span class="keyword">set</span> hls</span><br><span class="line"><span class="keyword">set</span> relativenumber</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot; setting - tab &amp; indent</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> softtabstop=<span class="number">0</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> expandtab</span><br><span class="line"><span class="keyword">set</span> autoindent</span><br><span class="line"><span class="keyword">set</span> smartindent</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; keymap</span></span><br><span class="line"><span class="keyword">let</span> mapleader=<span class="string">&quot;,&quot;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span>t :NERDTreeToggle<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">w</span> :<span class="keyword">w</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span>q :q<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; nmap &lt;Leader&gt;, 10&lt;C-w&gt;&lt;</span></span><br><span class="line"><span class="comment">&quot; nmap &lt;Leader&gt;. 10&lt;C-w&gt;&gt;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span>- <span class="number">5</span><span class="symbol">&lt;C-w&gt;</span>-</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span>= <span class="number">5</span><span class="symbol">&lt;C-w&gt;</span>+</span><br><span class="line"><span class="comment">&quot; nmap &lt;Leader&gt;i :bn&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; nmap &lt;Leader&gt;o :bN&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;C-L&gt;</span> <span class="symbol">&lt;Del&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; tnoremap &lt;A-h&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;h</span></span><br><span class="line"><span class="comment">&quot; tnoremap &lt;A-j&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;j</span></span><br><span class="line"><span class="comment">&quot; tnoremap &lt;A-k&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;k</span></span><br><span class="line"><span class="comment">&quot; tnoremap &lt;A-l&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;l</span></span><br><span class="line"><span class="comment">&quot; inoremap &lt;A-h&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;h</span></span><br><span class="line"><span class="comment">&quot; inoremap &lt;A-j&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;j</span></span><br><span class="line"><span class="comment">&quot; inoremap &lt;A-k&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;k</span></span><br><span class="line"><span class="comment">&quot; inoremap &lt;A-l&gt; &lt;C-\&gt;&lt;C-N&gt;&lt;C-w&gt;l</span></span><br><span class="line"><span class="comment">&quot; nnoremap &lt;A-h&gt; &lt;C-w&gt;h</span></span><br><span class="line"><span class="comment">&quot; nnoremap &lt;A-j&gt; &lt;C-w&gt;j</span></span><br><span class="line"><span class="comment">&quot; nnoremap &lt;A-k&gt; &lt;C-w&gt;k</span></span><br><span class="line"><span class="comment">&quot; nnoremap &lt;A-l&gt; &lt;C-w&gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; use h,i,j,k move cursor in insert mode</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;A-h&gt;</span> <span class="symbol">&lt;C-o&gt;</span>h</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;A-j&gt;</span> <span class="symbol">&lt;C-o&gt;</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;A-k&gt;</span> <span class="symbol">&lt;C-o&gt;</span><span class="keyword">k</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;A-l&gt;</span> <span class="symbol">&lt;C-o&gt;</span><span class="keyword">l</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; use h,i,j,k switch window in normal mode</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;A-h&gt;</span> <span class="symbol">&lt;C-w&gt;</span>h</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;A-j&gt;</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">j</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;A-k&gt;</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">k</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;A-l&gt;</span> <span class="symbol">&lt;C-w&gt;</span><span class="keyword">l</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 在使用CTRL-U 和 CTRL-H时开启新的undo</span></span><br><span class="line"><span class="comment">&quot; 防止意外删除字符却不可undo</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;C-H&gt;</span> <span class="symbol">&lt;C-G&gt;</span><span class="keyword">u</span><span class="symbol">&lt;C-H&gt;</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;C-U&gt;</span> <span class="symbol">&lt;C-G&gt;</span><span class="keyword">u</span><span class="symbol">&lt;C-U&gt;</span></span><br><span class="line"></span><br><span class="line">tnoremap <span class="symbol">&lt;Esc&gt;</span> &lt;C-\&gt;<span class="symbol">&lt;C-N&gt;</span></span><br><span class="line"></span><br><span class="line">tnoremap <span class="symbol">&lt;A-n&gt;</span> &lt;C-\&gt;<span class="symbol">&lt;C-N&gt;</span>gt</span><br><span class="line">tnoremap <span class="symbol">&lt;A-p&gt;</span> &lt;C-\&gt;<span class="symbol">&lt;C-N&gt;</span>gT</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;A-n&gt;</span> &lt;C-\&gt;<span class="symbol">&lt;C-N&gt;</span>gt</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;A-p&gt;</span> &lt;C-\&gt;<span class="symbol">&lt;C-N&gt;</span>gT</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;A-n&gt;</span> gt </span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;A-p&gt;</span> gT</span><br><span class="line"></span><br><span class="line"><span class="keyword">augroup</span> terminal</span><br><span class="line">    autocmd!</span><br><span class="line">    <span class="keyword">autocmd</span> TermOpen * <span class="keyword">setlocal</span> nonumber</span><br><span class="line">    <span class="keyword">autocmd</span> TermOpen * <span class="keyword">setlocal</span> norelativenumber</span><br><span class="line">    <span class="keyword">autocmd</span> TermOpen * <span class="keyword">setlocal</span> signcolumn=<span class="keyword">no</span></span><br><span class="line"><span class="keyword">augroup</span> end</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; for cpp</span></span><br><span class="line"><span class="keyword">function!</span> <span class="title">CompileAndRun</span><span class="params">()</span> </span><br><span class="line">    <span class="keyword">write</span></span><br><span class="line">    <span class="keyword">execute</span> <span class="built_in">printf</span>(<span class="string">&quot;!g++ -std=c++11 -Wall %s -o %s &amp;&amp; %s&quot;</span>, <span class="built_in">expand</span>(<span class="string">&quot;%:p&quot;</span>), <span class="built_in">expand</span>(<span class="string">&quot;%:p:r&quot;</span>), <span class="built_in">expand</span>(<span class="string">&quot;%:p:r&quot;</span>))</span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"><span class="keyword">autocmd</span> <span class="keyword">filetype</span> cpp command! CompileAndRun <span class="keyword">call</span> CompileAndRun()</span><br><span class="line"><span class="keyword">autocmd</span> <span class="keyword">filetype</span> cpp <span class="keyword">nnoremap</span> <span class="symbol">&lt;Leader&gt;</span>r :CompileAndRun<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; vim-plug</span></span><br><span class="line"><span class="keyword">call</span> plug#begin(stdpath(<span class="string">&#x27;data&#x27;</span>) . <span class="string">&#x27;/plugged&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Make sure you are using single quotes</span></span><br><span class="line">Plug <span class="string">&#x27;neoclide/coc.nvim&#x27;</span>, &#123;<span class="string">&#x27;branch&#x27;</span>: <span class="string">&#x27;release&#x27;</span>&#125;</span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;Yggdroot/LeaderF&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;wakatime/vim-wakatime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; On-demand loading</span></span><br><span class="line">Plug <span class="string">&#x27;scrooloose/nerdtree&#x27;</span>, &#123; <span class="string">&#x27;on&#x27;</span>:  <span class="string">&#x27;NERDTreeToggle&#x27;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Always load the vim-devicons as th very last one</span></span><br><span class="line">Plug <span class="string">&#x27;ryanoasis/vim-devicons&#x27;</span></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_powerline_fonts</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_theme</span>=<span class="string">&#x27;bubblegum&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; &gt;&gt;&gt; FOR COC &gt;&gt;&gt;</span></span><br><span class="line"><span class="comment">&quot; TextEdit might fail if hidden is not set</span></span><br><span class="line"><span class="keyword">set</span> hidden</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Some servers have issue with backup files, see #649</span></span><br><span class="line"><span class="keyword">set</span> nobackup</span><br><span class="line"><span class="keyword">set</span> nowritebackup</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Give more space for display messages</span></span><br><span class="line"><span class="keyword">set</span> cmdheight=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable&quot;</span></span><br><span class="line"><span class="comment">&quot; delays and poor user experience</span></span><br><span class="line"><span class="keyword">set</span> updatetime=<span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Don&#x27;t pass messages to |ins-completion-menu|</span></span><br><span class="line"><span class="keyword">set</span> shortmess+=<span class="keyword">c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Always show the signcolumn, otherwise it would shift the text each time</span></span><br><span class="line"><span class="comment">&quot; diagnostics appear/become resolved.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&quot;patch-8.1.1564&quot;</span>)</span><br><span class="line">  <span class="comment">&quot; Recently vim can merge signcolumn and number column into one</span></span><br><span class="line">  <span class="keyword">set</span> signcolumn=<span class="keyword">number</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">set</span> signcolumn=yes</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Use tab for trigger completion with characters ahead and navigate.</span></span><br><span class="line"><span class="comment">&quot; <span class="doctag">NOTE:</span> Use command &#x27;:verbose imap &lt;tab&gt;&#x27; to make sure tab is not mapped by</span></span><br><span class="line"><span class="comment">&quot; other plugin before putting this into your config.</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;silent&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;TAB&gt;</span></span><br><span class="line">      \ <span class="built_in">pumvisible</span>() ? <span class="string">&quot;\&lt;C-n&gt;&quot;</span> :</span><br><span class="line">      \ <span class="symbol">&lt;SID&gt;</span>check_back_space() ? <span class="string">&quot;\&lt;TAB&gt;&quot;</span> :</span><br><span class="line">      \ coc#refresh()</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;expr&gt;</span><span class="symbol">&lt;S-TAB&gt;</span> <span class="built_in">pumvisible</span>() ? <span class="string">&quot;\&lt;C-p&gt;&quot;</span> : <span class="string">&quot;\&lt;C-h&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function!</span> <span class="title">s</span>:check_back_space<span class="params">()</span> abort</span><br><span class="line">  <span class="keyword">let</span> <span class="keyword">col</span> = <span class="keyword">col</span>(<span class="string">&#x27;.&#x27;</span>) - <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> !col || <span class="built_in">getline</span>(<span class="string">&#x27;.&#x27;</span>)[<span class="keyword">col</span> - <span class="number">1</span>]  =~# <span class="string">&#x27;\s&#x27;</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Use &lt;c-space&gt; to trigger completion.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;nvim&#x27;</span>)</span><br><span class="line">  <span class="keyword">inoremap</span> <span class="symbol">&lt;silent&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;c-space&gt;</span> coc#refresh()</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">inoremap</span> <span class="symbol">&lt;silent&gt;</span><span class="symbol">&lt;expr&gt;</span> &lt;<span class="keyword">c</span>-@&gt; coc#refresh()</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Use [g and ]g to navigate diagnostics</span></span><br><span class="line"><span class="comment">&quot; use :CocDiagnostics to get all diagnostics of current buffer in location list</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> [g <span class="symbol">&lt;Plug&gt;</span>(coc-diagnostic-<span class="keyword">prev</span>)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> ]g <span class="symbol">&lt;Plug&gt;</span>(coc-diagnostic-<span class="keyword">next</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; GoTo code navigation.</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> gd <span class="symbol">&lt;Plug&gt;</span>(coc-definition)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> gy <span class="symbol">&lt;Plug&gt;</span>(coc-<span class="built_in">type</span>-definition)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> gi <span class="symbol">&lt;Plug&gt;</span>(coc-implementation)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="keyword">gr</span> <span class="symbol">&lt;Plug&gt;</span>(coc-references)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Use K to show documentation in preview window.</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> K :<span class="keyword">call</span> <span class="symbol">&lt;SID&gt;</span>show_documentation()<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function!</span> <span class="title">s</span>:show_documentation<span class="params">()</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">index</span>([<span class="string">&#x27;vim&#x27;</span>,<span class="string">&#x27;help&#x27;</span>], &amp;<span class="keyword">filetype</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">execute</span> <span class="string">&#x27;h &#x27;</span>.<span class="built_in">expand</span>(<span class="string">&#x27;&lt;cword&gt;&#x27;</span>)</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">call</span> CocActionAsync(<span class="string">&#x27;doHover&#x27;</span>)</span><br><span class="line">  <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Highlight the symbol and its references when holding the cursor.</span></span><br><span class="line"><span class="keyword">autocmd</span> CursorHold * <span class="keyword">silent</span> <span class="keyword">call</span> CocActionAsync(<span class="string">&#x27;highlight&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Symbol renaming.</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>rn <span class="symbol">&lt;Plug&gt;</span>(coc-<span class="built_in">rename</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Formatting selected code.</span></span><br><span class="line"><span class="comment">&quot; xmap &lt;leader&gt;f  &lt;Plug&gt;(coc-format)</span></span><br><span class="line"><span class="comment">&quot; nmap &lt;leader&gt;f  &lt;Plug&gt;(coc-format)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">augroup</span> mygroup</span><br><span class="line">  autocmd!</span><br><span class="line">  <span class="comment">&quot; Setup formatexpr specified filetype(s).</span></span><br><span class="line">  <span class="keyword">autocmd</span> FileType typescript,json <span class="keyword">setl</span> formatexpr=CocAction(<span class="string">&#x27;formatSelected&#x27;</span>)</span><br><span class="line">  <span class="comment">&quot; Update signature help on jump placeholder.</span></span><br><span class="line">  <span class="keyword">autocmd</span> User CocJumpPlaceholder <span class="keyword">call</span> CocActionAsync(<span class="string">&#x27;showSignatureHelp&#x27;</span>)</span><br><span class="line"><span class="keyword">augroup</span> end</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Applying codeAction to the selected region.</span></span><br><span class="line"><span class="comment">&quot; Example: `&lt;leader&gt;aap` for current paragraph</span></span><br><span class="line"><span class="keyword">xmap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">a</span>  <span class="symbol">&lt;Plug&gt;</span>(coc-codeaction-selected)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">a</span>  <span class="symbol">&lt;Plug&gt;</span>(coc-codeaction-selected)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Remap keys for applying codeAction to the current buffer.</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>ac  <span class="symbol">&lt;Plug&gt;</span>(coc-codeaction)</span><br><span class="line"><span class="comment">&quot; Apply AutoFix to problem on the current line.</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>qf  <span class="symbol">&lt;Plug&gt;</span>(coc-<span class="keyword">fix</span>-current)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Map function and class text objects</span></span><br><span class="line"><span class="comment">&quot; <span class="doctag">NOTE:</span> Requires &#x27;textDocument.documentSymbol&#x27; support from the language server.</span></span><br><span class="line"><span class="keyword">xmap</span> <span class="keyword">if</span> <span class="symbol">&lt;Plug&gt;</span>(coc-funcobj-i)</span><br><span class="line"><span class="keyword">omap</span> <span class="keyword">if</span> <span class="symbol">&lt;Plug&gt;</span>(coc-funcobj-i)</span><br><span class="line"><span class="keyword">xmap</span> af <span class="symbol">&lt;Plug&gt;</span>(coc-funcobj-<span class="keyword">a</span>)</span><br><span class="line"><span class="keyword">omap</span> af <span class="symbol">&lt;Plug&gt;</span>(coc-funcobj-<span class="keyword">a</span>)</span><br><span class="line"><span class="keyword">xmap</span> ic <span class="symbol">&lt;Plug&gt;</span>(coc-classobj-i)</span><br><span class="line"><span class="keyword">omap</span> ic <span class="symbol">&lt;Plug&gt;</span>(coc-classobj-i)</span><br><span class="line"><span class="keyword">xmap</span> ac <span class="symbol">&lt;Plug&gt;</span>(coc-classobj-<span class="keyword">a</span>)</span><br><span class="line"><span class="keyword">omap</span> ac <span class="symbol">&lt;Plug&gt;</span>(coc-classobj-<span class="keyword">a</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Remap &lt;C-f&gt; and &lt;C-b&gt; for scroll float windows/popups.</span></span><br><span class="line"><span class="comment">&quot; Note coc#float#scroll works on neovim &gt;= 0.4.0 or vim &gt;= 8.2.0750</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;nowait&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;C-f&gt;</span> coc#float#has_scroll() ? coc#float#scroll(<span class="number">1</span>) : <span class="string">&quot;\&lt;C-f&gt;&quot;</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;nowait&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;C-b&gt;</span> coc#float#has_scroll() ? coc#float#scroll(<span class="number">0</span>) : <span class="string">&quot;\&lt;C-b&gt;&quot;</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;nowait&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;C-f&gt;</span> coc#float#has_scroll() ? <span class="string">&quot;\&lt;c-r&gt;=coc#float#scroll(1)\&lt;cr&gt;&quot;</span> : <span class="string">&quot;\&lt;Right&gt;&quot;</span></span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;nowait&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;C-b&gt;</span> coc#float#has_scroll() ? <span class="string">&quot;\&lt;c-r&gt;=coc#float#scroll(0)\&lt;cr&gt;&quot;</span> : <span class="string">&quot;\&lt;Left&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; NeoVim-only mapping for visual mode scroll</span></span><br><span class="line"><span class="comment">&quot; Useful on signatureHelp after jump placeholder of snippet expansion</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;nvim&#x27;</span>)</span><br><span class="line">  <span class="keyword">vnoremap</span> <span class="symbol">&lt;nowait&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;C-f&gt;</span> coc#float#has_scroll() ? coc#float#nvim_scroll(<span class="number">1</span>, <span class="number">1</span>) : <span class="string">&quot;\&lt;C-f&gt;&quot;</span></span><br><span class="line">  <span class="keyword">vnoremap</span> <span class="symbol">&lt;nowait&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;C-b&gt;</span> coc#float#has_scroll() ? coc#float#nvim_scroll(<span class="number">0</span>, <span class="number">1</span>) : <span class="string">&quot;\&lt;C-b&gt;&quot;</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Use CTRL-S for selections ranges.</span></span><br><span class="line"><span class="comment">&quot; Requires &#x27;textDocument/selectionRange&#x27; support of language server.</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;C-s&gt;</span> <span class="symbol">&lt;Plug&gt;</span>(coc-<span class="built_in">range</span>-select)</span><br><span class="line"><span class="keyword">xmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;C-s&gt;</span> <span class="symbol">&lt;Plug&gt;</span>(coc-<span class="built_in">range</span>-select)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Add `:Format` command to format current buffer.</span></span><br><span class="line">command! -nargs=<span class="number">0</span> Format :<span class="keyword">call</span> CocAction(<span class="string">&#x27;format&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Add `:Fold` command to fold current buffer.</span></span><br><span class="line">command! -nargs=? Fold :<span class="keyword">call</span> CocAction(<span class="string">&#x27;fold&#x27;</span>, <span class="symbol">&lt;f-args&gt;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Add `:OR` command for organize imports of the current buffer.</span></span><br><span class="line">command! -nargs=<span class="number">0</span> OR :<span class="keyword">call</span> CocAction(<span class="string">&#x27;runCommand&#x27;</span>, <span class="string">&#x27;editor.action.organizeImport&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; &gt;&gt;&gt; config for coc &gt;&gt;&gt;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:coc_global_extensions</span> = [<span class="string">&#x27;coc-tsserver&#x27;</span>, <span class="string">&#x27;coc-html&#x27;</span>, <span class="string">&#x27;coc-css&#x27;</span>, <span class="string">&#x27;coc-json&#x27;</span>,</span><br><span class="line">	\ <span class="string">&#x27;coc-python&#x27;</span>, <span class="string">&#x27;coc-xml&#x27;</span>, <span class="string">&#x27;coc-yaml&#x27;</span>, <span class="string">&#x27;coc-markdownlint&#x27;</span>, <span class="string">&#x27;coc-highlight&#x27;</span>,</span><br><span class="line">    \ <span class="string">&#x27;coc-clangd&#x27;</span>, <span class="string">&#x27;coc-pairs&#x27;</span>, <span class="string">&#x27;coc-git&#x27;</span>, <span class="string">&#x27;coc-go&#x27;</span>, <span class="string">&#x27;coc-rust-analyzer&#x27;</span>]</span><br><span class="line"><span class="keyword">inoremap</span> <span class="symbol">&lt;silent&gt;</span><span class="symbol">&lt;expr&gt;</span> <span class="symbol">&lt;cr&gt;</span> <span class="built_in">pumvisible</span>() ? coc#_select_confirm() : <span class="string">&quot;\&lt;C-g&gt;u\&lt;CR&gt;&quot;</span></span><br><span class="line"><span class="comment">&quot; &lt;&lt;&lt; config for coc &lt;&lt;&lt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="node安装"><a href="#node安装" class="headerlink" title="node安装"></a>node安装</h3><p>官方源中版本过低，很多软件都要求更高版本的node，建议使用<a href="https://github.com/nodesource/distributions.git">nodesource</a>维护的软件源安装，具体参考<a href="https://github.com/nodesource/distributions.git">项目主页</a>。写此文时，安装长期维护版node的具体命令为：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
  </entry>
  <entry>
    <title>VMWare-UbuntuServer2004网络配置记录</title>
    <url>/2021/07/24/VMWare-UbuntuServer2004%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="达成的目标"><a href="#达成的目标" class="headerlink" title="达成的目标"></a>达成的目标</h2><p>在Ubuntu Server 20.04 虚拟机当中添加了两块虚拟网卡。一块VMWare虚拟网卡以桥接模式使用电脑的网线接口直接与树莓派通信，可拥有独立于物理网卡的Mac地址和IP地址，同时在树莓派上测试了Macvlan虚拟网卡，Macvlan虚拟网卡有多种工作模式，其中桥接模式可使虚拟网络接口借助物理接口与外界直接通信。另一块VMWare虚拟网卡配置为NAT模式，借助主机网络访问互联网。</p>
<h2 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h2><h3 id="桥接网络配置"><a href="#桥接网络配置" class="headerlink" title="桥接网络配置"></a>桥接网络配置</h3><p>VMWare默认的桥接网络会自动选择用于桥接的实体网卡，如果需要指定通过网线接口而非无线网卡桥接，就需要专门进行配置。在虚拟网络编辑器当中为默认桥接网络指定网卡即可。<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210725011524.png" alt=""></p>
<h3 id="NAT网络配置"><a href="#NAT网络配置" class="headerlink" title="NAT网络配置"></a>NAT网络配置</h3><p>NAT网卡无需特别配置，默认的配置已经开启了DHCP，但是需要注意的是网关可能不是 <code>192.168.227.1</code>（以我的IP为例说明） ，我原本在虚拟机中配置了静态地址，结果无法访问互联网，也无法ping通 <code>192.168.227.1</code>，后来改成了 DHCP 模式，发现虚拟机自动配置的网关是 <code>192.168.227.2</code>，而Windows中可以看到 <code>VMware Virtual Ethernet Adapter for VMnet8</code> 的IP是 <code>192.168.227.1</code>，值得关注的还有 <code>IPv4 WINS 服务器: 192.168.227.2</code>，通过查看虚拟机上自动经DHCP配置好的信息，发现虚拟机的网关和DNS服务器恰好都是 <code>192.168.227.2</code>，因此如果想要配置静态IP，需要注意网关和DNS服务器的配置。我所采用的方法是在开启DHCP Client的同时再额外配置一个自定义的IP地址，这样既可以在局域网通过自定义IP地址访问虚拟机，也可以使虚拟机自动配置网关和DNS服务器。</p>
<p>虚拟机ping不通主机是因为Windows防护墙，关掉就能ping通了，不过即使能ping通，也无法将 <code>192.168.227.1</code> 配置为网关来访问互联网，原因上面说了。</p>
<h4 id="VMware-Virtual-Ethernet-Adapter-for-VMnet8-网络属性"><a href="#VMware-Virtual-Ethernet-Adapter-for-VMnet8-网络属性" class="headerlink" title="VMware Virtual Ethernet Adapter for VMnet8 网络属性"></a>VMware Virtual Ethernet Adapter for VMnet8 网络属性</h4><p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210725012623.png" alt=""></p>
<h4 id="虚拟机当中由DHCP-Client配置的-DNS-以及网关"><a href="#虚拟机当中由DHCP-Client配置的-DNS-以及网关" class="headerlink" title="虚拟机当中由DHCP Client配置的 DNS 以及网关"></a>虚拟机当中由DHCP Client配置的 DNS 以及网关</h4><p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210725014830.png" alt=""></p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210725014854.png" alt=""></p>
<h4 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h4><p>后来发现VMWare网络编辑器里面是能看到网关信息的，确实是 <code>192.168.227.2</code>，如果想要手动配置，就按这个信息配置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210725124934.png" alt=""></p>
<h2 id="虚拟机配置"><a href="#虚拟机配置" class="headerlink" title="虚拟机配置"></a>虚拟机配置</h2><h3 id="Ubuntu-Server-20-04-的网络配置方法"><a href="#Ubuntu-Server-20-04-的网络配置方法" class="headerlink" title="Ubuntu Server 20.04 的网络配置方法"></a>Ubuntu Server 20.04 的网络配置方法</h3><p>Ubuntu Server 20.04 使用 <code>netplan</code> 进行网络管理（总是旧的还不熟悉就换了，，）,还默认启用 <code>systemd-resolve</code> 进行域名解析，所以网络配置文件不再是 <code>/etc/network/interfaces</code>，DNS配置文件也不再是 <code>/etc/resolv.conf</code>。</p>
<p>网络配置文件是 <code>/etc/netplan/*</code>，我就直接修改了安装时生成的文件 <code>/etc/netplan/00-installer-config.yaml</code>，修改完毕之后需要执行 <code>sudo netplan try</code> 命令检测配置并按Enter应用配置。</p>
<p>DNS配置文件我没有仔细查，看<code>systemd-resolve</code>文档即可，不过<code>/etc/resolv.conf</code>的开头是这样的，最好不要乱改。顺便说一下，查看DNS服务器的命令是 <code>resolvectl status</code>。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># This file is managed by man:systemd-resolved(8). Do not edit.</span><br></pre></td></tr></table></figure></p>
<h3 id="我的配置文件"><a href="#我的配置文件" class="headerlink" title="我的配置文件"></a>我的配置文件</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:</span><br><span class="line">      addresses: [192.168.10.11/24]</span><br><span class="line">      #gateway4: 192.168.10.1</span><br><span class="line">      #nameservers:</span><br><span class="line">      #  addresses: [192.168.10.1]</span><br><span class="line">      dhcp4: no</span><br><span class="line">    ens38:</span><br><span class="line">      addresses: [192.168.227.5/24]</span><br><span class="line">      dhcp4: yes</span><br><span class="line">  version: 2</span><br></pre></td></tr></table></figure>
<ul>
<li>其中 <code>ens33</code> 是桥接网卡，配置文件中仅为其配置了静态IP地址，并关闭了dhcpv4，其余的网关、DNS等配置被注释掉是因为如果保留的话，<code>netplan</code> 将为根据设定的网关添加默认路由，而且该默认路由的优先级比 <code>ens38</code> 的默认路由要高，导致各种外网请求走没有互联网连接的 <code>ens33</code>。这里只为 <code>ens33</code> 配置IP，不配置网关，就可以避免 <code>netplan</code> 添加相应的默认路由。</li>
<li><code>ens38</code> 本来采取的是纯静态配置，结果无法访问互联网，原因在上面讨论了，这里采用了较为稳妥的 <code>DHCP + 静态IP</code> 的方法，既能通过固定IP便捷访问，又能借助DHCP自动配置网关和DNS。</li>
</ul>
<h2 id="树莓派配置MacVLAN虚拟接口"><a href="#树莓派配置MacVLAN虚拟接口" class="headerlink" title="树莓派配置MacVLAN虚拟接口"></a>树莓派配置MacVLAN虚拟接口</h2><p>之前使用路由器多拨时接触过MacVLAN，感觉十分神奇，居然可以通过一个实体网络接口拓展出众多虚拟接口，并且每个都可以拥有自己的Mac地址和IP，而多拨原理就是每个虚拟接口都拨号，然后带宽叠加。</p>
<p>最近了解到相关虚拟技术是由Linux内核提供支持的，从最初的TUN/TAP，发展到后来的MacVLAN和MacVTap，原本我是打算创建一个MacVTap虚拟接口的，结果好像报错说不支持该类型，就用了MacVLAN，并顺利为虚拟接口配置了IP，经测试可以连通。</p>
<p>配置工具就是一系列 ip 命令，在此不再赘述。下图当中的 <code>macvlan0@eth0</code> 即为基于 <code>eth0</code> 的虚拟网络接口，需要注意的一点是，在使用 ip 命令配置的过程中，使用 <code>macvlan0</code> 引用虚拟网卡，不需要带也不能带 <code>@eth0</code></p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210725023126.png" alt=""></p>
<h2 id="为什么网络接口、交换机可以虚拟化？"><a href="#为什么网络接口、交换机可以虚拟化？" class="headerlink" title="为什么网络接口、交换机可以虚拟化？"></a>为什么网络接口、交换机可以虚拟化？</h2><p>以前没有仔细考虑过这件事情，感觉很神奇，在这里简单地说一下现在的想法。</p>
<p>先来回顾一下交换机工作原理：</p>
<blockquote>
<p>交换机工作于OSI参考模型中的第二层（数据链路层），交换机的工作依赖于对MAC地址的识别（所有的网络设备都有一个唯一的MAC地址，通常是由厂商直接烧录进网卡中）。<br>当交换机从其某个端口收到一个数据包时，先读取包头中的源MAC地址（即发送该数据包的设备网卡的MAC地址），将该MAC地址和端口对应起来添加到交换机内存里的地址表中；然后再读取包头中的目的MAC地址，对照内存里的地址表看该MAC地址与哪个端口对应，如果地址表中有该MAC地址的对应端口，则将该数据包直接复制到对应的端口上，如果没有找到，则将该数据帧作为一个广播帧发送到所有的端口，对应的MAC地址设备会自动接受该帧数据，同时，交换机将接受该帧数据的端口与这个目的MAC地址对应起来放入内存中的地址表中。</p>
</blockquote>
<p>简单地说交换机的作用就是转发MAC帧，物理交换机可以用于在一些物理接口之间转发MAC帧。</p>
<p>那么网络接口如何实现虚拟化呢？在没有虚拟接口的情况下，一个网卡对应一个MAC地址，交换机按照转发表，把对应的MAC帧发送到特定的物理端口。只要在此基础上，允许一个物理网卡对应多个MAC地址，那么每个MAC地址都可以配置一个虚拟接口，物理网卡所属机器在拿到MAC帧之后，再根据具体内容分发到虚拟接口即可。而一个物理网卡对应多个MAC地址其实只要允许交换机转发表中一个接口对应多个表项即可。</p>
<p>上面说的是数据链路层的虚拟化，只要实现了数据链路层的虚拟化，那么每个虚拟接口都可以独立地实现局域网通信了，它们是物理端口还是虚拟端口对于上层协议栈来说其实是透明的。</p>
<p>如果接口是用软件虚拟的，那么自然地，就可以同样利用软件在这些虚拟接口间转发MAC帧，这些软件就相当于虚拟交换机了？</p>
<h2 id="参考资料-amp-相关链接"><a href="#参考资料-amp-相关链接" class="headerlink" title="参考资料&amp;相关链接"></a>参考资料&amp;相关链接</h2><p><a href="https://suhu0426.github.io/Web/Presentation/20150120/index.html">Virtual networking: TUN/TAP, MacVLAN, and MacVTap</a><br><a href="http://kms2.h3c.com/View.aspx?id=40366">虚拟交换机（vSwitch）原理及配置</a><br><a href="https://www.openvswitch.org/">Open vSwitch</a><br><a href="https://virt.kernelnewbies.org/MacVTap">MacVTap - Linux Virtualization Wiki</a><br><a href="https://sreeninet.wordpress.com/2016/05/29/macvlan-and-ipvlan/">Macvlan and IPvlan basics</a>  </p>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10禁用Ctrl+Space中英文切换快捷键</title>
    <url>/2021/07/29/Win10%E7%A6%81%E7%94%A8Ctrl+Space%E4%B8%AD%E8%8B%B1%E6%96%87%E5%88%87%E6%8D%A2%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>十几年的老BUG了，Win7时代的修改注册表的方法也失效了。<br>Win7时代的方案在这里：<a href="https://superuser.com/questions/327479/ctrl-space-always-toggles-chinese-ime-windows-7">CTRL-Space always toggles Chinese IME (Windows 7)</a>  </p>
<p>需要注意的是：</p>
<ul>
<li><code>HKEY_CURRENT_USER/Control Panel/Input Method/Hot Keys</code> 保存的是当前用户的快捷键配置</li>
<li><code>HKEY_USERS\.DEFAULT\Control Panel\Input Method\Hot Keys</code> 保存的是系统默认的快捷键配置</li>
</ul>
<p>当年的方案修改的是用户快捷键配置，现已失效，现在需要修改系统默认的快捷键配置。</p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol>
<li>打开注册表编辑器  </li>
<li>打开 <code>HKEY_USERS\.DEFAULT\Control Panel\Input Method\Hot Keys</code>  </li>
<li>需要修改两项，<code>00000070</code> 是繁体中文快捷键配置，<code>00000010</code> 是简体中文快捷键配置   </li>
<li>分别打开上面所说的两项，修改下面两项数据<ul>
<li><code>Key Modifiers</code> 代表 Alt/Ctrl/Shift等修饰键，默认配置是 <code>Ctrl (02c00000)</code>，把它的第一个字节由 <code>02</code> 改为 <code>00</code>  </li>
<li><code>Virtual Key</code> 代表与修饰键配合使用的辅助键，默认配置为 <code>Space (20000000)</code>，把它的第一个字节由 <code>20</code> 改为 <code>FF</code>  </li>
</ul>
</li>
<li>然后重启系统即可，也许注销再登录就行  </li>
<li>我是只改系统默认配置然后重启，<code>Ctrl+Space</code>就无效了，如果只改系统默认配置无效的话，可以再把用户配置也按相同方法改掉，再不行的话就等微软修复BUG吧~~~   </li>
</ol>
]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
  </entry>
  <entry>
    <title>Linux虚拟网络设备-birdge</title>
    <url>/2021/07/30/Linux%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87-bridge/</url>
    <content><![CDATA[<h2 id="网络桥接"><a href="#网络桥接" class="headerlink" title="网络桥接"></a>网络桥接</h2><p>网桥是一种网络设备，它能够从多个通信网络创建一个单一的聚合网络，此功能被称为网络桥接。网络桥接不同于路由，路由允许多个独立网络互相通信，但各个网络仍然保持独立，而桥接是将多个独立网络连接成一个单一网络。</p>
<p>网桥工作于OSI模型的数据链路层，它基于以太网地址（而不是IP地址）转发数据包。交换机是一种常见的网络桥接设备，家用路由器内部一般也带有集成交换机。</p>
<h2 id="Linux-bridge"><a href="#Linux-bridge" class="headerlink" title="Linux bridge"></a>Linux bridge</h2><p>Linux bridge实现了<strong>802.1d</strong>标准的一个子集，Linux网桥比纯粹的硬件网桥更加强大，它不仅可以转发数据包，还可以进行过滤和流量调整等功能。</p>
<p>下面介绍一下Linux bridge的配置工具，然后利用树莓派上进行一个简单的桥接实验。</p>
<h2 id="ip-和-bridge"><a href="#ip-和-bridge" class="headerlink" title="ip 和 bridge"></a>ip 和 bridge</h2><p>iproute2程序包包含的 <code>ip</code> 和 <code>bridge</code> 命令可用于管理网桥。</p>
<h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><h4 id="ip命令"><a href="#ip命令" class="headerlink" title="ip命令"></a>ip命令</h4><ul>
<li><p>创建bridge设备 <code>br0</code></p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip link add name br0 type bridge</span><br></pre></td></tr></table></figure>
</li>
<li><p>将interface <code>eth0</code>添加到bridge <code>br0</code></p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip link set eth0 master br0</span><br></pre></td></tr></table></figure>
<p>  上面是以物理网卡 <code>eth0</code> 为例，但网桥中的设备不仅限于物理设备，<code>tun/tap/veth/vlan/macvlan/macvtap/ipvlan/ipvtap</code> 等各种虚拟设备均可添加到 bridge。  </p>
<p>  <code>eth0</code> 原本一端连接着外界物理网络，另一端连接着网络协议栈。一旦它接入了 <code>br0</code>，由外部传入 <code>eth0</code> 的数据包将被直接传递到 <code>br0</code>，而不再是网络协议栈。这样一来，为 <code>eth0</code> 配置IP就失去了意义，因为 <code>eth0</code> 另一端连接的只是一个虚拟网桥 <code>br0</code>，这是一个2层设备，它工作于数据链路层，仅基于MAC地址进行数据包转发，形象地说，也就是 <code>eth0</code> 现在只是相当于 <code>br0</code> 的一个 Port，把 <code>br0</code> 比作以太交换机，那么 <code>eth0</code> 就是 <code>br0</code> 的一个网口。</p>
<p>  原本的网络结构：<br>  <code>eth0</code> 连接着网络协议栈与外界网络</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-------------------------------------------------+</span><br><span class="line">|                                                 |</span><br><span class="line">|   +----------------------------------------+    |</span><br><span class="line">|   |         Network Protocol Stack         |    |</span><br><span class="line">|   +----------------------------------------+    |</span><br><span class="line">|            ↑                     ↑              |</span><br><span class="line">|............|.....................|..............|</span><br><span class="line">|            |                     |              |</span><br><span class="line">|            ↓                     ↓              |</span><br><span class="line">|     +--------------+         +--------+         |</span><br><span class="line">|     | 192.168.2.10 |         |        |         |</span><br><span class="line">|     +--------------+         |   br0  |         |</span><br><span class="line">|     |     eth0     |         |        |         |</span><br><span class="line">|     +--------------+         +--------+         |</span><br><span class="line">|            ↑                                    |</span><br><span class="line">|            |                                    |</span><br><span class="line">+------------|------------------------------------+</span><br><span class="line">             ↓                                     </span><br><span class="line">     Physical Network                              </span><br></pre></td></tr></table></figure>
<p>  之后的网络结构：<br>  <code>eth0</code> 收到的外界数据包不再发给网络协议栈，而是虚拟2层设备 <code>br0</code></p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-------------------------------------------------+</span><br><span class="line">|                                                 |</span><br><span class="line">|   +----------------------------------------+    |</span><br><span class="line">|   |         Network Protocol Stack         |    |</span><br><span class="line">|   +----------------------------------------+    |</span><br><span class="line">|            |                     ↑              |</span><br><span class="line">|............|.....................|..............|</span><br><span class="line">|            |                     |              |</span><br><span class="line">|            ↓                     ↓              |</span><br><span class="line">|     +--------------+         +---------+        |</span><br><span class="line">|     | 192.168.2.10 |         |         |        |</span><br><span class="line">|     +--------------+         |   br0   |        |</span><br><span class="line">|     |     eth0     |&lt;-------&gt;|         |        |</span><br><span class="line">|     +--------------+         +---------+        |</span><br><span class="line">|            ↑                                    |</span><br><span class="line">|            |                                    |</span><br><span class="line">+------------|------------------------------------+</span><br><span class="line">             ↓                                     </span><br><span class="line">     Physical Network                              </span><br></pre></td></tr></table></figure>
</li>
<li><p>开启bridge br0</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set link br0 up</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="bridge命令"><a href="#bridge命令" class="headerlink" title="bridge命令"></a>bridge命令</h4><ul>
<li><code>bridge link</code>：展示桥接到网桥的interface（相当于交换机的网口）  </li>
<li><code>bridge fdb</code>：展示网桥的转发表</li>
<li><code>bridge vlan</code>：展示网桥的VLAN配置信息</li>
</ul>
<p>由上面的分析，可以得知Linux虚拟网桥设备 <code>bridge</code> 可以将多个 interface 连接为一个网络，并且虚拟网桥设备有自己的MAC转发表，也可以在虚拟网桥中配置VLAN。  </p>
<h2 id="利用树莓派验证brdige的二层交换功能"><a href="#利用树莓派验证brdige的二层交换功能" class="headerlink" title="利用树莓派验证brdige的二层交换功能"></a>利用树莓派验证brdige的二层交换功能</h2><h3 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h3><ul>
<li>树莓派3b+：包含一个以太网卡 <code>eth0</code>，一个无线网卡 <code>wlan0</code>  </li>
<li>PC：有一个以太网口</li>
<li>手机：可以连接WiFI</li>
</ul>
<h3 id="实验思路"><a href="#实验思路" class="headerlink" title="实验思路"></a>实验思路</h3><ul>
<li>在树莓派上创建一个 bridge，称为 <code>br0</code>  </li>
<li>PC通过网线接入 <code>eth0</code>，WiFi设备接入基于 <code>wlan0</code> 构建的无线局域网  </li>
<li>将 <code>eth0</code> 和 <code>wlan0</code> 添加到 <code>br0</code>，利用<code>br0</code> 将无线局域网和PC桥接在一起  </li>
</ul>
<p>这样一来，网络结构如下图所示（略去了Network Protocol Stack -&gt; eth0 的单向连接）：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">            +-------------------------------------------------+</span><br><span class="line">            |   +----------------------------------------+    |</span><br><span class="line">            |   |         Network Protocol Stack         |    |</span><br><span class="line">            |   +----------------------------------------+    |</span><br><span class="line">            |                        ↑                        |</span><br><span class="line">            |........................|........................|</span><br><span class="line">            |                        ↓                        |</span><br><span class="line">            |       +----------------------------------+      |</span><br><span class="line">            |       |               br0                |      |</span><br><span class="line">            |       +----------------------------------+      |</span><br><span class="line">            |            ↑                       ↑            |</span><br><span class="line">            |            |                       |            |</span><br><span class="line">            |            ↓                       ↓            |</span><br><span class="line">            |     +--------------+       +--------------+     |</span><br><span class="line">            |     |     eth0     |       |     wlan0    |&lt;---------&gt; WiFi_Device</span><br><span class="line">            |     +--------------+       +--------------+     |</span><br><span class="line">            |            ↑                  ↑        ↑        |</span><br><span class="line">            +------------|------------------|--------|--------+</span><br><span class="line">                         ↓                  ↓        ↓         </span><br><span class="line">                        PC            WiFi_Device  WiFi_Device  </span><br><span class="line">```                                    </span><br><span class="line"></span><br><span class="line">根据其原理，只要合理地配置PC和无线设备的IP地址，它们理应可以借助虚拟网桥 `br0` 互相访问。</span><br><span class="line"></span><br><span class="line">### 关键步骤</span><br><span class="line"></span><br><span class="line">#### 树莓派配置AP</span><br><span class="line"></span><br><span class="line">借助 `hostapd` 实现，大致步骤为：  </span><br><span class="line"></span><br><span class="line">1. 安装 `hostapd`  </span><br><span class="line">    ```shell</span><br><span class="line">    sudo apt install hostapd</span><br></pre></td></tr></table></figure></p>
<ol>
<li>配置 <code>hostapd</code>，创建 <code>/etc/hostapd/hostapd.conf</code>   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">interface=wlan0</span><br><span class="line">bridge=br0</span><br><span class="line">hw_mode=g</span><br><span class="line">channel=7</span><br><span class="line">wmm_enabled=0</span><br><span class="line">macaddr_acl=0</span><br><span class="line">auth_algs=1</span><br><span class="line">ignore_broadcast_ssid=0</span><br><span class="line">wpa=2</span><br><span class="line">wpa_key_mgmt=WPA-PSK</span><br><span class="line">wpa_pairwise=TKIP</span><br><span class="line">rsn_pairwise=CCMP</span><br><span class="line">ssid=RaspberryPi</span><br><span class="line">wpa_passphrase=password</span><br></pre></td></tr></table></figure></li>
<li>关闭 <code>dhcpcd</code>，启用 <code>hostapd</code> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo disable dhcpcd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">References: /usr/share/doc/hostapd/README.Debian</span></span><br><span class="line">sudo systemctl unmask hostapd</span><br><span class="line">sudo systemctl enable hostapd</span><br></pre></td></tr></table></figure></li>
<li>连接热点 <code>RaspberryPi</code><br> 配置好之后重启树莓派应该就能看到热点 <code>RaspberryPi</code> 了，由于树莓派没有开启dhcpd，WiFI设备需要配置使用Static IP，比如 <code>192.168.31.100/24</code>  </li>
</ol>
<h4 id="桥接"><a href="#桥接" class="headerlink" title="桥接"></a>桥接</h4><ol>
<li>创建虚拟网桥 <code>br0</code>   <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ip link add name br0 type bridge</span><br></pre></td></tr></table></figure></li>
<li>添加设备 <code>eth0</code>，<code>wlan0</code> 至 <code>br0</code>   <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ip link set dev eth0 master br0</span><br><span class="line">sudo ip link set dev wlan0 master br0</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h4><p>由于树莓派没有开启dhcpd，需要为各个连接到WiFI的设备配置静态IP，当然经网线连接的PC也需要配置，各个设备的IP需要处于同一网段才能互相访问，比如 <code>192.168.31.0/24</code>  </p>
<h3 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h3><ol>
<li><p>PC和无线设备都配置好了却无法互相连接<br> 关掉Windows防火墙再试试，稍等一会儿再试试<br> 在<a href="https://wiki.linuxfoundation.org/networking/bridge">Networking: bridge - Linux Foundation DokuWiki</a>中有这样一句话：</p>
<blockquote>
<p>The bridge will take a short amount of time when a device is added to learn the Ethernet addresses on the segment before starting to forward.</p>
</blockquote>
</li>
<li><p>暂时没有2</p>
</li>
</ol>
<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><p>PC ping通了连接WiFI的手机，成功借助虚拟网桥连通了<code>eth0</code>和<code>wlan0</code>无线局域网。</p>
<h3 id="树莓派配置信息"><a href="#树莓派配置信息" class="headerlink" title="树莓派配置信息"></a>树莓派配置信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Script started on 2021-07-30 20:07:21+08:00 [TERM=&quot;linux&quot; TTY=&quot;/dev/tty1&quot; COLUMNS=&quot;240&quot; LINES=&quot;67&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pi@rasp:~/projects/bridge $ ip -d addr</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 promiscuity 0 minmtu 0 maxmtu 0 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:98:76:96 brd ff:ff:ff:ff:ff:ff promiscuity 1 minmtu 68 maxmtu 9000</span><br><span class="line">    bridge_slave state forwarding priority 32 cost 4 hairpin off guard off root_block off fastleave off learning on flood on port_id 0x8002 port_no 0x2 designated_port 32770 designated_cost 0 designated_bridge 8000.b8:27:eb:98:76:96 designated_root 8000.b8:27:eb:98:76:96 hold_timer    0.00 message_age_timer    0.00 forward_delay_timer    0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on neigh_suppress off group_fwd_mask 0 group_fwd_mask_str 0x0 vlan_tunnel off isolated off numtxqueues 1 numrxqueues 1 gso_max_size 8824 gso_max_segs 65535</span><br><span class="line">3: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master br0 state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:cd:23:c3 brd ff:ff:ff:ff:ff:ff promiscuity 1 minmtu 68 maxmtu 1500</span><br><span class="line">    bridge_slave state forwarding priority 32 cost 100 hairpin off guard off root_block off fastleave off learning on flood on port_id 0x8001 port_no 0x1 designated_port 32769 designated_cost 0 designated_bridge 8000.b8:27:eb:98:76:96 designated_root 8000.b8:27:eb:98:76:96 hold_timer    0.00 message_age_timer    0.00 forward_delay_timer    0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on neigh_suppress off group_fwd_mask 0 group_fwd_mask_str 0x0 vlan_tunnel off isolated off numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">5: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:98:76:96 brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 68 maxmtu 65535</span><br><span class="line">    bridge forward_delay 1500 hello_time 200 max_age 2000 ageing_time 30000 stp_state 0 priority 32768 vlan_filtering 0 bridge_id 8000.b8:27:eb:98:76:96 designated_root 8000.b8:27:eb:98:76:96 root_port 0 root_path_cost 0 topology_change 0 topology_change_detected 0 hello_timer    0.00 tcn_timer    0.00 topology_change_timer    0.00 gc_timer  220.78 group_fwd_mask 0 group_address 01:80:c2:00:00:00 mcast_snooping 1 mcast_router 1 mcast_query_use_ifaddr 0 mcast_querier 0 mcast_hash_elasticity 16 mcast_hash_max 4096 mcast_last_member_count 2 mcast_startup_query_count 2 mcast_last_member_interval 100 mcast_membership_interval 26000 mcast_querier_interval 25500 mcast_query_interval 12500 mcast_query_response_interval 1000 mcast_startup_query_interval 3125 mcast_stats_enabled 0 mcast_igmp_version 2 mcast_mld_version 1 nf_call_iptables 0 nf_call_ip6tables 0 nf_call_arptables 0 numtxqueues 1 numrxqueues 1 gso_max_size 8824 gso_max_segs 65535</span><br><span class="line">    inet6 fe80::ba27:ebff:fecd:23c3/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pi@rasp:~/projects/bridge $ bridge -d link</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 master br0 state forwarding priority 32 cost 4</span><br><span class="line">    hairpin off guard off root_block off fastleave off learning on flood on mcast_flood on neigh_suppress off vlan_tunnel off isolated off</span><br><span class="line">3: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 master br0 state forwarding priority 32 cost 100</span><br><span class="line">    hairpin off guard off root_block off fastleave off learning on flood on mcast_flood on neigh_suppress off vlan_tunnel off isolated off</span><br><span class="line">5: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 master br0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pi@rasp:~/projects/bridge $ bridge fdb</span><br><span class="line">f4:30:b9:ad:56:eb dev eth0 master br0</span><br><span class="line">b8:27:eb:98:76:96 dev eth0 master br0 permanent</span><br><span class="line">01:00:5e:00:00:01 dev eth0 self permanent</span><br><span class="line">33:33:00:00:00:01 dev eth0 self permanent</span><br><span class="line">e0:cc:f8:ce:27:a9 dev wlan0 master br0</span><br><span class="line">b8:27:eb:cd:23:c3 dev wlan0 master br0 permanent</span><br><span class="line">01:00:5e:00:00:01 dev wlan0 self permanent</span><br><span class="line">33:33:00:00:00:01 dev wlan0 self permanent</span><br><span class="line">33:33:00:00:00:01 dev br0 self permanent</span><br><span class="line">01:00:5e:00:00:6a dev br0 self permanent</span><br><span class="line">33:33:00:00:00:6a dev br0 self permanent</span><br><span class="line">01:00:5e:00:00:01 dev br0 self permanent</span><br><span class="line">33:33:ff:cd:23:c3 dev br0 self permanent</span><br><span class="line">33:33:00:00:00:fb dev br0 self permanent</span><br><span class="line">pi@rasp:~/projects/bridge $ bridge -d fdb</span><br><span class="line">f4:30:b9:ad:56:eb dev eth0 master br0</span><br><span class="line">b8:27:eb:98:76:96 dev eth0 master br0 permanent</span><br><span class="line">01:00:5e:00:00:01 dev eth0 self permanent</span><br><span class="line">33:33:00:00:00:01 dev eth0 self permanent</span><br><span class="line">e0:cc:f8:ce:27:a9 dev wlan0 master br0</span><br><span class="line">b8:27:eb:cd:23:c3 dev wlan0 master br0 permanent</span><br><span class="line">01:00:5e:00:00:01 dev wlan0 self permanent</span><br><span class="line">33:33:00:00:00:01 dev wlan0 self permanent</span><br><span class="line">33:33:00:00:00:01 dev br0 self permanent</span><br><span class="line">01:00:5e:00:00:6a dev br0 self permanent</span><br><span class="line">33:33:00:00:00:6a dev br0 self permanent</span><br><span class="line">01:00:5e:00:00:01 dev br0 self permanent</span><br><span class="line">33:33:ff:cd:23:c3 dev br0 self permanent</span><br><span class="line">33:33:00:00:00:fb dev br0 self permanent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pi@rasp:~/projects/bridge $ bridge -d vlan</span><br><span class="line">port    vlan ids</span><br><span class="line">eth0</span><br><span class="line">wlan0</span><br><span class="line">br0</span><br><span class="line">pi@rasp:~/projects/bridge $ exit</span><br><span class="line"></span><br><span class="line">Script done on 2021-07-30 20:08:17+08:00 [COMMAND_EXIT_CODE=&quot;0&quot;]</span><br></pre></td></tr></table></figure>
<h3 id="设备IP配置"><a href="#设备IP配置" class="headerlink" title="设备IP配置"></a>设备IP配置</h3><ul>
<li>PC：<code>192.168.100.100</code>  </li>
<li>手机：<code>192.168.100.102</code>  </li>
</ul>
<h3 id="tcpdump部分抓包结果"><a href="#tcpdump部分抓包结果" class="headerlink" title="tcpdump部分抓包结果"></a>tcpdump部分抓包结果</h3><p>抓包命令：<code>sudo tcpdump -i br0</code>  </p>
<p>可以看到两台设备之间的 ICMP echo request 和 ICMP echo reply，至于为什么没有互相询问ARP的消息，大概是因为在我截取消息的时候他们已经知道了对方的MAC。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">19:56:53.340646 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:53.577869 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 279, length 64</span><br><span class="line">19:56:53.578378 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 279, length 64</span><br><span class="line">19:56:54.105795 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:54.580512 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 280, length 64</span><br><span class="line">19:56:54.580882 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 280, length 64</span><br><span class="line">19:56:54.875747 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:55.582730 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 281, length 64</span><br><span class="line">19:56:55.583236 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 281, length 64</span><br><span class="line">19:56:55.629983 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:56.584221 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 282, length 64</span><br><span class="line">19:56:56.584775 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 282, length 64</span><br><span class="line">19:56:57.079863 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:57.585969 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 283, length 64</span><br><span class="line">19:56:57.586473 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 283, length 64</span><br><span class="line">19:56:57.851101 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:58.587740 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 284, length 64</span><br><span class="line">19:56:58.588376 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 284, length 64</span><br><span class="line">19:56:58.606484 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:56:59.589851 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 285, length 64</span><br><span class="line">19:56:59.590206 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 285, length 64</span><br><span class="line">19:56:59.639003 IP 192.168.17.102.62171 &gt; 239.255.255.250.1900: UDP, length 174</span><br><span class="line">19:57:00.591333 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 286, length 64</span><br><span class="line">19:57:00.592043 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 286, length 64</span><br><span class="line">19:57:00.642907 IP 192.168.17.102.62171 &gt; 239.255.255.250.1900: UDP, length 174</span><br><span class="line">19:57:01.593566 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 287, length 64</span><br><span class="line">19:57:01.593930 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 287, length 64</span><br><span class="line">19:57:01.645152 IP 192.168.17.102.62171 &gt; 239.255.255.250.1900: UDP, length 174</span><br><span class="line">19:57:01.729974 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:57:02.491623 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:57:02.582445 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 288, length 64</span><br><span class="line">19:57:02.582814 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 288, length 64</span><br><span class="line">19:57:02.646148 IP 192.168.17.102.62171 &gt; 239.255.255.250.1900: UDP, length 174</span><br><span class="line">19:57:03.258025 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:57:03.595961 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 289, length 64</span><br><span class="line">19:57:03.596639 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 289, length 64</span><br><span class="line">19:57:04.121192 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:57:04.599132 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 290, length 64</span><br><span class="line">19:57:04.599516 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 290, length 64</span><br><span class="line">19:57:04.881646 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:57:05.592449 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 291, length 64</span><br><span class="line">19:57:05.593202 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 291, length 64</span><br><span class="line">19:57:05.630129 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br><span class="line">19:57:06.601837 IP 192.168.17.100 &gt; 192.168.17.102: ICMP echo request, id 2945, seq 292, length 64</span><br><span class="line">19:57:06.602326 IP 192.168.17.102 &gt; 192.168.17.100: ICMP echo reply, id 2945, seq 292, length 64</span><br><span class="line">19:57:06.735715 ARP, Request who-has 192.168.17.1 tell 192.168.17.100, length 28</span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Bridging_(networking">Bridging (networking) - Wikipedia</a>)  </li>
<li><a href="https://wiki.archlinux.org/title/Network_bridge">Network bridge - ArchWiki</a>  </li>
<li><a href="https://wiki.linuxfoundation.org/networking/bridge">Networking: bridge - Linux Foundation DokuWiki</a>  </li>
<li><a href="https://segmentfault.com/a/1190000009491002">Linux虚拟网络设备之bridge(桥) - SegmentFault 思否</a>  </li>
</ul>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派拨号上网并作为网关</title>
    <url>/2021/08/11/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%8B%A8%E5%8F%B7%E4%B8%8A%E7%BD%91%E5%B9%B6%E4%BD%9C%E4%B8%BA%E7%BD%91%E5%85%B3/</url>
    <content><![CDATA[<h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><ul>
<li>Newifi D2  </li>
<li>RaspberryPi 3B+  </li>
<li>笔记本电脑</li>
</ul>
<h2 id="网络拓扑"><a href="#网络拓扑" class="headerlink" title="网络拓扑"></a>网络拓扑</h2><p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/202108111609563.jpg" alt="">  </p>
<ul>
<li><code>Raspberry Pi 3B+</code> 和 <code>Newifi D2 CPU(Openwrt)</code> 的地位是类似的，它们都同时属于 <code>VLAN-1</code> 和 <code>VLAN-2</code>，<code>eth0.1</code> 处理 <code>VLAN-1</code> 的数据包，<code>eth0.2</code> 处理 <code>VLAN-2</code> 的数据包  </li>
<li><code>Raspberry Pi 3B+</code> 和 <code>Newifi D2 CPU(Openwrt)</code> 的不同之处仅仅在于，<code>Raspberry Pi 3B+</code> 通过外部接口<code>LAN1</code>接入交换机，而<code>Newifi D2 CPU(Openwrt)</code>通过内部接口<code>Internal Port</code>接入交换机  </li>
<li><code>Newifi D2 CPU(Openwrt)</code> 内部通过网桥 <code>br-lan</code> 将 <code>eth0.1</code>，<code>wlan0</code>，<code>wlan1</code> 桥接在一起，使得 <code>wlan0</code>，<code>wlan1</code> 可以和 <code>eth0.1</code> 所属的 <code>vlan1</code> 互通  </li>
</ul>
<h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><h3 id="VLAN配置"><a href="#VLAN配置" class="headerlink" title="VLAN配置"></a>VLAN配置</h3><h4 id="交换机VLAN配置"><a href="#交换机VLAN配置" class="headerlink" title="交换机VLAN配置"></a>交换机VLAN配置</h4><p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/202108111552843.png" alt=""> </p>
<ul>
<li>路由器内嵌可编程交换机的 <code>LAN2/LAN3/LAN4</code> 属于 <code>untagged VLAN-1</code>  </li>
<li>路由器内嵌可编程交换机的 <code>WAN</code> 属于 <code>untagged VLAN-2</code>  </li>
<li>路由器内嵌可编程交换机的 <code>LAN1</code> 和 <code>Internal Port</code> 属于 <code>tagged VLAN-1</code> &amp; <code>tagged VLAN-2</code>  </li>
</ul>
<h4 id="树莓派VLAN接口配置"><a href="#树莓派VLAN接口配置" class="headerlink" title="树莓派VLAN接口配置"></a>树莓派VLAN接口配置</h4><p>树莓派的 <code>eth0.1</code> 属于 <code>VLAN 1</code>，<code>eth0.2</code> 属于 <code>VLAN 2</code>，到达 <code>eth0</code> 的数据包会根据其中包含的 <code>VLAN ID</code> 传递到对应的VLAN虚拟接口，而从VLAN虚拟接口发出的数据包也会打上对应的 <code>VLAN ID</code>  (后两句是我的猜测，然而由于我并不了解Linux协议栈以及虚拟接口的工作原理，无法保证准确性，大致工作原理可能类似)。其实路由器的 <code>eth0.1</code> 和 <code>eth0.2</code> 也是这样的。</p>
<p><strong>配置方法</strong></p>
<ol>
<li>通过IP命令配置   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip <span class="built_in">link</span> add <span class="built_in">link</span> eth0 name eth0.1 <span class="built_in">type</span> vlan <span class="built_in">id</span> 1</span><br><span class="line">sudo ip <span class="built_in">link</span> add <span class="built_in">link</span> eth0 name eth0.2 <span class="built_in">type</span> vlan <span class="built_in">id</span> 2</span><br></pre></td></tr></table></figure></li>
<li>在 <code>/etc/network/interfaces</code> 中配置   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># interfaces(5) file used by ifup(8) and ifdown(8)</span><br><span class="line"></span><br><span class="line"># Please note that this file is written to be used with dhcpcd</span><br><span class="line"># For static IP, consult /etc/dhcpcd.conf and &#x27;man dhcpcd.conf&#x27;</span><br><span class="line"></span><br><span class="line"># Include files from /etc/network/interfaces.d:</span><br><span class="line">source-directory /etc/network/interfaces.d</span><br><span class="line"></span><br><span class="line">auto eth0.1</span><br><span class="line">iface eth0.1 inet manual</span><br><span class="line"></span><br><span class="line">auto eth0.2</span><br><span class="line">iface eth0.2 inet manual</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="为树莓派的-eth0-1-配置静态IP"><a href="#为树莓派的-eth0-1-配置静态IP" class="headerlink" title="为树莓派的 eth0.1 配置静态IP"></a>为树莓派的 <code>eth0.1</code> 配置静态IP</h3><p>树莓派默认会通过 <code>dhcpcd</code> 为各个接口配置IP，可以为树莓派的<code>eth0.1</code>配置静态IP便于进行局域网访问并进一步作为网关。可以在 <code>/etc/dhcpcd.conf</code> 中配置：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">interface eth0.1</span><br><span class="line">static ip_address=192.168.2.10/24</span><br></pre></td></tr></table></figure></p>
<p>如果仅仅希望阻止 <code>dhcpcd</code> 自动为某些接口通过局域网中的DHCP服务器配置IP，可以这样配置:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># deny</span><br><span class="line">denyinterfaces eth0 eth0.2</span><br></pre></td></tr></table></figure></p>
<h3 id="树莓派利用PPPoE连接网络"><a href="#树莓派利用PPPoE连接网络" class="headerlink" title="树莓派利用PPPoE连接网络"></a>树莓派利用PPPoE连接网络</h3><p><code>Raspberry Pi 3B+</code> 可以通过 <code>eth0.2</code> 与经 <code>WAN</code> 连接的运营商通信，就像 <code>Newifi D2 CPU(Openwrt)</code> 一样。</p>
<p><strong>连接步骤</strong>  </p>
<ol>
<li>安装 pppoe 相关软件包   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install pppoe pppoeconf pppstatus</span><br></pre></td></tr></table></figure></li>
<li>配置 pppoe 连接信息 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pppoeconf eth0.2</span><br></pre></td></tr></table></figure>
 然后根据提示输入账号和密码即可，账号和密码只需配置一次    </li>
<li>连接管理   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pon dsl-provider <span class="comment">#建立连接</span></span><br><span class="line">sudo poff <span class="comment">#断开连接</span></span><br><span class="line">sudo plog <span class="comment">#查看连接日志</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>连接成功之后，通过 <code>ip -d addr</code> 就能看到PPPoE接口 <code>ppp0</code>，下面的内容还顺便展示了 <code>eth0.1</code> 和 <code>eth0.2</code> 的接口信息，可以忽略其中的 <code>wlan0</code>，树莓派的 <code>wlan0</code> 其实连接到了路由器的无线网络 <code>Openwrt</code> 当中，与本次实验关系不大。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:98:76:96 brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 68 maxmtu 9000 numtxqueues 1 numrxqueues 1 gso_max_size 8824 gso_max_segs 65535</span><br><span class="line"></span><br><span class="line">3: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:cd:23:c3 brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 68 maxmtu 1500 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">    inet 192.168.2.151/24 brd 192.168.2.255 scope global dynamic noprefixroute wlan0</span><br><span class="line">       valid_lft 27475sec preferred_lft 22075sec</span><br><span class="line"></span><br><span class="line">4: eth0.1@eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:98:76:96 brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 0 maxmtu 65535</span><br><span class="line">    vlan protocol 802.1Q id 1 &lt;REORDER_HDR&gt; numtxqueues 1 numrxqueues 1 gso_max_size 8824 gso_max_segs 65535</span><br><span class="line">    inet 192.168.2.10/24 brd 192.168.2.255 scope global noprefixroute eth0.1</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line">5: eth0.2@eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    link/ether b8:27:eb:98:76:96 brd ff:ff:ff:ff:ff:ff promiscuity 0 minmtu 0 maxmtu 65535</span><br><span class="line">    vlan protocol 802.1Q id 2 &lt;REORDER_HDR&gt; numtxqueues 1 numrxqueues 1 gso_max_size 8824 gso_max_segs 65535</span><br><span class="line"></span><br><span class="line">6: ppp0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1492 qdisc pfifo_fast state UNKNOWN group default qlen 3</span><br><span class="line">    link/ppp  promiscuity 0 minmtu 0 maxmtu 0</span><br><span class="line">    ppp numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">    inet 100.82.232.18 peer 100.82.0.1/32 scope global ppp0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>
<h3 id="树莓派配置路由表"><a href="#树莓派配置路由表" class="headerlink" title="树莓派配置路由表"></a>树莓派配置路由表</h3><p>如果树莓派在建立PPPoE之前不存在默认路由，那么在PPPoE连接过程中应该会自动添加至新建的 PPPoE接口 <code>ppp0</code> 的默认路由，否则，它将不会覆盖原本就存在的默认路由。<br>由于我的树莓派还同时经树莓派的无线网卡 <code>wlan0</code> 连接了路由器的无线网络，原本存在默认路由，故在连接PPPoE之后需要配置默认路由，从而确保树莓派通过其自身建立的 <code>ppp0</code> 连接互联网，而非路由器。  </p>
<p>配置好之后的默认路由为PPPoE接口 <code>ppp0</code> ：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pi@rasp:~ $ ip route</span><br><span class="line"></span><br><span class="line">default dev ppp0 scope link</span><br><span class="line">100.82.0.1 dev ppp0 proto kernel scope link src 100.82.232.18</span><br><span class="line">192.168.2.0/24 dev eth0.1 proto dhcp scope link src 192.168.2.10 metric 204</span><br><span class="line">192.168.2.0/24 dev wlan0 proto dhcp scope link src 192.168.2.151 metric 303</span><br></pre></td></tr></table></figure>
<h3 id="网络测试1"><a href="#网络测试1" class="headerlink" title="网络测试1"></a>网络测试1</h3><p>在完成上述配置之后，如果不出意外的话，树莓派应该就可以连接互联网了，可以随便ping一下百度进行测试，或者ping一个知名如 <code>114.114.114.114</code>，如果能ping IP却不能ping 域名，可以检查下DNS设置，在此不再赘述。  </p>
<h3 id="配置NAT-Network-Address-Translation"><a href="#配置NAT-Network-Address-Translation" class="headerlink" title="配置NAT(Network Address Translation)"></a>配置NAT(Network Address Translation)</h3><p>完成上面的配置之后，树莓派本身可以通过其建立的PPPoE连接互联网，但局域网中的其他设备却仍然无法访问互联网，那么如何使其他设备可以借助树莓派的PPPoE访问互联网呢？答案是NAT。  </p>
<p>NAT的中文名称是网络地址转换，配置好NAT之后，局域网其他设备就可以将树莓派作为网关，然后该设备（称为设备A）的网络协议栈就会将目的地址为外部网络的数据包发往树莓派（IP数据包目的地址仍然是真实目的IP，MAC数据包的目的地址是树莓派，准确地说是树莓派的<code>eth0.1</code>），树莓派会将原始IP数据包的 <code>src</code> 改为自身PPPoE接口<code>ppp0</code>的IP地址，然后发往目标设备，并且，会将目标设备返回的IP数据包的 <code>dst</code> 改为设备A的IP地址，使得局域网设备可以透明地与互联网中的设备进行通信。<br>如果想要深入了解NAT，可以参考<a href="https://en.wikipedia.org/wiki/Network_address_translation#Methods_of_translation">Network address translation - Wikipedia</a>，<a href="https://www.karlrupp.net/en/computer/nat_tutorial">NAT - Network Address Translation</a>，前一篇文章侧重于NAT的概念和实现，后一篇文章侧重于Linux系统中NAT的配置和用途。  </p>
<p><strong>配置方法</strong><br>配置NAT需要使用*nux的防火墙工具，比如 <code>iptables</code>。关于防火墙可以参考<a href="https://www.cnblogs.com/pixy/p/5156739.html">Linux防火墙配置(iptables, firewalld)</a>。</p>
<p>在本次实验当中，我使用iptables，并且配置为<code>masquerade</code>，除了<code>masquerade</code>还可以采用<code>snat</code>。他们的区别在于，<code>snat</code>需要指定要改写为哪个IP地址，这种情况适用于静态IP用户，而PPPoE分配的IP一般为动态IP，这时一般应该采用<code>masquerade</code>，在这种情况下，无需指定要改写为哪个IP，内核会自动读取对应网络接口的IP地址进行改写。  </p>
<p>不过在配置NAT之前，需要先开启Linux内核的数据包转发功能，默认情况下会禁止转发数据包。配置命令如下：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo bash -c <span class="string">&#x27;echo 1 &gt; /proc/sys/net/ipv4/ip_forward&#x27;</span></span><br></pre></td></tr></table></figure>
<p>下面是NAT配置命令：  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -j MASQUERADE</span><br></pre></td></tr></table></figure>
<p>上面的命令的意思是这样的，在nat表中的POSTROUTING链中添加一条规则：如果IP数据包的 <code>src</code> 属于 <code>192.168.2.0/24</code> 网段，则在发送出去之前，改写其 <code>src</code> 为出口网络接口的IP地址。同时，该规则隐含了一条反向规则，将应答数据包的 <code>dst</code> 改为真实的 <code>dst</code>（即被改掉的 <code>src</code> ）。实际实现过程中，只改IP应该是不够的，可能还需要修改<code>sport</code>，并对应修改应答数据包的<code>dport</code>。  </p>
<h3 id="网络测试2"><a href="#网络测试2" class="headerlink" title="网络测试2"></a>网络测试2</h3><p>完成上述配置之后，为局域网设备设置合适的IP地址，网关设为树莓派的局域网IP <code>192.168.2.10</code>，配置好DNS，应该就可以访问互联网了。  </p>
<p>我的测试设备IP是这样的：  </p>
<ul>
<li>笔记本电脑：无线网卡连接至路由器的无线网 <em>Openwrt-5G</em>，IP为 <code>192.168.2.51</code>（<em>Openwrt-5G</em>经路由器的<code>br-lan</code>与路由器的<code>eth0.1</code>桥接在一起，从而能够接入<em>vlan1</em>）  </li>
<li>树莓派：通过 <em>LAN1</em> 接入 <em>vlan-1</em> 和 <em>vlan-2</em>，<code>eth0.1</code> 的IP为 <code>192.168.2.10</code>，经<code>eth0.2</code>建立的PPPoE连接 <code>ppp0</code> 的IP为 <code>100.82.232.18</code>  </li>
</ul>
<p>测试方法为，在笔记本电脑上 <code>ping 8.8.4.4</code>，然后在树莓派的 <code>eth0.1</code> 和 <code>ppp0</code> 上抓包。测试结果如下：  </p>
<h4 id="ping-8-8-4-4"><a href="#ping-8-8-4-4" class="headerlink" title="ping 8.8.4.4"></a>ping 8.8.4.4</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS C:\Users\lpy&gt; ping -n 4 8.8.4.4</span><br><span class="line"></span><br><span class="line">正在 Ping 8.8.4.4 具有 32 字节的数据:</span><br><span class="line">来自 8.8.4.4 的回复: 字节=32 时间=208ms TTL=113</span><br><span class="line">来自 8.8.4.4 的回复: 字节=32 时间=209ms TTL=113</span><br><span class="line">来自 8.8.4.4 的回复: 字节=32 时间=209ms TTL=113</span><br><span class="line">来自 8.8.4.4 的回复: 字节=32 时间=209ms TTL=113</span><br><span class="line"></span><br><span class="line">8.8.4.4 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 208ms，最长 = 209ms，平均 = 208ms</span><br></pre></td></tr></table></figure>
<h4 id="抓包结果"><a href="#抓包结果" class="headerlink" title="抓包结果"></a>抓包结果</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pi@rasp:~ $ sudo tcpdump -i eth0.1 dst 8.8.4.4</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0.1, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:20:42.281074 IP 192.168.2.51 &gt; dns.google: ICMP echo request, id 1, seq 346, length 40</span><br><span class="line">14:20:43.292657 IP 192.168.2.51 &gt; dns.google: ICMP echo request, id 1, seq 347, length 40</span><br><span class="line">14:20:44.311231 IP 192.168.2.51 &gt; dns.google: ICMP echo request, id 1, seq 348, length 40</span><br><span class="line">14:20:45.333757 IP 192.168.2.51 &gt; dns.google: ICMP echo request, id 1, seq 349, length 40</span><br><span class="line"></span><br><span class="line">pi@rasp:~ $ sudo tcpdump -i eth0.1 src 8.8.4.4</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on eth0.1, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">14:20:42.487554 IP dns.google &gt; 192.168.2.51: ICMP echo reply, id 1, seq 346, length 40</span><br><span class="line">14:20:43.499652 IP dns.google &gt; 192.168.2.51: ICMP echo reply, id 1, seq 347, length 40</span><br><span class="line">14:20:44.518266 IP dns.google &gt; 192.168.2.51: ICMP echo reply, id 1, seq 348, length 40</span><br><span class="line">14:20:45.540728 IP dns.google &gt; 192.168.2.51: ICMP echo reply, id 1, seq 349, length 40</span><br><span class="line"></span><br><span class="line">pi@rasp:~ $ sudo tcpdump -i ppp0 dst 8.8.4.4</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on ppp0, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">14:20:42.281130 IP 100.82.232.18 &gt; dns.google: ICMP echo request, id 1, seq 346, length 40</span><br><span class="line">14:20:43.292714 IP 100.82.232.18 &gt; dns.google: ICMP echo request, id 1, seq 347, length 40</span><br><span class="line">14:20:44.311320 IP 100.82.232.18 &gt; dns.google: ICMP echo request, id 1, seq 348, length 40</span><br><span class="line">14:20:45.333840 IP 100.82.232.18 &gt; dns.google: ICMP echo request, id 1, seq 349, length 40</span><br><span class="line"></span><br><span class="line">pi@rasp:~ $ sudo tcpdump -i ppp0 src 8.8.4.4</span><br><span class="line">tcpdump: verbose output suppressed, use -v or -vv for full protocol decode</span><br><span class="line">listening on ppp0, link-type LINUX_SLL (Linux cooked), capture size 262144 bytes</span><br><span class="line">14:20:42.487470 IP dns.google &gt; 100.82.232.18: ICMP echo reply, id 1, seq 346, length 40</span><br><span class="line">14:20:43.499578 IP dns.google &gt; 100.82.232.18: ICMP echo reply, id 1, seq 347, length 40</span><br><span class="line">14:20:44.518194 IP dns.google &gt; 100.82.232.18: ICMP echo reply, id 1, seq 348, length 40</span><br><span class="line">14:20:45.540656 IP dns.google &gt; 100.82.232.18: ICMP echo reply, id 1, seq 349, length 40</span><br></pre></td></tr></table></figure>
<p>测试结果是：</p>
<ul>
<li>笔记本电脑ping通8.8.4.4  </li>
<li>在 <code>ppp0</code> 上可以看到 dns.google（即<code>8.8.4.4</code>） 与 ppp0（即<code>100.82.232.18</code>）之间的往来数据包，ppp0 发出 <code>ICMP echo request</code>，然后 dns.google 回应 <code>ICMP echo reply</code>  </li>
<li>在 <code>eth0.1</code> 上可以看到 dns.google（即<code>8.8.4.4</code>） 与笔记本电脑（即<code>192.168.2.51</code>）之间的往来数据包，笔记本电脑发出 <code>ICMP echo request</code>，然后 dns.google 回应 <code>ICMP echo reply</code>  </li>
</ul>
<p>数据交换流程如下所示，由于这个例子是ICMP协议，不涉及端口号，如果是TCP/UDP还需要考虑端口号的转换：  </p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/202108112203922.jpg" alt=""></p>
<p>需要再次强调一下，本例只是选用了最简单的ICMP协议，而应用程序大部分情况下使用的是TCP和UDP协议，在这种情况下，NAT是同时涉及IP和Port的，<a href="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/202108112252029.png">此图</a>展示了两次对NTP服务器的访问，其中就涉及到了端口号。</p>
<h2 id="扩展玩法"><a href="#扩展玩法" class="headerlink" title="扩展玩法"></a>扩展玩法</h2><ul>
<li>进一步在树莓派上安装 <code>dnsmasq</code>，提供DNS Server以及DNS缓存服务  </li>
<li>利用树莓派的wlan0开启无线热点，并通过Linux虚拟网桥桥接wlan0和eth0.1，将网关IP配置在虚拟网桥接口上，使wlan0所创建的WLAN也能通过树莓派的PPPoE接口经NAT访问互联网  </li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://en.wikipedia.org/wiki/Network_address_translation#Methods_of_translation">Network address translation - Wikipedia</a>  </li>
<li><a href="https://www.karlrupp.net/en/computer/nat_tutorial">Network Address Translation - karlrupp.net</a>  </li>
<li><a href="https://www.cnblogs.com/pixy/p/5156739.html">Linux防火墙配置(iptables, firewalld) - 博客园</a>  </li>
</ul>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Openwrt</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>判断一个数字是否为2的幂</title>
    <url>/2021/10/03/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E4%B8%BA2%E7%9A%84%E5%B9%82/</url>
    <content><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先需要区分开 <code>2^N</code> 和 <code>2N</code>。<code>2N</code> 很好判断，直接看数字能否被2整除即可。如果想用类似 <code>2N</code> 的思路去判别 <code>2^N</code>，可能就需要递归计算 <code>N=N/2</code>。</p>
<p>不过借助二进制表示的性质，可以简化 <code>2^N</code> 的判别。</p>
<p>假设一个正整数 <code>val</code> 的表示形式为<code>1XX...X</code>。</p>
<ul>
<li><p>假如它是2的幂，<code>val</code> 的表示形式必然是 <code>100...0</code>，并且 <code>val-1</code> 的表示形式会是 <code>011..1</code>。则有 <code>val &amp; (val-1) == 0</code></p>
</li>
<li><p>假如它不是2的幂， <code>val</code> 的表示形式会是 <code>1XX...X</code>，它的末尾数字中至少有一位为<code>1</code>, 则 <code>val-1</code> 无需借最开始的<code>1</code>，<code>val-1</code> 表示形式会是 <code>1XX...X</code>。则有 <code>val &amp; (val-1) != 0</code></p>
</li>
</ul>
<p>而任意一个正整数 <code>val</code> 要么是2的幂，要么不是2的幂，上面讨论已经概括了所有的正整数。</p>
<p>上述两个命题的逆否命题分别为：</p>
<p>对于一个正整数 <code>val</code>：</p>
<ul>
<li>假如 <code>val &amp; (val-1) != 0</code>，则它不是2的幂</li>
<li>假如 <code>val &amp; (val-1) == 0</code>，则它是2的幂</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isPowOf2</span><span class="params">(<span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// == 优先级高于 &amp;</span></span><br><span class="line">    <span class="keyword">return</span> (val &amp; (val - <span class="number">1</span>)) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Newifi-D2逻辑结构探究</title>
    <url>/2021/07/30/Newifi-D2%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84%E6%8E%A2%E7%A9%B6/</url>
    <content><![CDATA[<h2 id="逻辑构造图"><a href="#逻辑构造图" class="headerlink" title="逻辑构造图"></a>逻辑构造图</h2><p>先放结论，经过探究，Newifi D2的网络结构图是这样的：<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210731125647.jpg" alt="">  </p>
<ul>
<li>可编程交换机各端口对应关系为  </li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>Port</th>
<th>Switch Port</th>
</tr>
</thead>
<tbody>
<tr>
<td>Internal (CPU)</td>
<td>6</td>
</tr>
<tr>
<td>Internet (WAN)</td>
<td>4</td>
</tr>
<tr>
<td>LAN1</td>
<td>3</td>
</tr>
<tr>
<td>LAN2</td>
<td>2</td>
</tr>
<tr>
<td>LAN3</td>
<td>1</td>
</tr>
<tr>
<td>LAN4</td>
<td>0</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>默认的网络配置为  </li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th>Interface Name</th>
<th>Description</th>
<th>Default configuration</th>
</tr>
</thead>
<tbody>
<tr>
<td>br-lan</td>
<td>LAN &amp; 2.4GHz WiFi &amp; 5GHz WiFi</td>
<td>192.168.1.1/24</td>
</tr>
<tr>
<td>vlan1 (eth0.1)</td>
<td>LAN ports(1 - 4)</td>
<td>None</td>
</tr>
<tr>
<td>vlan2 (eth0.2)</td>
<td>WAN port</td>
<td>DHCP</td>
</tr>
<tr>
<td>wlan0</td>
<td>2.4GHz WiFI</td>
<td>Disabled</td>
</tr>
<tr>
<td>wlan1</td>
<td>5GHz WiFI</td>
<td>Disabled</td>
</tr>
</tbody>
</table>
</div>
<h2 id="产品信息"><a href="#产品信息" class="headerlink" title="产品信息"></a>产品信息</h2><h3 id="芯片结构"><a href="#芯片结构" class="headerlink" title="芯片结构"></a>芯片结构</h3><p>Newifi已经倒闭所以找不到官网产品信息页了，根据<a href="https://www.mediatek.tw/products/homenetworking/mt7621">MediaTek | MT7621A/N</a>的介绍，MT7621A内嵌 <strong>5端口千兆以太网交换机</strong>，下面是 <code>MT7621A Datasheet</code> 中的芯片功能模块图，图中也可以看出WAN口和4个LAN口同属于一个Switch，他们都是交换机的端口。除了以太网交换机，芯片还包含了两个以PCIe方式连接的WiFi模块，<code>11n WiFi</code> 和 <code>11ac WiFi</code>，分别用于2.4GHz和5GHz。  </p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210729212227.png" alt=""></p>
<h3 id="内嵌可编程交换机结构"><a href="#内嵌可编程交换机结构" class="headerlink" title="内嵌可编程交换机结构"></a>内嵌可编程交换机结构</h3><p>下面是摘自 <code>MT7621 Giga Switch Programming Guide</code> 的交换机功能模块图以及部分寄存器配置截图，该文档描述了 <code>MT7621A</code> 内嵌可编程交换机的结构以及编程方法，可以看到内嵌可编程交换机共有 <strong>7</strong> 个Port，其中有5个Port引出了网口，根据交换机编程手册，可以配置 <code>CPU_PORT</code> 的 <strong>Port Number</strong>。   </p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210729211229.png" alt="">  </p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210729205353.png" alt="">  </p>
<h3 id="Openwrt-for-Newifi-D2-交换机端口分配方式"><a href="#Openwrt-for-Newifi-D2-交换机端口分配方式" class="headerlink" title="Openwrt for Newifi D2 交换机端口分配方式"></a>Openwrt for Newifi D2 交换机端口分配方式</h3><p>我也不懂设备树文件（Device Tree Source）的具体语法，但阅读下面两段代码，大致可以看出Openwrt源码对Newifi D2硬件交换机的配置方式为：  </p>
<ul>
<li>将 <code>Port0 - Port3</code> 记为 <code>lan4 - lan1</code></li>
<li>将 <code>Port4</code> 记为 <code>wan</code></li>
<li>将 <code>Port6</code> 定义为 <code>CPU端口</code>  </li>
</ul>
<p>这些都是对 <code>MT7621A</code> 中集成的硬件交换机的配置。</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// From: /target/linux/ramips/dts/mt7621.dtsi</span></span><br><span class="line"><span class="comment">// Url: https://github.com/openwrt/openwrt/blob/master/target/linux/ramips/dts/mt7621.dtsi</span></span><br><span class="line"><span class="title class_">ports</span> <span class="punctuation">&#123;</span></span><br><span class="line">					<span class="meta">#address-cells = &lt;1&gt;;</span></span><br><span class="line">					<span class="meta">#size-cells = &lt;0&gt;;</span></span><br><span class="line">					<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">0</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line"></span><br><span class="line">					<span class="title class_">port@0</span> <span class="punctuation">&#123;</span></span><br><span class="line">						<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;disabled&quot;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">0</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan0&quot;</span><span class="punctuation">;</span></span><br><span class="line">					<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">					<span class="title class_">port@1</span> <span class="punctuation">&#123;</span></span><br><span class="line">						<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;disabled&quot;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">1</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan1&quot;</span><span class="punctuation">;</span></span><br><span class="line">					<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">					<span class="title class_">port@2</span> <span class="punctuation">&#123;</span></span><br><span class="line">						<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;disabled&quot;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">2</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan2&quot;</span><span class="punctuation">;</span></span><br><span class="line">					<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">					<span class="title class_">port@3</span> <span class="punctuation">&#123;</span></span><br><span class="line">						<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;disabled&quot;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">3</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan3&quot;</span><span class="punctuation">;</span></span><br><span class="line">					<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">					<span class="title class_">port@4</span> <span class="punctuation">&#123;</span></span><br><span class="line">						<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;disabled&quot;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">4</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan4&quot;</span><span class="punctuation">;</span></span><br><span class="line">					<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">					<span class="title class_">port@6</span> <span class="punctuation">&#123;</span></span><br><span class="line">						<span class="attr">reg</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">6</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;cpu&quot;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">ethernet</span> <span class="operator">=</span> <span class="params">&lt;<span class="variable">&amp;gmac0</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">						<span class="attr">phy-mode</span> <span class="operator">=</span> <span class="string">&quot;rgmii&quot;</span><span class="punctuation">;</span></span><br><span class="line"></span><br><span class="line">						<span class="title class_">fixed-link</span> <span class="punctuation">&#123;</span></span><br><span class="line">							<span class="attr">speed</span> <span class="operator">=</span> <span class="params">&lt;<span class="number">1000</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">							<span class="attr">full-duplex</span><span class="punctuation">;</span></span><br><span class="line">						<span class="punctuation">&#125;;</span></span><br><span class="line">					<span class="punctuation">&#125;;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// From: /target/linux/ramips/dts/mt7621_d-team_newifi-d2.dts</span></span><br><span class="line"><span class="comment">// Url: https://github.com/openwrt/openwrt/blob/master/target/linux/ramips/dts/mt7621_d-team_newifi-d2.dts</span></span><br><span class="line"><span class="variable">&amp;switch0</span> <span class="punctuation">&#123;</span></span><br><span class="line">	<span class="title class_">ports</span> <span class="punctuation">&#123;</span></span><br><span class="line">		<span class="title class_">port@0</span> <span class="punctuation">&#123;</span></span><br><span class="line">			<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;okay&quot;</span><span class="punctuation">;</span></span><br><span class="line">			<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan4&quot;</span><span class="punctuation">;</span></span><br><span class="line">		<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">		<span class="title class_">port@1</span> <span class="punctuation">&#123;</span></span><br><span class="line">			<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;okay&quot;</span><span class="punctuation">;</span></span><br><span class="line">			<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan3&quot;</span><span class="punctuation">;</span></span><br><span class="line">		<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">		<span class="title class_">port@2</span> <span class="punctuation">&#123;</span></span><br><span class="line">			<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;okay&quot;</span><span class="punctuation">;</span></span><br><span class="line">			<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan2&quot;</span><span class="punctuation">;</span></span><br><span class="line">		<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">		<span class="title class_">port@3</span> <span class="punctuation">&#123;</span></span><br><span class="line">			<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;okay&quot;</span><span class="punctuation">;</span></span><br><span class="line">			<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;lan1&quot;</span><span class="punctuation">;</span></span><br><span class="line">		<span class="punctuation">&#125;;</span></span><br><span class="line"></span><br><span class="line">		<span class="title class_">port@4</span> <span class="punctuation">&#123;</span></span><br><span class="line">			<span class="attr">status</span> <span class="operator">=</span> <span class="string">&quot;okay&quot;</span><span class="punctuation">;</span></span><br><span class="line">			<span class="attr">label</span> <span class="operator">=</span> <span class="string">&quot;wan&quot;</span><span class="punctuation">;</span></span><br><span class="line">			<span class="attr">mtd-mac-address</span> <span class="operator">=</span> <span class="params">&lt;<span class="variable">&amp;factory</span> <span class="number">0xe006</span>&gt;</span><span class="punctuation">;</span></span><br><span class="line">		<span class="punctuation">&#125;;</span></span><br><span class="line">	<span class="punctuation">&#125;;</span></span><br><span class="line"><span class="punctuation">&#125;;</span></span><br></pre></td></tr></table></figure>
<h3 id="查看网络设备"><a href="#查看网络设备" class="headerlink" title="查看网络设备"></a>查看网络设备</h3><p>通过 <code>ls /sys/class/net/ -al</code> 可以查看系统中所有的网络设备：  </p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root@OpenWrt:~# ls /sys/class/net/ -l</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jul 22 14:01 br-lan -&gt; ../../devices/virtual/net/br-lan</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jan  1  1970 eth0 -&gt; ../../devices/platform/1e100000.ethernet/net/eth0</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jul 22 14:01 eth0.1 -&gt; ../../devices/virtual/net/eth0.1</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jul 22 14:01 eth0.2 -&gt; ../../devices/virtual/net/eth0.2</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jan  1  1970 lo -&gt; ../../devices/virtual/net/lo</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jul 22 14:01 pppoe-wan -&gt; ../../devices/virtual/net/pppoe-wan</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jul 22 14:01 wlan0 -&gt; ../../devices/pci0000:00/0000:00:01.0/0000:02:00.0/net/wlan0</span><br><span class="line">lrwxrwxrwx    1 root     root             0 Jul 22 14:01 wlan1 -&gt; ../../devices/pci0000:00/0000:00:00.0/0000:01:00.0/net/wlan1</span><br></pre></td></tr></table></figure>
<p>根据符号链接指向的位置，可以分辨出Newifi D2中有三个物理网络设备，五个虚拟网络设备。</p>
<p>物理设备有：  </p>
<ul>
<li>eth0  </li>
<li>wlan0  </li>
<li>wlan1  </li>
</ul>
<p>虚拟设备有：  </p>
<ul>
<li>br-lan</li>
<li>eth0.1</li>
<li>eth0.2</li>
<li>lo</li>
<li>pppoe-wan</li>
</ul>
<h2 id="系统网络信息"><a href="#系统网络信息" class="headerlink" title="系统网络信息"></a>系统网络信息</h2><h3 id="接口信息"><a href="#接口信息" class="headerlink" title="接口信息"></a>接口信息</h3><p>通过 <code>ip -d addr</code> 可以查看系统中接口以及其IP地址信息：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 promiscuity 0 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 1000</span><br><span class="line">    link/ether 20:76:93:44:fe:97 brd ff:ff:ff:ff:ff:ff promiscuity 2 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line"></span><br><span class="line">5: br-lan: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    link/ether 20:76:93:44:fe:97 brd ff:ff:ff:ff:ff:ff promiscuity 0</span><br><span class="line">    bridge forward_delay 200 hello_time 200 max_age 2000 ageing_time 30000 stp_state 0 priority 32767 vlan_filtering 0 vlan_protocol 802.1Q bridge_id 7fff.20:76:93:44:FE:97 designated_root 7fff.20:76:93:44:FE:97 root_port 0 root_path_cost 0 topology_change 0 topology_change_detected 0 hello_timer    0.00 tcn_timer    0.00 topology_change_timer    0.00 gc_timer  100.32 vlan_default_pvid 1 vlan_stats_enabled 0 group_fwd_mask 0 group_address 01:80:c2:00:00:00 mcast_snooping 0 mcast_router 1 mcast_query_use_ifaddr 0 mcast_querier 0 mcast_hash_elasticity 4 mcast_hash_max 512 mcast_last_member_count 2 mcast_startup_query_count 2 mcast_last_member_interval 100 mcast_membership_interval 26000 mcast_querier_interval 25500 mcast_query_interval 12500 mcast_query_response_interval 1000 mcast_startup_query_interval 3125 mcast_stats_enabled 0 mcast_igmp_version 2 mcast_mld_version 1 nf_call_iptables 0 nf_call_ip6tables 0 nf_call_arptables 0 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">    inet 192.168.2.1/24 brd 192.168.2.255 scope global br-lan</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line">6: eth0.1@eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-lan state UP group default qlen 1000</span><br><span class="line">    link/ether 20:76:93:44:fe:97 brd ff:ff:ff:ff:ff:ff promiscuity 1</span><br><span class="line">    vlan protocol 802.1Q id 1 &lt;REORDER_HDR&gt;</span><br><span class="line">    bridge_slave state forwarding priority 32 cost 100 hairpin off guard off root_block off fastleave off learning on flood on port_id 0x8001 port_no 0x1 designated_port 32769 designated_cost 0 designated_bridge 7fff.20:76:93:44:FE:97 designated_root 7fff.20:76:93:44:FE:97 hold_timer    0.00 message_age_timer    0.00 forward_delay_timer    0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on neigh_suppress off vlan_tunnel off numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line"></span><br><span class="line">7: eth0.2@eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    link/ether 20:76:93:44:fe:98 brd ff:ff:ff:ff:ff:ff promiscuity 0</span><br><span class="line">    vlan protocol 802.1Q id 2 &lt;REORDER_HDR&gt; numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line"></span><br><span class="line">8: pppoe-wan: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1492 qdisc fq_codel state UNKNOWN group default qlen 3</span><br><span class="line">    link/ppp  promiscuity 0</span><br><span class="line">    ppp numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line">    inet 100.82.7.242 peer 100.82.0.1/32 scope global pppoe-wan</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 2409:8a20:ae02:f845:539:f95a:7989:37c8/64 scope global dynamic noprefixroute</span><br><span class="line">       valid_lft 259059sec preferred_lft 172659sec</span><br><span class="line"></span><br><span class="line">9: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-lan state UP group default qlen 1000</span><br><span class="line">    link/ether 20:76:93:44:fe:96 brd ff:ff:ff:ff:ff:ff promiscuity 1</span><br><span class="line">    bridge_slave state forwarding priority 32 cost 100 hairpin on guard off root_block off fastleave off learning on flood on port_id 0x8002 port_no 0x2 designated_port 32770 designated_cost 0 designated_bridge 7fff.20:76:93:44:FE:97 designated_root 7fff.20:76:93:44:FE:97 hold_timer    0.00 message_age_timer    0.00 forward_delay_timer    0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on neigh_suppress off vlan_tunnel off numtxqueues 4 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line"></span><br><span class="line">10: wlan1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master br-lan state UP group default qlen 1000</span><br><span class="line">    link/ether 20:76:93:44:fe:98 brd ff:ff:ff:ff:ff:ff promiscuity 1</span><br><span class="line">    bridge_slave state forwarding priority 32 cost 100 hairpin on guard off root_block off fastleave off learning on flood on port_id 0x8003 port_no 0x3 designated_port 32771 designated_cost 0 designated_bridge 7fff.20:76:93:44:FE:97 designated_root 7fff.20:76:93:44:FE:97 hold_timer    0.00 message_age_timer    0.00 forward_delay_timer    0.00 topology_change_ack 0 config_pending 0 proxy_arp off proxy_arp_wifi off mcast_router 1 mcast_fast_leave off mcast_flood on neigh_suppress off vlan_tunnel off numtxqueues 4 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>接下来，我们逐一分析一下各个接口所展示的信息，为了便于展示以及分析，忽略IPv6地址（已从输出中删掉）：  </p>
<ul>
<li>lo： 虚拟设备，本地回环设备，IPv4地址为 <code>127.0.0.1</code>  </li>
<li>eth0：物理设备，物理以太网设备，MAC地址为 <code>20:76:93:44:fe:97</code>，无IP地址  </li>
<li>br-lan：虚拟设备，Linux网桥设备，MAC地址为 <code>20:76:93:44:fe:97</code>，IP地址为 <code>192.168.2.1</code>  </li>
<li>eth0.1@eth0：虚拟设备，基于 <code>eth0</code> 的VLAN设备，VLAN id为1，MAC地址为 <code>20:76:93:44:fe:97</code>，无IP地址，<code>bridge_slave</code>表示它是网桥的从设备  </li>
<li>eth0.2@eth0：虚拟设备，基于 <code>eth0</code> 的VLAN设备，VLAN id为2，MAC地址为 <code>20:76:93:44:fe:98</code>，无IP地址  </li>
<li>pppoe-wan：虚拟设备，PPPoE拨号设备，未显示MAC地址（暂不清楚如何解释，估计是这种虚拟设备就没有MAC，应该是依赖于某个其他设备），IP地址为 <code>100.82.7.242</code>  </li>
<li>wlan0：物理设备，无线网卡，MAC地址为 <code>20:76:93:44:fe:96</code>，无IP地址，<code>bridge_slave</code>表示它是网桥的从设备  </li>
<li>wlan1：物理设备，无线网卡，MAC地址为 <code>20:76:93:44:fe:98</code>，无IP地址，<code>bridge_slave</code>表示它是网桥的从设备  </li>
</ul>
<h3 id="桥信息"><a href="#桥信息" class="headerlink" title="桥信息"></a>桥信息</h3><p>系统自带了 <code>brctl</code>，通过 <code>brctl show</code> 可以查看系统中的桥信息：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">bridge name     bridge id               STP enabled     interfaces</span><br><span class="line">br-lan          7fff.20769344fe97       no              eth0.1</span><br><span class="line">                                                        wlan0</span><br><span class="line">                                                        wlan1</span><br></pre></td></tr></table></figure>
<p>也可以另外安装 <code>ip-bridge</code> 包，然后使用 <code>bridge</code> 命令进行Linux虚拟网桥操作，比如 <code>bridge link</code> 可以展示桥中的接口：  </p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">6: eth0.1@eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 master br-lan state forwarding priority 32 cost 100</span><br><span class="line">9: wlan0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 master br-lan state forwarding priority 32 cost 100</span><br><span class="line">10: wlan1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 master br-lan state forwarding priority 32 cost 100</span><br></pre></td></tr></table></figure>
<p>上面的信息表明，网桥 <code>br-lan</code> 中包含三个设备：<code>eth0.1</code>，<code>wlan0</code>，<code>wlan1</code>  </p>
<p>根据上面对各个接口的分析，得知 <code>br-lan</code> 有IP地址，<code>eth0.1</code>，<code>wlan0</code>，<code>wlan1</code>均没有IP地址，而网桥的作用就类似于交换机，可以在桥中各个设备直接交换MAC帧，这三者的关系如下图所示：  </p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">+--------------------------------------------------------------------+</span><br><span class="line">|                                                                    |</span><br><span class="line">|                          +--------------+                          |</span><br><span class="line">|                          | 192.168.2.1  |                          |</span><br><span class="line">|            +------------→|    br-lan    |←--------------+          |</span><br><span class="line">|            |             +--------------+               |          |</span><br><span class="line">|            |                     ↑                      |          |</span><br><span class="line">|            |                     |                      |          |</span><br><span class="line">|            ↓                     ↓                      ↓          |</span><br><span class="line">|       +---------+           +---------+            +---------+     |</span><br><span class="line">|       | eth0.1  |           |  wlan0  |            |  wlan1  |     |</span><br><span class="line">|       +---------+           +---------+            +---------+     |</span><br><span class="line">|                                                                    |</span><br><span class="line">+--------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>
<h3 id="默认网络配置"><a href="#默认网络配置" class="headerlink" title="默认网络配置"></a>默认网络配置</h3><p>网络配置位于 <code>/etc/config/network</code>：  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">config interface &#x27;loopback&#x27;</span><br><span class="line">        option ifname &#x27;lo&#x27;</span><br><span class="line">        option proto &#x27;static&#x27;</span><br><span class="line">        option ipaddr &#x27;127.0.0.1&#x27;</span><br><span class="line">        option netmask &#x27;255.0.0.0&#x27;</span><br><span class="line"></span><br><span class="line">config globals &#x27;globals&#x27;</span><br><span class="line">        option ula_prefix &#x27;fdff:faeb:0d9b::/48&#x27;</span><br><span class="line"></span><br><span class="line">config interface &#x27;lan&#x27;</span><br><span class="line">        option type &#x27;bridge&#x27;</span><br><span class="line">        option ifname &#x27;eth0.1&#x27;</span><br><span class="line">        option proto &#x27;static&#x27;</span><br><span class="line">        option ipaddr &#x27;192.168.2.1&#x27;</span><br><span class="line">        option netmask &#x27;255.255.255.0&#x27;</span><br><span class="line">        option ip6assign &#x27;60&#x27;</span><br><span class="line"></span><br><span class="line">config device &#x27;lan_eth0_1_dev&#x27;</span><br><span class="line">        option name &#x27;eth0.1&#x27;</span><br><span class="line">        option macaddr &#x27;20:76:93:44:fe:97&#x27;</span><br><span class="line"></span><br><span class="line">config interface &#x27;wan&#x27;</span><br><span class="line">        option ifname &#x27;eth0.2&#x27;</span><br><span class="line">        option proto &#x27;pppoe&#x27;</span><br><span class="line">        option password &#x27;************&#x27;</span><br><span class="line">        option ipv6 &#x27;auto&#x27;</span><br><span class="line">        option username &#x27;************&#x27;</span><br><span class="line"></span><br><span class="line">config device &#x27;wan_eth0_2_dev&#x27;</span><br><span class="line">        option name &#x27;eth0.2&#x27;</span><br><span class="line">        option macaddr &#x27;20:76:93:44:fe:98&#x27;</span><br><span class="line"></span><br><span class="line">config interface &#x27;wan6&#x27;</span><br><span class="line">        option ifname &#x27;eth0.2&#x27;</span><br><span class="line">        option proto &#x27;dhcpv6&#x27;</span><br><span class="line"></span><br><span class="line">config switch</span><br><span class="line">        option name &#x27;switch0&#x27;</span><br><span class="line">        option reset &#x27;1&#x27;</span><br><span class="line">        option enable_vlan &#x27;1&#x27;</span><br><span class="line"></span><br><span class="line">config switch_vlan</span><br><span class="line">        option device &#x27;switch0&#x27;</span><br><span class="line">        option vlan &#x27;1&#x27;</span><br><span class="line">        option ports &#x27;0 1 2 3 6t&#x27;</span><br><span class="line"></span><br><span class="line">config switch_vlan</span><br><span class="line">        option device &#x27;switch0&#x27;</span><br><span class="line">        option vlan &#x27;2&#x27;</span><br><span class="line">        option ports &#x27;4 6t&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="网络拓扑汇总"><a href="#网络拓扑汇总" class="headerlink" title="网络拓扑汇总"></a>网络拓扑汇总</h2><p>通过查看硬件信息，以及系统中的网络信息，可以大致得知整体的网络拓扑结构为：  </p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20210731120139.jpg" alt=""></p>
<h2 id="参考资料-amp-相关链接"><a href="#参考资料-amp-相关链接" class="headerlink" title="参考资料&amp;相关链接"></a>参考资料&amp;相关链接</h2><ul>
<li><a href="https://openwrt.org/docs/guide-user/network/vlan/switch_configuration">VLAN - OpenWrt Wiki</a>  </li>
<li><a href="https://openwrt.org/docs/guide-user/network/vlan/switch">Switch Documentation - OpenWrt Wiki</a>  </li>
<li><a href="https://www.mediatek.tw/products/homenetworking/mt7621">MediaTek | MT7621A/N</a>  </li>
<li><a href="https://www.hlktech.com/en/Product/Details/51#datum">HLK-MT7621A Gigabit Gateway Router Module</a>  </li>
<li><a href="https://www.itread01.com/p/202936.html">WNR3500L+TOMATO网路结构分析</a>  </li>
<li><a href="https://openwrt.org/toh/asus/wl-500gp">ASUS WL-500g Premium</a>  </li>
<li><a href="https://wiki.archlinux.org/title/VLAN">VLAN - Arch Wiki</a>  </li>
<li><a href="http://kms2.h3c.com/View.aspx?id=40366">虚拟交换机（vSwitch）原理及配置</a>    </li>
<li><a href="https://en.wikipedia.org/wiki/Bridging_(networking">Bridging (networking) - Wikipedia</a>)  </li>
<li><a href="https://wiki.archlinux.org/title/Network_bridge">Network bridge - ArchWiki</a>  </li>
<li><a href="https://wiki.linuxfoundation.org/networking/bridge">Networking: bridge - Linux Foundation DokuWiki</a>  </li>
<li><a href="https://segmentfault.com/a/1190000009491002">Linux虚拟网络设备之bridge(桥) - SegmentFault 思否</a>  </li>
</ul>
]]></content>
      <categories>
        <category>Openwrt</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Openwrt</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>转一个非常好的Chip8教程</title>
    <url>/2021/10/17/%E8%BD%AC%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%9A%84Chip8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="来由"><a href="#来由" class="headerlink" title="来由"></a>来由</h2><p>又一次打开了很久以前浏览过的一个Chip-8教程，<a href="http://devernay.free.fr/hacks/chip8/C8TECH10.HTM">Cowgod’s Chip-8</a>，该教程的完成日期是 <code>August 30, 1997 06:00:00</code>，比我年龄大一些😂，该网页使用的仅仅是最朴素的白底黑字布局，然而无论是内容质量，还是排版风格，都令人感觉无比舒适，感觉如果有一天这个网站不在了，也是一种遗憾，于是在此备份一下该网页，它的构成是纯html，十分简洁。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- saved from url=(0048)http://devernay.free.fr/hacks/chip8/C8TECH10.HTM --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=windows-1252&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Cowgod&#x27;s Chip-8 Technical Reference<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> <span class="attr">text</span>=<span class="string">&quot;#000000&quot;</span> <span class="attr">link</span>=<span class="string">&quot;#0000FF&quot;</span> <span class="attr">alink</span>=<span class="string">&quot;#00007F&quot;</span> <span class="attr">vlink</span>=<span class="string">&quot;#7F7F7F&quot;</span> <span class="attr">class</span>=<span class="string">&quot;vsc-initialized&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">		Cowgod&#x27;s<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;7&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>Chip-8<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Technical Reference v1.0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;0.0&quot;</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Table of Contents<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>0.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Table of Contents<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.1&quot;</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Using This Document<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#1.0&quot;</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - About Chip-8<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.0&quot;</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Chip-8 Specifications<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.1&quot;</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Memory<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#memmap&quot;</span>&gt;</span>Diagram<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Memory Map<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.2&quot;</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Registers<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.3&quot;</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Keyboard<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#keyboard&quot;</span>&gt;</span>Diagram<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Keyboard Layout<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.4&quot;</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Display<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#dispcoords&quot;</span>&gt;</span>Diagram<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Display Coordinates<span class="tag">&lt;<span class="name">br</span>&gt;</span>	</span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#font&quot;</span>&gt;</span>Listing<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - The Chip-8 Hexadecimal Font<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.5&quot;</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Timers <span class="symbol">&amp;amp;</span> Sound<span class="tag">&lt;<span class="name">br</span>&gt;</span>	</span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#3.0&quot;</span>&gt;</span>3.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Chip-8 Instructions<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#3.1&quot;</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Standard Chip-8 Instructions<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00E0&quot;</span>&gt;</span>00E0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - CLS<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00EE&quot;</span>&gt;</span>00EE<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - RET<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0nnn&quot;</span>&gt;</span>0<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SYS <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#1nnn&quot;</span>&gt;</span>1<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - JP <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2nnn&quot;</span>&gt;</span>2<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - CALL <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#3xkk&quot;</span>&gt;</span>3<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#4xkk&quot;</span>&gt;</span>4<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SNE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#5xy0&quot;</span>&gt;</span>5<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#6xkk&quot;</span>&gt;</span>6<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#7xkk&quot;</span>&gt;</span>7<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - ADD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy0&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy1&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - OR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy2&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - AND V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy3&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - XOR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy4&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - ADD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy5&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SUB V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy6&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SHR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> &#123;, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy7&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SUBN V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xyE&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>E<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SHL V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> &#123;, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&#125;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#9xy0&quot;</span>&gt;</span>9<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SNE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Annn&quot;</span>&gt;</span>A<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD I, <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Bnnn&quot;</span>&gt;</span>B<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - JP V0, <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Cxkk&quot;</span>&gt;</span>C<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - RND V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Dxyn&quot;</span>&gt;</span>D<span class="tag">&lt;<span class="name">em</span>&gt;</span>xyn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - DRW V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>nibble<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Ex9E&quot;</span>&gt;</span>E<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>9E<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SKP V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#ExA1&quot;</span>&gt;</span>E<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SKNP V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx07&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>07<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, DT<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx0A&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0A<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, K<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx15&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>15<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD DT, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx18&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>18<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD ST, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx1E&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>1E<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - ADD I, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx29&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>29<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD F, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx33&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>33<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD B, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx55&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>55<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD [I], V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx65&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>65<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, [I]<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">			<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#3.2&quot;</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Super Chip-48 Instructions<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00Cn&quot;</span>&gt;</span>00C<span class="tag">&lt;<span class="name">em</span>&gt;</span>n<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SCD <span class="tag">&lt;<span class="name">em</span>&gt;</span>nibble<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00FB&quot;</span>&gt;</span>00FB<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SCR<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00FC&quot;</span>&gt;</span>00FC<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SCL<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00FD&quot;</span>&gt;</span>00FD<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - EXIT<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00FE&quot;</span>&gt;</span>00FE<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LOW<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#00FF&quot;</span>&gt;</span>00FF<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - HIGH<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Dxy0&quot;</span>&gt;</span>D<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - DRW V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, 0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx30&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>30<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD HF, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx75&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>75<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD R, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">				<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#Fx85&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>85<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, R<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#4.0&quot;</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Interpreters<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#5.0&quot;</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Credits<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;0.1&quot;</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Using This Document<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		While creating this document, I took every effort to try to make it easy to read, as</span><br><span class="line">		well as easy to find what you&#x27;re looking for.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		In most cases, where a hexadecimal value is given, it is followed by the equivalent</span><br><span class="line">		decimal value in parenthesis. For example, &quot;0x200 (512).&quot;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		In most cases, when a word or letter is italicized, it is referring to a variable</span><br><span class="line">		value, for example, if I write &quot;V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>,&quot; the <span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> reffers to a 4-bit</span><br><span class="line">		value.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span>		</span><br><span class="line">		The most important thing to remember as you read this document is that every <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		link will take you back to the Table Of Contents. Also, links that you have not yet visited</span><br><span class="line">		will appear in <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#0000FF&quot;</span>&gt;</span>blue<span class="tag">&lt;/<span class="name">font</span>&gt;</span>, while links you have used will be</span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#7F7F7F&quot;</span>&gt;</span>gray<span class="tag">&lt;/<span class="name">font</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - About Chip-8<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		Whenever I mention to someone that I&#x27;m writing a Chip-8 interpreter, the response</span><br><span class="line">		is always the same: &quot;What&#x27;s a Chip-8?&quot;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Chip-8 is a simple, interpreted, programming language which was first used on some</span><br><span class="line">		do-it-yourself computer systems in the late 1970s and early 1980s. The COSMAC VIP,</span><br><span class="line">		DREAM 6800, and ETI 660 computers are a few examples. These computers typically</span><br><span class="line">		were designed to use a television as a display, had between 1 and 4K of RAM, and</span><br><span class="line">		used a 16-key hexadecimal keypad for input. The interpreter took up only</span><br><span class="line">		512 bytes of memory, and programs, which were entered into the computer in</span><br><span class="line">		hexadecimal, were even smaller.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		In the early 1990s, the Chip-8 language was revived by a man named Andreas</span><br><span class="line">		Gustafsson. He created a Chip-8 interpreter for the HP48 graphing calculator, </span><br><span class="line">		called Chip-48. The HP48 was lacking a way to easily make fast games at the time,</span><br><span class="line">		and Chip-8 was the answer. Chip-48 later begat Super Chip-48, a modification of</span><br><span class="line">		Chip-48 which allowed higher resolution graphics, as well as other graphical</span><br><span class="line">		enhancements.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Chip-48 inspired a whole new crop of Chip-8 interpreters for various platforms,</span><br><span class="line">		including MS-DOS, Windows 3.1, Amiga, HP48, MSX, Adam, and ColecoVision. I became</span><br><span class="line">		involved with Chip-8 after stumbling upon Paul Robson&#x27;s interpreter on the </span><br><span class="line">		World Wide Web. Shortly after that, I began writing my own Chip-8 interpreter.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		This document is a compilation of all the different sources of information I used</span><br><span class="line">		while programming my interpreter.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2.0&quot;</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Chip-8 Specifications<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		This section describes the Chip-8 memory, registers, display, keyboard, and timers.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2.1&quot;</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Memory<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		The Chip-8 language is capable of accessing up to 4KB (4,096 bytes) of RAM, from </span><br><span class="line">		location 0x000 (0) to 0xFFF (4095). The first 512 bytes, from 0x000 to 0x1FF, are</span><br><span class="line">		where the original interpreter was located, and should not be used by programs.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Most Chip-8 programs start at location 0x200 (512), but some begin at 0x600 (1536).</span><br><span class="line">		Programs beginning at 0x600 are intended for the ETI 660 computer.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;memmap&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Memory<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span> Map:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		+---------------+= 0xFFF (4095) End of Chip-8 RAM<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span>0x200 to 0xFFF|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>Chip-8<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span>Program / Data|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>Space<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		+-<span class="symbol">&amp;nbsp;</span>-<span class="symbol">&amp;nbsp;</span>-<span class="symbol">&amp;nbsp;</span>-<span class="symbol">&amp;nbsp;</span>-<span class="symbol">&amp;nbsp;</span>-<span class="symbol">&amp;nbsp;</span>-<span class="symbol">&amp;nbsp;</span>-+= 0x600 (1536) Start of ETI 660 Chip-8 programs<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		+---------------+= 0x200 (512) Start of most Chip-8 programs<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span>0x000 to 0x1FF|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span>Reserved for<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		|<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>interpreter<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>|<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		+---------------+= 0x000 (0) Start of Chip-8 RAM<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2.2&quot;</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Registers<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		Chip-8 has 16 general purpose 8-bit registers, usually referred to as</span><br><span class="line">		V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, where <span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is a hexadecimal digit (0 through F). There is also</span><br><span class="line">		a 16-bit register called I. This register is generally used to store </span><br><span class="line">		memory addresses, so only the lowest (rightmost) 12 bits are usually used.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The VF register should not be used by any program, as it is used as a flag by</span><br><span class="line">		some instructions. See section 3.0, <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#3.0&quot;</span>&gt;</span>Instructions<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		for details.<span class="tag">&lt;<span class="name">br</span>&gt;</span>		</span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Chip-8 also has two special purpose 8-bit registers, for the delay and sound timers.</span><br><span class="line">		When these registers are non-zero, they are automatically decremented at a rate </span><br><span class="line">		of 60Hz. See the section 2.5, <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.5&quot;</span>&gt;</span>Timers <span class="symbol">&amp;amp;</span> Sound<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, for more</span><br><span class="line">		information on these.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		There are also some &quot;pseudo-registers&quot; which are not accessable from Chip-8</span><br><span class="line">		programs. The program counter (PC) should be 16-bit, and is used to store the</span><br><span class="line">		currently executing address. The stack pointer (SP) can be 8-bit, it is used to</span><br><span class="line">		point to the topmost level of the stack.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The stack is an array of 16 16-bit values, used to store the address that</span><br><span class="line">		the interpreter shoud return to when finished with a subroutine. Chip-8 allows</span><br><span class="line">		for up to 16 levels of nested subroutines.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2.3&quot;</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Keyboard<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;keyboard&quot;</span>&gt;</span>The<span class="tag">&lt;/<span class="name">a</span>&gt;</span> computers which originally used the Chip-8 Language had a 16-key hexadecimal</span><br><span class="line">		keypad with the following layout:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>1<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>2<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>3<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>C<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>4<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>5<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>6<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>D<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>7<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>8<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>9<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>E<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>A<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>0<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>B<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>F<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		This layout must be mapped into various other configurations to fit the keyboards</span><br><span class="line">		of today&#x27;s platforms.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2.4&quot;</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Display<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;dispcoords&quot;</span>&gt;</span>The<span class="tag">&lt;/<span class="name">a</span>&gt;</span> original implementation of the Chip-8 language used a 64x32-pixel monochrome display</span><br><span class="line">		with this format:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;128&quot;</span> <span class="attr">height</span>=<span class="string">&quot;64&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>&gt;</span> </span><br><span class="line">					<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>&gt;</span>(0,0)<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;top&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>(63,0)<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;bottom&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>&gt;</span>(0,31)<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">valign</span>=<span class="string">&quot;bottom&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span>(63,31)<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Some other interpreters, most notably the one on the ETI 660, also had 64x48 and </span><br><span class="line">		64x64 modes. To my knowledge, no current interpreter supports these modes. More </span><br><span class="line">		recently, Super Chip-48, an interpreter for the HP48 calculator, added a </span><br><span class="line">		128x64-pixel mode. This mode is now supported by most of the interpreters on other</span><br><span class="line">		platforms.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Chip-8 draws graphics on screen through the use of sprites. A sprite is a group</span><br><span class="line">		of bytes which are a binary representation of the desired picture. Chip-8 sprites</span><br><span class="line">		may be up to 15 bytes, for a possible sprite size of 8x15.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Programs may also refer to a group of sprites representing the hexadecimal </span><br><span class="line">		digits 0 through F. These sprites are 5 bytes long, or 8x5 pixels. The data</span><br><span class="line">		should be stored in the interpreter area of Chip-8 memory (0x000 to 0x1FF). </span><br><span class="line">		Below is a listing of each character&#x27;s bytes, in binary and hexadecimal:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;font&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;0&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;1&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span>**<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span>***<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								00100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								01100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								01110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0x20<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x60<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x20<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x20<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x70<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;2&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;3&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;4&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;5&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;6&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;7&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span>*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span>*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								01000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								01000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x20<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x40<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x40<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;8&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;9&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								00010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x10<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;A&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;B&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								***<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								***<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								***<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xE0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xE0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xE0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;C&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;D&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								***<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>*<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								***<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10010000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11100000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xE0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x90<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xE0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;E&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>		</span><br><span class="line">					<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&quot;F&quot;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Binary<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Hex<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>			</span><br><span class="line">						<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								****<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								*<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								11110000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								10000000<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0xF0<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">								0x80<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>		</span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Timers <span class="symbol">&amp;amp;</span> Sound<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		Chip-8 provides 2 timers, a delay timer and a sound timer.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The delay timer is active whenever the delay timer register (DT) is non-zero.</span><br><span class="line">		This timer does nothing more than subtract 1 from the value of DT at a rate</span><br><span class="line">		of 60Hz. When DT reaches 0, it deactivates.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The sound timer is active whenever the sound timer register (ST) is non-zero.</span><br><span class="line">		This timer also decrements at a rate of 60Hz, however, as long as ST&#x27;s value is</span><br><span class="line">		greater than zero, the Chip-8 buzzer will sound. When ST reaches zero, the sound</span><br><span class="line">		timer deactivates.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The sound produced by the Chip-8 interpreter has only one tone. The frequency</span><br><span class="line">		of this tone is decided by the author of the interpreter.<span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span>3.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Chip-8 Instructions<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		The original implementation of the Chip-8 language includes 36 different</span><br><span class="line">		instructions, including math, graphics, and flow control functions.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Super Chip-48 added an additional	 10 instructions, for a total of 46.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		All instructions are 2 bytes long and are stored most-significant-byte first.</span><br><span class="line">		In memory, the first byte of each instruction should be located at an even</span><br><span class="line">		addresses. If a program includes sprite data, it should be padded so any</span><br><span class="line">		instructions following it will be properly situated in RAM.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		This document does not yet contain descriptions of the Super Chip-48 instructions.</span><br><span class="line">		They are, however, listed below.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		In these listings, the following variables are used:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span> or <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - A 12-bit value, the lowest 12 bits of the instruction<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">em</span>&gt;</span>n<span class="tag">&lt;/<span class="name">em</span>&gt;</span> or <span class="tag">&lt;<span class="name">em</span>&gt;</span>nibble<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - A 4-bit value, the lowest 4 bits of the instruction<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - A 4-bit value, the lower 4 bits of the high byte of the instruction<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - A 4-bit value, the upper 4 bits of the low byte of the instruction<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span> or <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - An 8-bit value, the lowest 8 bits of the instruction<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Standard Chip-8 Instructions<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span>		</span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;0nnn&quot;</span>&gt;</span>0<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SYS <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Jump to a machine code routine at <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		This instruction is only used on the old computers on which Chip-8 was originally implemented. It is ignored by modern interpreters.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00E0&quot;</span>&gt;</span>00E0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - CLS<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Clear the display.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00EE&quot;</span>&gt;</span>00EE<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - RET<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Return from a subroutine.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter sets the program counter to the address at the top of the</span><br><span class="line">		stack, then subtracts 1 from the stack pointer.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;1nnn&quot;</span>&gt;</span>1<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - JP <span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Jump to location <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter sets the program counter to <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;2nnn&quot;</span>&gt;</span>2<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - CALL <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Call subroutine at <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter increments the stack pointer, then puts the current PC on</span><br><span class="line">		the top of the stack. The PC is then set to <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;3xkk&quot;</span>&gt;</span>3<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Skip next instruction if V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter compares register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> to <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, and if they are </span><br><span class="line">		equal, increments the program counter by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;4xkk&quot;</span>&gt;</span>4<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SNE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Skip next instruction if V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> != <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter compares register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> to <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, and if they are</span><br><span class="line">		not equal, increments the program counter by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;5xy0&quot;</span>&gt;</span>5<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Skip next instruction if V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter compares register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> to register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, and if </span><br><span class="line">		they are equal, increments the program counter by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;6xkk&quot;</span>&gt;</span>6<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter puts the value <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span> into register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;7xkk&quot;</span>&gt;</span>7<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - ADD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> + <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Adds the value <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span> to the value of register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, then stores the result in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.</span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy0&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Stores the value of register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> in register V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy1&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - OR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set Vx = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> OR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Performs a bitwise OR on the values of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> and V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, then stores the result in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>. A</span><br><span class="line">		bitwise OR compares the corrseponding bits from two values, and if either bit</span><br><span class="line">		is 1, then the same bit in the result is also 1. Otherwise, it is 0. <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy2&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - AND V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> AND V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Performs a bitwise AND on the values of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> and V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, then stores the result in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>. A</span><br><span class="line">		bitwise AND compares the corrseponding bits from two values, and if both bits</span><br><span class="line">		are 1, then the same bit in the result is also 1. Otherwise, it is 0. <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy3&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - XOR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> XOR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Performs a bitwise exclusive OR on the values of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> and V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, then stores the</span><br><span class="line">		result in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>. An exclusive OR compares the corrseponding bits from two values,</span><br><span class="line">		and if the bits are not both the same, then the corresponding bit in the result</span><br><span class="line">		is set to 1. Otherwise, it is 0. <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy4&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - ADD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> + V<span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span>y, set VF = carry.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The values of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> and V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> are added together. If the result is greater than 8 bits</span><br><span class="line">		(i.e., <span class="symbol">&amp;gt;</span> 255,) VF is set to 1, otherwise 0. Only the lowest 8 bits of the result</span><br><span class="line">		are kept, and stored in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy5&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SUB V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, set VF = NOT borrow.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		If V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> <span class="symbol">&amp;gt;</span> V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, then VF is set to 1, otherwise 0. Then V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is subtracted from V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>,</span><br><span class="line">		and the results stored in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy6&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SHR V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> &#123;, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> SHR 1.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		If the least-significant bit of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is 1, then VF is set to 1, otherwise 0. Then</span><br><span class="line">		V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is divided by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xy7&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SUBN V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> - V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, set VF = NOT borrow.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		If V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> <span class="symbol">&amp;gt;</span> V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, then VF is set to 1, otherwise 0. Then V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is subtracted from V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>,</span><br><span class="line">		and the results stored in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;8xyE&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>E<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SHL V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> &#123;, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> SHL 1.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		If the most-significant bit of Vx is 1, then VF is set to 1, otherwise to 0. Then</span><br><span class="line">		V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is multiplied by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;9xy0&quot;</span>&gt;</span>9<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SNE V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Skip next instruction if V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> != V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The values of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> and V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span> are compared, and if they are not equal, the program</span><br><span class="line">		counter is increased by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Annn&quot;</span>&gt;</span>A<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD I, <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set I = <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The value of register I is set to <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Bnnn&quot;</span>&gt;</span>B<span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - JP V0, <span class="tag">&lt;<span class="name">em</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Jump to location <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span> + V0.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The program counter is set to <span class="tag">&lt;<span class="name">em</span>&gt;</span>nnn<span class="tag">&lt;/<span class="name">em</span>&gt;</span> plus the value of V0.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Cxkk&quot;</span>&gt;</span>C<span class="tag">&lt;<span class="name">em</span>&gt;</span>xkk<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - RND V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = random <span class="tag">&lt;<span class="name">em</span>&gt;</span>byte<span class="tag">&lt;/<span class="name">em</span>&gt;</span> AND <span class="tag">&lt;<span class="name">em</span>&gt;</span>kk<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter generates a random number from 0 to 255, which is then ANDed</span><br><span class="line">		with the value kk. The results are stored in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>. See instruction <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy2&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		for more information on AND.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Dxyn&quot;</span>&gt;</span>D<span class="tag">&lt;<span class="name">em</span>&gt;</span>xyn<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - DRW V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, <span class="tag">&lt;<span class="name">em</span>&gt;</span>nibble<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Display <span class="tag">&lt;<span class="name">em</span>&gt;</span>n<span class="tag">&lt;/<span class="name">em</span>&gt;</span>-byte sprite starting at memory location I at (V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>), set VF = collision.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter reads <span class="tag">&lt;<span class="name">em</span>&gt;</span>n<span class="tag">&lt;/<span class="name">em</span>&gt;</span> bytes from memory, starting at the address stored in</span><br><span class="line">		I. These bytes are then displayed as sprites on screen at coordinates (V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>y<span class="tag">&lt;/<span class="name">em</span>&gt;</span>).</span><br><span class="line">		Sprites are XORed onto the existing screen. If this causes any pixels to be</span><br><span class="line">		erased, VF is set to 1, otherwise it is set to 0. If the sprite is positioned</span><br><span class="line">		so part of it is outside the coordinates of the display, it wraps around to</span><br><span class="line">		the opposite side of the screen. See instruction <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#8xy3&quot;</span>&gt;</span>8<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span> for</span><br><span class="line">		more information on XOR, and section 2.4, <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/2.4&quot;</span>&gt;</span>Display<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, for</span><br><span class="line">		more information on the Chip-8 screen and sprites.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Ex9E&quot;</span>&gt;</span>E<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>9E<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SKP V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Skip next instruction if key with the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is pressed.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Checks the keyboard, and if the key corresponding to the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is currently</span><br><span class="line">		in the down position, PC is increased by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;ExA1&quot;</span>&gt;</span>E<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>A1<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SKNP V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Skip next instruction if key with the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is not pressed.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Checks the keyboard, and if the key corresponding to the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> is currently</span><br><span class="line">		in the up position, PC is increased by 2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx07&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>07<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, DT<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> = delay timer value.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The value of DT is placed into V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx0A&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0A<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, K<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Wait for a key press, store the value of the key in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		All execution stops until a key is pressed, then the value of that key</span><br><span class="line">		is stored in V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx15&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>15<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD DT, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set delay timer = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		DT is set equal to the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx18&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>18<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD ST, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set sound timer = V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		ST is set equal to the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx1E&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>1E<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - ADD I, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set I = I + V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The values of I and V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> are added, and the results are stored in I.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx29&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>29<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD F, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Set I = location of sprite for digit V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The value of I is set to the location for the hexadecimal sprite corresponding to</span><br><span class="line">		the value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>. See section 2.4, <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#2.4&quot;</span>&gt;</span>Display<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, for more information</span><br><span class="line">		on the Chip-8 hexadecimal font.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx33&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>33<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD B, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Store BCD representation of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> in memory locations I, I+1, and I+2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter takes the decimal value of V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, and places the hundreds</span><br><span class="line">		digit in memory at location in I, the tens digit at location I+1, and the</span><br><span class="line">		ones digit at location I+2.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx55&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>55<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD [I], V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Store registers V0 through V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> in memory starting at location I.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter copies the values of registers V0 through V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> into memory,</span><br><span class="line">		starting at the address in I.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx65&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>65<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, [I]<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		Read registers V0 through V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span> from memory starting at location I.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		The interpreter reads values from memory starting at location I into registers</span><br><span class="line">		V0 through V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;3.2&quot;</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Super Chip-48 Instructions<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span>	</span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00Cn&quot;</span>&gt;</span>00C<span class="tag">&lt;<span class="name">em</span>&gt;</span>n<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SCD <span class="tag">&lt;<span class="name">em</span>&gt;</span>nibble<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00FB&quot;</span>&gt;</span>00FB<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SCR<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00FC&quot;</span>&gt;</span>00FC<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - SCL<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00FD&quot;</span>&gt;</span>00FD<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - EXIT<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00FE&quot;</span>&gt;</span>00FE<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LOW<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;00FF&quot;</span>&gt;</span>00FF<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - HIGH<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Dxy0&quot;</span>&gt;</span>D<span class="tag">&lt;<span class="name">em</span>&gt;</span>xy<span class="tag">&lt;/<span class="name">em</span>&gt;</span>0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - DRW V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, V<span class="tag">&lt;<span class="name">strong</span>&gt;</span>y<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>, 0<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx30&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>30<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD HF, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx75&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>75<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD R, V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;Fx85&quot;</span>&gt;</span>F<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>85<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - LD V<span class="tag">&lt;<span class="name">em</span>&gt;</span>x<span class="tag">&lt;/<span class="name">em</span>&gt;</span>, R<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">							<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span>4.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Interpreters<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		Below is a list of every Chip-8 interpreter I could find on the World Wide Web:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;3&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Version<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Author<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Platform(s)<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Chip-48<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>2.20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Anrdreas Gustafsson<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>HP48<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Chip8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Paul Robson<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>DOS<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Chip-8 Emulator<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>David Winter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>DOS<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>CowChip<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Thomas P. Greene<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Windows 3.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>DREAM MON<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Paul Hayter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Amiga<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Super Chip-48<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Based on Chip-48, modified by Erik Bryntse<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>HP48<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Vision-8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>Marcel de Kogel<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>DOS, Adam, MSX, ColecoVision<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;5.0&quot;</span>&gt;</span>5.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - Credits<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#0.0&quot;</span>&gt;</span>[TOC]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">		This document was compiled by <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:cowgod@rockpile.com&quot;</span>&gt;</span>Thomas P. Greene<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">strong</span>&gt;</span>Sources include:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>My own hacking.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>E-mail between David Winter and myself.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>David Winter&#x27;s <span class="tag">&lt;<span class="name">u</span>&gt;</span>Chip-8 Emulator<span class="tag">&lt;/<span class="name">u</span>&gt;</span> documentation.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>Christian Egeberg&#x27;s <span class="tag">&lt;<span class="name">u</span>&gt;</span>Chipper<span class="tag">&lt;/<span class="name">u</span>&gt;</span> documentation.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>Marcel de Kogel&#x27;s <span class="tag">&lt;<span class="name">u</span>&gt;</span>Vision-8<span class="tag">&lt;/<span class="name">u</span>&gt;</span> source code.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>Paul Hayter&#x27;s <span class="tag">&lt;<span class="name">u</span>&gt;</span>DREAM MON<span class="tag">&lt;/<span class="name">u</span>&gt;</span> documentation.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>Paul Robson&#x27;s web page.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>Andreas Gustafsson&#x27;s <span class="tag">&lt;<span class="name">u</span>&gt;</span>Chip-48<span class="tag">&lt;/<span class="name">u</span>&gt;</span> documentation.<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">tt</span>&gt;</span>August 30, 1997 06:00:00<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Chip</tag>
        <tag>Emulator</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Network Namespace</title>
    <url>/2021/11/09/Linux%20Network%20Namespace/</url>
    <content><![CDATA[<h2 id="Linux命名空间"><a href="#Linux命名空间" class="headerlink" title="Linux命名空间"></a>Linux命名空间</h2><p>Linux命名空间是一种资源隔离机制，Docker for Linux就是主要利用Linux命名空间实现资源隔离的。 </p>
<p>目前有八种Linux命名空间。下表列出了这些命名空间及其隔离的资源类型，Flag是用于一些系统调用的标志，Page指示如何找到相关命名空间的详细文档。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Namespace</th>
<th>Flag</th>
<th>Page</th>
<th>Isolates</th>
</tr>
</thead>
<tbody>
<tr>
<td>Cgroup</td>
<td>CLONE_NEWCGROUP</td>
<td>cgroup_namespaces(7)</td>
<td>Cgroup root directory</td>
</tr>
<tr>
<td>IPC</td>
<td>CLONE_NEWIPC</td>
<td>ipc_namespaces(7)</td>
<td>System V IPC,</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>POSIX message queues</td>
</tr>
<tr>
<td>Network</td>
<td>CLONE_NEWNET</td>
<td>network_namespaces(7)</td>
<td>Network devices,</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>stacks, ports, etc.</td>
</tr>
<tr>
<td>Mount</td>
<td>CLONE_NEWNS</td>
<td>mount_namespaces(7)</td>
<td>Mount points</td>
</tr>
<tr>
<td>PID</td>
<td>CLONE_NEWPID</td>
<td>pid_namespaces(7)</td>
<td>Process IDs</td>
</tr>
<tr>
<td>Time</td>
<td>CLONE_NEWTIME</td>
<td>time_namespaces(7)</td>
<td>Boot and monotonic clocks</td>
</tr>
<tr>
<td>User</td>
<td>CLONE_NEWUSER</td>
<td>user_namespaces(7)</td>
<td>User and group IDs</td>
</tr>
<tr>
<td>UTS</td>
<td>CLONE_NEWUTS</td>
<td>uts_namespaces(7)</td>
<td>Hostname and NIS domain name</td>
</tr>
</tbody>
</table>
</div>
<h2 id="网络命名空间与veth"><a href="#网络命名空间与veth" class="headerlink" title="网络命名空间与veth"></a>网络命名空间与<code>veth</code></h2><p>本文重点探究Linux网络命名空间，Linux网络命名空间可以隔离网络设备、套接字（端口号）、网络协议栈、路由表、防火墙规则等网络资源。也可以为每个网络命名空间提供不同的DNS配置，比如假如存在一个名为 <code>nstest</code> 的网络命名空间，则对于<code>nstest</code>, DNS解析将会首先参照 <code>/etc/netns/nstest/resolv.conf</code> 中的DNS配置，其次才是全局DNS配置 <code>/etc/resolv.conf</code>。</p>
<p>虚拟网络设备 <code>veth</code> 可用于连接两个网络命名空间，可以为隔离于网络命名空间中的进程提供访问外部网络的能力。<br>虚拟网络设备 <code>veth</code> 总是成对出现的，两个 <code>veth</code> 一端互相连接在一起，另一端与网络协议栈相连，一个 <code>veth</code> 收到的数据包会立即被转发到与之相连的 <code>veth</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+----------------------------------------------------------------+</span><br><span class="line">|                                                                |</span><br><span class="line">|       +------------------------------------------------+       |</span><br><span class="line">|       |             Newwork Protocol Stack             |       |</span><br><span class="line">|       +------------------------------------------------+       |</span><br><span class="line">|              ↑               ↑               ↑                 |</span><br><span class="line">|..............|...............|...............|.................|</span><br><span class="line">|              ↓               ↓               ↓                 |</span><br><span class="line">|        +----------+    +-----------+   +-----------+           |</span><br><span class="line">|        |   eth0   |    |   veth0   |   |   veth1   |           |</span><br><span class="line">|        +----------+    +-----------+   +-----------+           |</span><br><span class="line">|192.168.1.11  ↑               ↑               ↑                 |</span><br><span class="line">|              |               +---------------+                 |</span><br><span class="line">|              |         192.168.2.11     192.168.2.1            |</span><br><span class="line">+--------------|-------------------------------------------------+</span><br><span class="line">               ↓</span><br><span class="line">         Physical Network</span><br></pre></td></tr></table></figure>
<p>网络命名空间的介绍参考<a href="https://man7.org/linux/man-pages/man7/network_namespaces.7.html">network_namespaces(7)</a>，网络命名空间的的创建、删除与操纵，参考<a href="https://man7.org/linux/man-pages/man8/ip-netns.8.html">ip-netns(8)</a>，<code>veth</code>的介绍参考<a href="https://man7.org/linux/man-pages/man4/veth.4.html">veth(4)</a>和<a href="https://programming.vip/docs/veth-of-linux-virtual-network-device.html">veth of Linux Virtual Network Device</a>。</p>
<h2 id="网络命名空间相关操作"><a href="#网络命名空间相关操作" class="headerlink" title="网络命名空间相关操作"></a>网络命名空间相关操作</h2><p>可以用 <code>ip netns</code> 进行网络命名空间的创建、删除、在特定网络命名空间执行进程等操作，用 <code>ip link</code> 可以进行在特定命名空间创建接口，为接口变更命名空间等操作。下面给出几个示例：</p>
<ul>
<li>创建网络命名空间 <code>nstest</code>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns add nstest</span><br></pre></td></tr></table></figure></li>
<li>删除命名空间 <code>nstest</code>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns del nstest</span><br></pre></td></tr></table></figure></li>
<li>在网络命名空间 <code>nstest</code> 中执行命令  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns <span class="built_in">exec</span> nstest COMMAND</span><br></pre></td></tr></table></figure></li>
<li>创建虚拟网络接口对 <code>veth0s0</code> 和 <code>veth0s1</code>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip <span class="built_in">link</span> add veth0s0 <span class="built_in">type</span> veth peer veth0s1</span><br></pre></td></tr></table></figure></li>
<li>将虚拟网络接口 <code>veth0s1</code> 移动至网络命名空间 <code>nstest</code>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一旦将网络接口移动至 nstest ，就无法在默认网络命名空间中看到该网络接口</span></span><br><span class="line"><span class="comment"># 因为一个网络接口只能属于一个网络命名空间，物理网络接口也是如此！！！</span></span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> veth0s1 netns nstest</span><br></pre></td></tr></table></figure></li>
<li>将虚拟网络接口 <code>veth0s1</code> 移动至默认网络命名空间    <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 由于网络接口 veth0s1 属于 nstest ，所以需要在该网络命名空间中操作</span></span><br><span class="line"><span class="comment"># 因为各个网络命名空间中的接口时相互隔离的</span></span><br><span class="line"><span class="comment"># 其中 1 指的是默认网络命名空间的 id </span></span><br><span class="line">ip netns <span class="built_in">exec</span> nstest ip <span class="built_in">link</span> <span class="built_in">set</span> veth0s1 netns 1</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="实验测试"><a href="#实验测试" class="headerlink" title="实验测试"></a>实验测试</h2><h3 id="实验一：利用veth连通两个网络命名空间"><a href="#实验一：利用veth连通两个网络命名空间" class="headerlink" title="实验一：利用veth连通两个网络命名空间"></a>实验一：利用<code>veth</code>连通两个网络命名空间</h3><p>大致流程为：</p>
<ul>
<li>创建新的网络命名空间<code>nstest</code></li>
<li>利用 <code>veth</code> 虚拟网络接口对连接默认网络命名空间和 <code>nstest</code></li>
<li>为 <code>veth</code> 配置IP进行测试</li>
</ul>
<p>配置命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns add nstest</span><br><span class="line">ip <span class="built_in">link</span> add veth0s0 <span class="built_in">type</span> veth peer veth0s1</span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> veth0s1 netns nstest</span><br><span class="line">ip <span class="built_in">link</span> <span class="built_in">set</span> veth0s0 up</span><br><span class="line">ip addr add 192.168.11.100/24 dev veth0s0</span><br><span class="line">ip netns <span class="built_in">exec</span> nstest ip <span class="built_in">link</span> <span class="built_in">set</span> veth0s1 up</span><br><span class="line">ip netns <span class="built_in">exec</span> nstest ip addr add 192.168.11.101/24 dev veth0s1</span><br></pre></td></tr></table></figure>
<p>配置好之后，可以使用 <code>ip addr</code> 确认一下网络情况：  </p>
<p>下图是我电脑上的情况，可以看到 <code>nstest</code> 只存在 <code>lo</code> 和 <code>veth0s1</code>，它与默认网络命名空间的接口是互相隔离的。<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211109210025.png" alt=""></p>
<p>然后就可以实现默认网络命名空间与 <code>nstest</code> 之间的通信。</p>
<p>可以通过ping测试：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping 192.168.11.101</span><br><span class="line">ip netns <span class="built_in">exec</span> nstest ping 192.168.11.100</span><br></pre></td></tr></table></figure></p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211109210546.png" alt=""></p>
<h3 id="实验一拓展配置"><a href="#实验一拓展配置" class="headerlink" title="实验一拓展配置"></a>实验一拓展配置</h3><p>首先介绍一下如何捕获经过网络接口的数据包，在Linux上可以使用 <code>tcpdump</code> 捕获数据包，如果只是想要捕获特定接口的数据包，可以使用 <code>tcpdump -lni interface_name</code>。</p>
<p>下面是实验一进行ping测试的抓包截图：<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211109205447.png" alt=""></p>
<p>现在<code>nstest</code>和默认网络命名空间可以互相ping通了，那么<code>nstest</code>能否访问外部网络呢？结果是不可以。</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211109210749.png" alt=""></p>
<p>首先，如果想要访问 <code>baidu.com</code>，需要配置好网关，并且，由于我们希望访问域名，也就需要配置好DNS解析服务。<br>那么，新建的网络命名空间中的网关和DNS配置又是怎么的呢？可以通过 <code>ip route</code> 查看网关。而DNS配置仍是通过 <code>/etc/resolv.conf</code> 文件控制，如果仅仅使用 <code>/etc/resolv.conf</code> 控制DNS，那么理论上 <code>nstest</code> 中的DNS配置是与默认网络命名空间相同的，不过如今大部分Linux发行版默认情况下都默认安装了网络服务相关守护进程，Ubuntu Server 20.04中使用的是netplan服务，所以说了这么多，我也不太清楚<code>nstest</code>中默认的DNS配置是怎么的，可能与网络接口的IP地址配置有关系，如果采用DHCP，应该会根据DHCP服务器返回的结果设置DNS，具体可以查看netplan配置文件。</p>
<p>首先查看 <code>nstest</code> 的网关配置，下图顺便展示了默认网络命名空间的路由信息，用于突出网络命名空间之间路由表的隔离性：<br><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211109212031.png" alt=""></p>
<p>可以看到， <code>nstest</code> 中未配置默认路由，所以自然无法访问 <code>baidu.com</code> 了，下面为它配置默认路由，这里我们将 <code>veth0s0</code> 的IP地址 <code>192.168.11.100</code> 设为 <code>nstest</code> 中的默认网关。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip netns <span class="built_in">exec</span> nstest ip route add default via 192.168.11.100</span><br></pre></td></tr></table></figure>
<p>然后检查 <code>nstest</code> 的路由表就会看到默认路由，那么我们现在ping <code>114.114.114.114</code> 和 <code>baidu.com</code>，看能否通过 <code>tcpdump</code> 抓到包。</p>
<p>可以看到发往 <code>114.114.114.114</code> 的 <code>ICMP echo request</code>，但是没有回应，也有发往 <code>127.0.0.53</code> 的DNS查询，同样没有回应。（DNS查询应该和DNS配置有关系，这里不深究了）</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211109213147.png" alt=""></p>
<p>这里要关注的一点是，<code>veth0s0</code> 收到了来自 <code>nstest</code> 中 <code>veth0s1</code> 的数据包，如果进一步配置NAT，<code>veth0s1</code> 就可以访问外部网络了。其实使用桥接网络模式的docker容器就是利用类似的技术访问外部网络的，只不过docekr容器并非直接配置NAT，而是将对端veth接入了docker网桥，再进一步通过网桥访问外部网络。</p>
<p>接下来，使用iptables为配置NAT：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">IFACE=ens33 <span class="comment"># 可以访问外网的接口名称</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.11.0/24 -j MASQUERADE</span><br><span class="line">iptables -A FORWARD -i <span class="variable">$&#123;IFACE&#125;</span> -o veth0s0 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o <span class="variable">$&#123;IFACE&#125;</span> -i veth0s0 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>然后 <code>nstest</code> 就可以访问外部网络了。</p>
<h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><p><a href="https://man7.org/linux/man-pages/man7/namespaces.7.html">namespaces(7) — Linux manual page</a><br><a href="https://man7.org/linux/man-pages/man7/network_namespaces.7.html">network_namespaces(7) — Linux manual page</a><br><a href="https://man7.org/linux/man-pages/man8/ip-netns.8.html">ip-netns(8) — Linux manual page</a><br><a href="https://man7.org/linux/man-pages/man4/veth.4.html">veth(4) — Linux manual page</a><br><a href="https://programming.vip/docs/veth-of-linux-virtual-network-device.html">veth of Linux Virtual Network Device</a><br><a href="https://gist.github.com/dpino/6c0dca1742093346461e11aa8f608a99">Setup a network namespace with Internet access</a><br><a href="https://danielmiessler.com/study/tcpdump/">A tcpdump Tutorial with Examples — 50 Ways to Isolate Traffic</a>  </p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>[转载]How to Build a GCC Cross-Compiler</title>
    <url>/2021/11/20/%5B%E8%BD%AC%E8%BD%BD%5DHow%20to%20Build%20a%20GCC%20Cross-Compiler/</url>
    <content><![CDATA[<p>原文链接：<a href="https://preshing.com/20141119/how-to-build-a-gcc-cross-compiler/">https://preshing.com/20141119/how-to-build-a-gcc-cross-compiler/</a></p>
<hr>
<p>GCC is not just a compiler. It’s an open source project that lets you build all kinds of compilers. Some compilers support multithreading; some support shared libraries; some support <a href="http://wiki.gentoo.org/wiki/Multilib">multilib</a>. It all depends on how you configure the compiler before building it.</p>
<p>This guide will demonstrate how to build a <strong>cross-compiler</strong>, which is a compiler that builds programs for another machine. All you need is a Unix-like environment with a recent version of GCC already installed.</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211121135911.png" alt=""></p>
<p>In this guide, I’ll use Debian Linux to build a full C++ cross-compiler for <strong>AArch64</strong>, a 64-bit instruction set available in the latest ARM processors. I don’t actually own an AArch64 device – I just wanted an AArch64 compiler to verify <a href="https://gcc.gnu.org/bugzilla/show_bug.cgi?id=59448">this bug</a>.</p>
<h2 id="Required-Packages"><a href="#Required-Packages" class="headerlink" title="Required Packages"></a>Required Packages</h2><p>Starting with a clean Debian system, you must first install a few packages:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install g++ make gawk </span><br></pre></td></tr></table></figure>
<p>Everything else will be built from source. Create a new directory somewhere, and download the following source packages. (If you’re following this guide at a later date, there will be more recent releases of each package available. Check for newer releases by pasting each URL into your browser without the filename. For example: <a href="http://ftpmirror.gnu.org/binutils/">http://ftpmirror.gnu.org/binutils/</a>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ wget http://ftpmirror.gnu.org/binutils/binutils-2.24.tar.gz</span><br><span class="line">$ wget http://ftpmirror.gnu.org/gcc/gcc-4.9.2/gcc-4.9.2.tar.gz</span><br><span class="line">$ wget https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.17.2.tar.xz</span><br><span class="line">$ wget http://ftpmirror.gnu.org/glibc/glibc-2.20.tar.xz</span><br><span class="line">$ wget http://ftpmirror.gnu.org/mpfr/mpfr-3.1.2.tar.xz</span><br><span class="line">$ wget http://ftpmirror.gnu.org/gmp/gmp-6.0.0a.tar.xz</span><br><span class="line">$ wget http://ftpmirror.gnu.org/mpc/mpc-1.0.2.tar.gz</span><br><span class="line">$ wget ftp://gcc.gnu.org/pub/gcc/infrastructure/isl-0.12.2.tar.bz2</span><br><span class="line">$ wget ftp://gcc.gnu.org/pub/gcc/infrastructure/cloog-0.18.1.tar.gz </span><br></pre></td></tr></table></figure>
<p>The first four packages – <a href="http://www.gnu.org/software/binutils/">Binutils</a>, <a href="https://gcc.gnu.org/">GCC</a>, the <a href="https://www.kernel.org/">Linux kernel</a> and <a href="http://www.gnu.org/software/libc/">Glibc</a> – are the main ones. We could have installed the next three packages in binary form using our system’s package manager instead, but that tends to provide older versions. The last two packages, ISL and CLooG, are optional, but they enable a few more optimizations in the compiler we’re about to build.</p>
<h2 id="How-The-Pieces-Fit-Together"><a href="#How-The-Pieces-Fit-Together" class="headerlink" title="How The Pieces Fit Together"></a>How The Pieces Fit Together</h2><p>By the time we’re finished, we will have built each of the following programs and libraries. First, we’ll build the tools on the left, then we’ll use those tools to build the programs and libraries on the right. We won’t actually build the target system’s Linux kernel, but we do need the kernel header files in order to build the target system’s standard C library.</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211121140001.png" alt=""></p>
<p>The compilers on the left will invoke the assembler &amp; linker as part of their job. All the other packages we downloaded, such as MPFR, GMP and MPC, will be linked into the compilers themselves.</p>
<p>The diagram on the right represents a sample program, <code>a.out</code>, running on the target OS, built using the cross compiler and linked with the target system’s standard C and C++ libraries. The standard C++ library makes calls to the standard C library, and the C library makes direct system calls to the AArch64 Linux kernel.</p>
<p>Note that instead of using Glibc as the standard C library implementation, we could have used <a href="https://sourceware.org/newlib/">Newlib</a>, an alternative implementation. Newlib is a popular C library implementation for embedded devices. Unlike Glibc, Newlib doesn’t require a complete OS on the target system – just a thin hardware abstraction layer called <a href="http://ieee.uwaterloo.ca/coldfire/gcc-doc/docs/porting_1.html">Libgloss</a>. Newlib doesn’t have regular releases; instead, you’re meant to pull the source directly from the <a href="https://sourceware.org/newlib/">Newlib CVS repository</a>. One limitation of Newlib is that currently, it doesn’t seem to support building multithreaded programs for AArch64. That’s why I chose not to use it here.</p>
<h2 id="Build-Steps"><a href="#Build-Steps" class="headerlink" title="Build Steps"></a>Build Steps</h2><p>Extract all the source packages.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ for f in *.tar*; do tar xf $f; done </span><br></pre></td></tr></table></figure>
<p>Create symbolic links from the GCC directory to some of the other directories. These five packages are dependencies of GCC, and when the symbolic links are present, GCC’s build script <a href="https://gcc.gnu.org/install/download.html">will build them automatically</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd gcc-4.9.2</span><br><span class="line">$ ln -s ../mpfr-3.1.2 mpfr</span><br><span class="line">$ ln -s ../gmp-6.0.0 gmp</span><br><span class="line">$ ln -s ../mpc-1.0.2 mpc</span><br><span class="line">$ ln -s ../isl-0.12.2 isl</span><br><span class="line">$ ln -s ../cloog-0.18.1 cloog</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<p>Choose an installation directory, and make sure you have write permission to it. In the steps that follow, I’ll install the new toolchain to <code>/opt/cross</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo mkdir -p /opt/cross</span><br><span class="line">$ sudo chown jeff /opt/cross </span><br></pre></td></tr></table></figure>
<p>Throughout the entire build process, make sure the installation’s <code>bin</code> subdirectory is in your <code>PATH</code> environment variable. You can remove this directory from your <code>PATH</code> later, but most of the build steps expect to find <code>aarch64-linux-gcc</code> and other host tools via the <code>PATH</code> by default.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ export PATH=/opt/cross/bin:$PATH </span><br></pre></td></tr></table></figure>
<p>Pay particular attention to the stuff that gets installed under <code>/opt/cross/aarch64-linux/</code>. This directory is considered the <strong>system root</strong> of an imaginary AArch64 Linux target system. A self-hosted AArch64 Linux compiler could, in theory, use all the headers and libraries placed here. Obviously, none of the programs built for the host system, such as the cross-compiler itself, will be installed to this directory.</p>
<h3 id="1-Binutils"><a href="#1-Binutils" class="headerlink" title="1. Binutils"></a>1. Binutils</h3><p>This step builds and installs the cross-assembler, cross-linker, and other tools.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir build-binutils</span><br><span class="line">$ cd build-binutils</span><br><span class="line">$ ../binutils-2.24/configure --prefix=/opt/cross --target=aarch64-linux --disable-multilib</span><br><span class="line">$ make -j4</span><br><span class="line">$ make install</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<ul>
<li>We’ve specified <code>aarch64-linux</code> as the target system type. Binutils’s <code>configure</code> script will recognize that this target is different from the machine we’re building on, and configure a cross-assembler and cross-linker as a result. The tools will be installed to <code>/opt/cross/bin</code>, their names prefixed by <code>aarch64-linux-</code>.</li>
<li><code>--disable-multilib</code> means that we only want our Binutils installation to work with programs and libraries using the AArch64 instruction set, and not any related instruction sets such as AArch32.</li>
</ul>
<p>This step installs the Linux kernel header files to <code>/opt/cross/aarch64-linux/include</code>, which will ultimately allow programs built using our new toolchain to make system calls to the AArch64 kernel in the target environment.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd linux-3.17.2</span><br><span class="line">$ make ARCH=arm64 INSTALL_HDR_PATH=/opt/cross/aarch64-linux headers_install</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<ul>
<li>We could even have done this before installing Binutils.</li>
<li>The Linux kernel header files won’t actually be used until step 6, when we build the standard C library, although the <code>configure</code> script in step 4 expects them to be already installed.</li>
<li>Because the Linux kernel is a different open-source project from the others, it has a different way of identifying the target CPU architecture: <code>ARCH=arm64</code></li>
</ul>
<p>All of the remaining steps involve building GCC and Glibc. The trick is that there are parts of GCC which depend on parts of Glibc already being built, and vice versa. We can’t build either package in a single step; we need to go back and forth between the two packages and build their components in a way that satisfies their dependencies.</p>
<p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20211121140755.png" alt=""></p>
<h3 id="3-C-C-Compilers"><a href="#3-C-C-Compilers" class="headerlink" title="3. C/C++ Compilers"></a>3. C/C++ Compilers</h3><p>This step will build GCC’s C and C++ cross-compilers only, and install them to <code>/opt/cross/bin</code>. It won’t invoke those compilers to build any libraries just yet.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir -p build-gcc</span><br><span class="line">$ cd build-gcc</span><br><span class="line">$ ../gcc-4.9.2/configure --prefix=/opt/cross --target=aarch64-linux --enable-languages=c,c++ --disable-multilib</span><br><span class="line">$ make -j4 all-gcc</span><br><span class="line">$ make install-gcc</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<ul>
<li>Because we’ve specified <code>--target=aarch64-linux</code>, the build script looks for the Binutils cross-tools we built in step 1 with names prefixed by <code>aarch64-linux-</code>. Likewise, the C/C++ compiler names will be prefixed by <code>aarch64-linux-</code>.</li>
<li><code>--enable-languages=c,c++</code> prevents other compilers in the GCC suite, such as Fortran, Go or Java, from being built.</li>
</ul>
<h3 id="4-Standard-C-Library-Headers-and-Startup-Files"><a href="#4-Standard-C-Library-Headers-and-Startup-Files" class="headerlink" title="4. Standard C Library Headers and Startup Files"></a>4. Standard C Library Headers and Startup Files</h3><p>In this step, we install Glibc’s standard C library headers to <code>/opt/cross/aarch64-linux/include</code>. We also use the C compiler built in step 3 to compile the library’s startup files and install them to <code>/opt/cross/aarch64-linux/lib</code>. Finally, we create a couple of dummy files, <code>libc.so</code> and <code>stubs.h</code>, which are expected in step 5, but which will be replaced in step 6.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir -p build-glibc</span><br><span class="line">$ cd build-glibc</span><br><span class="line">$ ../glibc-2.20/configure --prefix=/opt/cross/aarch64-linux --build=$MACHTYPE --host=aarch64-linux --target=aarch64-linux --with-headers=/opt/cross/aarch64-linux/include --disable-multilib libc_cv_forced_unwind=yes</span><br><span class="line">$ make install-bootstrap-headers=yes install-headers</span><br><span class="line">$ make -j4 csu/subdir_lib</span><br><span class="line">$ install csu/crt1.o csu/crti.o csu/crtn.o /opt/cross/aarch64-linux/lib</span><br><span class="line">$ aarch64-linux-gcc -nostdlib -nostartfiles -shared -x c /dev/null -o /opt/cross/aarch64-linux/lib/libc.so</span><br><span class="line">$ touch /opt/cross/aarch64-linux/include/gnu/stubs.h</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<ul>
<li><code>--prefix=/opt/cross/aarch64-linux</code> tells Glibc’s <code>configure</code> script where it should install its headers and libraries. Note that it’s different from the usual <code>--prefix</code>.</li>
<li>Despite some contradictory information out there, Glibc’s <code>configure</code> script currently requires us to specify all three <code>--build</code>, <code>--host</code> and <code>--target</code> system types.</li>
<li><code>$MACHTYPE</code> is a predefined environment variable which describes the machine running the build script. <code>--build=$MACHTYPE</code> is needed because in step 6, the build script will compile some additional tools which run as part of the build process itself.</li>
<li><code>--host</code> has a different meaning here than we’ve been using so far. In Glibc’s <code>configure</code>, both the <code>--host</code> and <code>--target</code> options are meant to describe the system on which Glibc’s libraries will ultimately run.</li>
<li>We install the C library’s startup files, <code>crt1.o</code>, <code>crti.o</code> and <code>crtn.o</code>, to the installation directory manually. There’s doesn’t seem to a <code>make</code> rule that does this without having other side effects.</li>
</ul>
<h3 id="5-Compiler-Support-Library"><a href="#5-Compiler-Support-Library" class="headerlink" title="5. Compiler Support Library"></a>5. Compiler Support Library</h3><p>This step uses the cross-compilers built in step 3 to build the compiler support library. The compiler support library contains some C++ exception handling boilerplate code, among other things. This library depends on the startup files installed in step 4. The library itself is needed in step 6. Unlike some <a href="http://www.ifp.illinois.edu/~nakazato/tips/xgcc.html">other guides</a>, we don’t need to re-run GCC’s <code>configure</code>. We’re just building additional targets in the same configuration.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd build-gcc</span><br><span class="line">$ make -j4 all-target-libgcc</span><br><span class="line">$ make install-target-libgcc</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<ul>
<li>Two static libraries, <code>libgcc.a</code> and <code>libgcc_eh.a</code>, are installed to <code>/opt/cross/lib/gcc/aarch64-linux/4.9.2/</code>.</li>
<li>A shared library, <code>libgcc_s.so</code>, is installed to <code>/opt/cross/aarch64-linux/lib64</code>.</li>
</ul>
<h3 id="6-Standard-C-Library"><a href="#6-Standard-C-Library" class="headerlink" title="6. Standard C Library"></a>6. Standard C Library</h3><p>In this step, we finish off the Glibc package, which builds the standard C library and installs its files to <code>/opt/cross/aarch64-linux/lib/</code>. The static library is named <code>libc.a</code> and the shared library is <code>libc.so</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd build-glibc</span><br><span class="line">$ make -j4</span><br><span class="line">$ make install</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<h3 id="7-Standard-C-Library"><a href="#7-Standard-C-Library" class="headerlink" title="7. Standard C++ Library"></a>7. Standard C++ Library</h3><p>Finally, we finish off the GCC package, which builds the standard C++ library and installs it to <code>/opt/cross/aarch64-linux/lib64/</code>. It depends on the C library built in step 6. The resulting static library is named <code>libstdc++.a</code> and the shared library is <code>libstdc++.so</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd build-gcc</span><br><span class="line">$ make -j4</span><br><span class="line">$ make install</span><br><span class="line">$ cd .. </span><br></pre></td></tr></table></figure>
<h2 id="Dealing-with-Build-Errors"><a href="#Dealing-with-Build-Errors" class="headerlink" title="Dealing with Build Errors"></a>Dealing with Build Errors</h2><p>If you encounter any errors during the build process, there are three possibilities:</p>
<ol>
<li>You’re missing a required package or tool on the build system.</li>
<li>You’re attempting to perform the build steps in an incorrect order.</li>
<li>You’ve done everything right, but something is just broken in the configuration you’re attempting to build.</li>
</ol>
<p>You’ll have to examine the build logs to determine which case applies. GCC supports a lot of configurations, and some of them may not build right away. The less popular a configuration is, the greater the chance of it being broken. GCC, being an open source project, depends on contributions from its users to keep each configuration working.</p>
<h2 id="Automating-the-Above-Steps"><a href="#Automating-the-Above-Steps" class="headerlink" title="Automating the Above Steps"></a>Automating the Above Steps</h2><p>I’ve written a small bash script named <code>build_cross_gcc</code> to perform all of the above steps. You can find it <a href="https://gist.github.com/preshing/41d5c7248dea16238b60">on GitHub</a>. On my Core 2 Quad Q9550 Debian machine, it takes 13 minutes from start to finish. Customize it to your liking before running.</p>
<p><a href="https://gist.github.com/preshing/41d5c7248dea16238b60"><img src=":/c4c1e0bc4e544b97b6c95c636b98bf03" alt=""></a></p>
<p><code>build_cross_gcc</code> also supports Newlib configurations. When you build a Newlib-based cross-compiler, steps 4, 5 and 6 above can be combined into a single step. (Indeed, that’s what many <a href="http://kunen.org/uC/gnu_tool.html">existing guides</a> do.) For Newlib support, edit the script options as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TARGET=aarch64-elf</span><br><span class="line">USE_NEWLIB=1</span><br><span class="line">CONFIGURATION_OPTIONS=&quot;--disable-multilib --disable-threads&quot; </span><br></pre></td></tr></table></figure>
<p>Another way to build a GCC cross-compiler is using a <a href="http://raghunathlolur.wordpress.com/2014/06/30/combined-tree-build-of-gcc-binutils-and-libraries/">combined tree</a>, where the source code for Binutils, GCC and Newlib are merged into a single directory. A combined tree will only work if the <code>intl</code> and <code>libiberty</code> libraries bundled with GCC and Binutils are identical, which is not the case for the versions used in this post. Combined trees don’t support Glibc either, so it wasn’t an option for this configuration.</p>
<p>There are a couple of popular build scripts, namely <a href="http://crosstool-ng.org/">crosstool-NG</a> and <a href="https://www.embtoolkit.org/">EmbToolkit</a>, which automate the entire process of building cross-compilers. I had mixed results using crosstool-NG, but it helped me make sense of the build process while putting together this guide.</p>
<h2 id="Testing-the-Cross-Compiler"><a href="#Testing-the-Cross-Compiler" class="headerlink" title="Testing the Cross-Compiler"></a>Testing the Cross-Compiler</h2><p>If everything built successfully, let’s check our cross-compiler for a dial tone:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ aarch64-linux-g++ -v</span><br><span class="line">Using built-in specs.</span><br><span class="line">COLLECT_GCC=aarch64-linux-g++</span><br><span class="line">COLLECT_LTO_WRAPPER=/opt/cross/libexec/gcc/aarch64-linux/4.9.2/lto-wrapper</span><br><span class="line">Target: aarch64-linux</span><br><span class="line">Configured with: ../gcc-4.9.2/configure --prefix=/opt/cross --target=aarch64-linux --enable-languages=c,c++ --disable-multilib</span><br><span class="line">Thread model: posix</span><br><span class="line">gcc version 4.9.2 (GCC) </span><br></pre></td></tr></table></figure>
<p>We can compile the C++14 program from <a href="http://preshing.com/20141108/how-to-install-the-latest-gcc-on-windows">the previous post</a>, then disassemble it:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ aarch64-linux-g++ -std=c++14 test.cpp</span><br><span class="line">$ aarch64-linux-objdump -d a.out</span><br><span class="line">...</span><br><span class="line">0000000000400830 &lt;main&gt;:</span><br><span class="line">  400830:       a9be7bfd        stp     x29, x30, [sp,#-32]!</span><br><span class="line">  400834:       910003fd        mov     x29, sp</span><br><span class="line">  400838:       910063a2        add     x2, x29, #0x18</span><br><span class="line">  40083c:       90000000        adrp    x0, 400000 &lt;_init-0x618&gt;</span><br><span class="line">  ... </span><br></pre></td></tr></table></figure>
<p>This was my first foray into building a cross-compiler. I basically wrote this guide to remember what I’ve learned. I think the above steps serve as a pretty good template for building other configurations; I used <code>build_cross_gcc</code> to build <code>TARGET=powerpc-eabi</code> as well. You can browse <code>config.sub</code> from any of the packages to see what other target environments are supported. Comments and corrections are more than welcome!</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Java动态代理</title>
    <url>/2022/02/18/Java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h2 id="JDK动态代理"><a href="#JDK动态代理" class="headerlink" title="JDK动态代理"></a>JDK动态代理</h2><p>Java中可以使用 <code>Proxy.newProxyInstance​</code> 创建动态代理，动态代理可以拦截对被代理对象的方法调用，并为其附加额外功能。这种似乎一般称为JDK动态代理。</p>
<p>该方法的描述如下: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static Object newProxyInstance​(ClassLoader loader,</span><br><span class="line">                                      Class&lt;?&gt;[] interfaces,</span><br><span class="line">                                      InvocationHandler h)</span><br><span class="line">Returns a proxy instance for the specified interfaces that dispatches method invocations to the specified invocation handler.</span><br><span class="line">IllegalArgumentException will be thrown if any of the following restrictions is violated:</span><br><span class="line"></span><br><span class="line">All of Class objects in the given interfaces array must represent interfaces, not classes or primitive types.</span><br><span class="line">No two elements in the interfaces array may refer to identical Class objects.</span><br><span class="line">All of the interface types must be visible by name through the specified class loader. In other words, for class loader cl and every interface i, the following expression must be true:</span><br><span class="line">Class.forName(i.getName(), false, cl) == i</span><br><span class="line"></span><br><span class="line">All of the types referenced by all public method signatures of the specified interfaces and those inherited by their superinterfaces must be visible by name through the specified class loader.</span><br><span class="line">All non-public interfaces must be in the same package and module, defined by the specified class loader and the module of the non-public interfaces can access all of the interface types; otherwise, it would not be possible for the proxy class to implement all of the interfaces, regardless of what package it is defined in.</span><br><span class="line">For any set of member methods of the specified interfaces that have the same signature:</span><br><span class="line">If the return type of any of the methods is a primitive type or void, then all of the methods must have that same return type.</span><br><span class="line">Otherwise, one of the methods must have a return type that is assignable to all of the return types of the rest of the methods.</span><br><span class="line">The resulting proxy class must not exceed any limits imposed on classes by the virtual machine. For example, the VM may limit the number of interfaces that a class may implement to 65535; in that case, the size of the interfaces array must not exceed 65535.</span><br><span class="line">Note that the order of the specified proxy interfaces is significant: two requests for a proxy class with the same combination of interfaces but in a different order will result in two distinct proxy classes.</span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line">loader - the class loader to define the proxy class</span><br><span class="line">interfaces - the list of interfaces for the proxy class to implement</span><br><span class="line">h - the invocation handler to dispatch method invocations to</span><br><span class="line">Returns:</span><br><span class="line">a proxy instance with the specified invocation handler of a proxy class that is defined by the specified class loader and that implements the specified interfaces</span><br><span class="line">Throws:</span><br><span class="line">IllegalArgumentException - if any of the restrictions on the parameters are violated</span><br><span class="line">SecurityException - if a security manager, s, is present and any of the following conditions is met:</span><br><span class="line">the given loader is null and the caller&#x27;s class loader is not null and the invocation of s.checkPermission with RuntimePermission(&quot;getClassLoader&quot;) permission denies access;</span><br><span class="line">for each proxy interface, intf, the caller&#x27;s class loader is not the same as or an ancestor of the class loader for intf and invocation of s.checkPackageAccess() denies access to intf;</span><br><span class="line">any of the given proxy interfaces is non-public and the caller class is not in the same runtime package as the non-public interface and the invocation of s.checkPermission with ReflectPermission(&quot;newProxyInPackage.&#123;package name&#125;&quot;) permission denies access.</span><br><span class="line">NullPointerException - if the interfaces array argument or any of its elements are null, or if the invocation handler, h, is null</span><br></pre></td></tr></table></figure>
<p>它的基本原理是按照接口的差异为各种类型的被代理对象动态生成一个新类型，称为代理类。代理类其实就是一个实现了被代理对象所需接口的新类型，它会在生成的各种接口方法中调用 <code>InvocationHandler</code> 的 <code>invoke</code> 方法，所以一般情况下需要在 <code>InvocationHandler</code> 中为被代理对象调用相应的方法，以实现其原本的功能。  </p>
<h2 id="一个实例"><a href="#一个实例" class="headerlink" title="一个实例"></a>一个实例</h2><p>下面的例子中声明了两个接口，<code>ISay</code> 和 <code>ISpeak</code>，<code>Hello</code> 类实现了 <code>ISay</code> 和 <code>ISpeak</code> 两个接口。  </p>
<p><code>MyInvocationHandler</code> 接受一个被代理对象 <code>proxiedObject</code> 保存起来，它会在 <code>invoke</code> 中输出它自己和proxy参数的地址，以及 <code>method</code> 方法的描述，并在最后调用了被代理实例的相应 <code>method</code>。  </p>
<p><code>main</code> 方法中的 <code>myInvocationHandler.invoke</code> 很容易理解，它就是一个正常的方法调用。关键在于，后面的 <code>proxyInstance.say</code> 其实完全等价于前面的 <code>myInvocationHandler.invoke</code> 调用。 </p>
<p>接下来给出源码，后面展示输出并进行进一步的分析。  </p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicProxyTest3</span> &#123;</span><br><span class="line">    <span class="keyword">interface</span> <span class="title class_">ISay</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">say</span><span class="params">(String what)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">interface</span> <span class="title class_">ISpeak</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">(String what)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Hello</span> <span class="keyword">implements</span> <span class="title class_">ISay</span>, ISpeak &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">(String what)</span> &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;Hello.say: %s%n&quot;</span>, what);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">(String what)</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">MyInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object proxiedObject;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">MyInvocationHandler</span><span class="params">(Object proxiedObject)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.proxiedObject = proxiedObject;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxyInstance, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;invocationHandlerHashCode: &#123;%s&#125;%n&quot;</span>, System.identityHashCode(<span class="built_in">this</span>));</span><br><span class="line">            System.out.printf(<span class="string">&quot;method: &#123;%s&#125;%n&quot;</span>, method.toString());</span><br><span class="line">            System.out.printf(<span class="string">&quot;proxyInstanceHashCode: &#123;%s&#125;%n&quot;</span>, System.identityHashCode(proxyInstance));</span><br><span class="line">            System.out.printf(<span class="string">&quot;proxyInstanceClass: &#123;%s&#125;%n&quot;</span>, proxyInstance.getClass());</span><br><span class="line">            <span class="keyword">return</span> method.invoke(proxiedObject, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] margs)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">Hello</span> <span class="variable">helloInstance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Hello</span>();</span><br><span class="line">        <span class="type">MyInvocationHandler</span> <span class="variable">myInvocationHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyInvocationHandler</span>(helloInstance);</span><br><span class="line"></span><br><span class="line">        <span class="type">ISay</span> <span class="variable">proxyInstance</span> <span class="operator">=</span> (ISay) Proxy.newProxyInstance(</span><br><span class="line">                Hello.class.getClassLoader(),</span><br><span class="line">                Hello.class.getInterfaces(),</span><br><span class="line">                myInvocationHandler);</span><br><span class="line"></span><br><span class="line">        myInvocationHandler.invoke(proxyInstance, ISay.class.getDeclaredMethod(<span class="string">&quot;say&quot;</span>, String.class), <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="string">&quot;we can reach corner in the world&quot;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        proxyInstance.say(<span class="string">&quot;Across the Great Wall&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Hello</span> <span class="variable">proxyInstance2HelloInstance</span> <span class="operator">=</span> (Hello) proxyInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="运行输出"><a href="#运行输出" class="headerlink" title="运行输出"></a>运行输出</h2><p>程序输出如下：<br><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">invocationHandlerHashCode: &#123;789451787&#125;</span><br><span class="line">method: &#123;public abstract void DynamicProxyTest3$ISay.say(java.lang.String)&#125;</span><br><span class="line">proxyInstanceHashCode: &#123;1950409828&#125;</span><br><span class="line">proxyInstanceClass: &#123;class $Proxy0&#125;</span><br><span class="line">Hello.say: we can reach corner in the world</span><br><span class="line"></span><br><span class="line">invocationHandlerHashCode: &#123;789451787&#125;</span><br><span class="line">method: &#123;public abstract void DynamicProxyTest3$ISay.say(java.lang.String)&#125;</span><br><span class="line">proxyInstanceHashCode: &#123;1950409828&#125;</span><br><span class="line">proxyInstanceClass: &#123;class $Proxy0&#125;</span><br><span class="line">Hello.say: Across the Great Wall</span><br><span class="line"></span><br><span class="line">Exception in thread &quot;main&quot; java.lang.ClassCastException: $Proxy0 cannot be cast to DynamicProxyTest3$Hello</span><br><span class="line">	at DynamicProxyTest3.main(DynamicProxyTest3.java:55)</span><br><span class="line"></span><br><span class="line">Process finished with exit code 1</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>可以看到动态代理对象实例 <code>proxyInstance</code> 的类型是 <code>$Proxy0</code>，这是程序运行时动态生成的一个类型，通过执行Java虚拟机参数 <code>-Dsun.misc.ProxyGenerator.saveGeneratedFiles=true</code> 就可以输出这个动态生成的类的class字节码，反编译可以得到下面的内容。  </p>
<p>可以看到，该代理类实现了 <code>ISay</code> 和 <code>ISpeak</code> 接口，它将接口中的每一个方法都写成了 <code>super.h.invoke(this, methodObject, new Object[]{var1, var2, ...})</code> 的形式。  </p>
<p>而 <code>super.h</code> 其实就是创建动态代理时传入的 <code>InvocationHandler</code> 对象，在这个例子里就是 <code>myInvocationHandler</code>。第一个参数 <code>this</code> 就是该代理对象本身，对应于本例的 <code>proxyInstance</code>，后面两个参数分别是 <code>method</code> 和 <code>method</code> 所需参数。  </p>
<p>由此可见 <code>main</code> 方法中的 <code>proxyInstance.say</code> 其实完全等价于前面的 <code>myInvocationHandler.invoke</code> 调用。 </p>
<p>这就是动态代理的基本原理，实际应用时可以在 <code>InvocationHandler</code> 中附加自己所需的操作来增强被代理类的功能，比如记录日志。  </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> DynamicProxyTest3.ISay;</span><br><span class="line"><span class="keyword">import</span> DynamicProxyTest3.ISpeak;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.UndeclaredThrowableException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">$Proxy0</span> <span class="keyword">extends</span> <span class="title class_">Proxy</span> <span class="keyword">implements</span> <span class="title class_">ISay</span>, ISpeak &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Method m1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Method m2;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Method m3;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Method m4;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Method m0;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> $Proxy0(InvocationHandler var1) <span class="keyword">throws</span>  &#123;</span><br><span class="line">        <span class="built_in">super</span>(var1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object var1)</span> <span class="keyword">throws</span>  &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (Boolean)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m1, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;var1&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var3;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var4) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="title function_">toString</span><span class="params">()</span> <span class="keyword">throws</span>  &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (String)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m2, (Object[])<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">(String var1)</span> <span class="keyword">throws</span>  &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m3, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;var1&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var3;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var4) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">speak</span><span class="params">(String var1)</span> <span class="keyword">throws</span>  &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m4, <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;var1&#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var3;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var4) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var4);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> <span class="keyword">throws</span>  &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (Integer)<span class="built_in">super</span>.h.invoke(<span class="built_in">this</span>, m0, (Object[])<span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException | Error var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> var2;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UndeclaredThrowableException</span>(var3);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            m1 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getMethod(<span class="string">&quot;equals&quot;</span>, Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>));</span><br><span class="line">            m2 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getMethod(<span class="string">&quot;toString&quot;</span>);</span><br><span class="line">            m3 = Class.forName(<span class="string">&quot;DynamicProxyTest3$ISay&quot;</span>).getMethod(<span class="string">&quot;say&quot;</span>, Class.forName(<span class="string">&quot;java.lang.String&quot;</span>));</span><br><span class="line">            m4 = Class.forName(<span class="string">&quot;DynamicProxyTest3$ISpeak&quot;</span>).getMethod(<span class="string">&quot;speak&quot;</span>, Class.forName(<span class="string">&quot;java.lang.String&quot;</span>));</span><br><span class="line">            m0 = Class.forName(<span class="string">&quot;java.lang.Object&quot;</span>).getMethod(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException var2) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoSuchMethodError</span>(var2.getMessage());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException var3) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">NoClassDefFoundError</span>(var3.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="JDK动态代理的局限性"><a href="#JDK动态代理的局限性" class="headerlink" title="JDK动态代理的局限性"></a>JDK动态代理的局限性</h2><p>该实例的最后一句调用试图将动态代理类实例转换成被代理的类型，但并没有成功，因为代理类只是实现了被代理类的接口，它本身并不是被代理的类型。  </p>
<p>由于这种 Proxy 动态代理是基于接口的，被代理类需要实现相应的接口才能进行代理，但是实际使用中有可能难以或者懒得对被代理类进行改造，这种情况下可以动态代理吗？答案是可以！不过JDK动态代理显然是不行的，但 <a href="https://github.com/cglib/cglib">cglib</a> 可以实现，它不依赖接口，生成的动态代理对象还可以转换成被代理的类型，具体原理我还没看。  </p>
]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH Reverse SOCKS Tunnel</title>
    <url>/2022/03/14/SSH%20Reverse%20SOCKS%20Tunnel/</url>
    <content><![CDATA[<h2 id="Useful-SSH-options"><a href="#Useful-SSH-options" class="headerlink" title="Useful SSH options"></a>Useful SSH options</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">-D [bind_address:]port</span><br><span class="line">             Specifies a local “dynamic” application-level port forwarding.  This works by allocating a socket to listen to port on the local</span><br><span class="line">             side, optionally bound to the specified bind_address.  Whenever a connection is made to this port, the connection is forwarded over</span><br><span class="line">             the secure channel, and the application protocol is then used to determine where to connect to from the remote machine.  Currently</span><br><span class="line">             the SOCKS4 and SOCKS5 protocols are supported, and ssh will act as a SOCKS server.  Only root can forward privileged ports.  Dy‐</span><br><span class="line">             namic port forwardings can also be specified in the configuration file.</span><br><span class="line"></span><br><span class="line">             IPv6 addresses can be specified by enclosing the address in square brackets.  Only the superuser can forward privileged ports.  By</span><br><span class="line">             default, the local port is bound in accordance with the GatewayPorts setting.  However, an explicit bind_address may be used to</span><br><span class="line">             bind the connection to a specific address.  The bind_address of “localhost” indicates that the listening port be bound for local</span><br><span class="line">             use only, while an empty address or ‘*’ indicates that the port should be available from all interfaces.</span><br><span class="line"></span><br><span class="line">-L [bind_address:]port:host:hostport</span><br><span class="line">     -L [bind_address:]port:remote_socket</span><br><span class="line">     -L local_socket:host:hostport</span><br><span class="line">     -L local_socket:remote_socket</span><br><span class="line">             Specifies that connections to the given TCP port or Unix socket on the local (client) host are to be forwarded to the given host</span><br><span class="line">             and port, or Unix socket, on the remote side.  This works by allocating a socket to listen to either a TCP port on the local side,</span><br><span class="line">             optionally bound to the specified bind_address, or to a Unix socket.  Whenever a connection is made to the local port or socket,</span><br><span class="line">             the connection is forwarded over the secure channel, and a connection is made to either host port hostport, or the Unix socket</span><br><span class="line">             remote_socket, from the remote machine.</span><br><span class="line"></span><br><span class="line">             Port forwardings can also be specified in the configuration file.  Only the superuser can forward privileged ports.  IPv6 addresses</span><br><span class="line">             can be specified by enclosing the address in square brackets.</span><br><span class="line"></span><br><span class="line">             By default, the local port is bound in accordance with the GatewayPorts setting.  However, an explicit bind_address may be used to</span><br><span class="line">             bind the connection to a specific address.  The bind_address of “localhost” indicates that the listening port be bound for local</span><br><span class="line">             use only, while an empty address or ‘*’ indicates that the port should be available from all interfaces.</span><br><span class="line"></span><br><span class="line">-R [bind_address:]port:host:hostport</span><br><span class="line">     -R [bind_address:]port:local_socket</span><br><span class="line">     -R remote_socket:host:hostport</span><br><span class="line">     -R remote_socket:local_socket</span><br><span class="line">     -R [bind_address:]port</span><br><span class="line">             Specifies that connections to the given TCP port or Unix socket on the remote (server) host are to be forwarded to the local side.</span><br><span class="line"></span><br><span class="line">             This works by allocating a socket to listen to either a TCP port or to a Unix socket on the remote side.  Whenever a connection is</span><br><span class="line">             made to this port or Unix socket, the connection is forwarded over the secure channel, and a connection is made from the local ma‐</span><br><span class="line">             chine to either an explicit destination specified by host port hostport, or local_socket, or, if no explicit destination was speci‐</span><br><span class="line">             fied, ssh will act as a SOCKS 4/5 proxy and forward connections to the destinations requested by the remote SOCKS client.</span><br><span class="line"></span><br><span class="line">             Port forwardings can also be specified in the configuration file.  Privileged ports can be forwarded only when logging in as root</span><br><span class="line">             on the remote machine.  IPv6 addresses can be specified by enclosing the address in square brackets.</span><br><span class="line"></span><br><span class="line">             By default, TCP listening sockets on the server will be bound to the loopback interface only.  This may be overridden by specifying</span><br><span class="line">             a bind_address.  An empty bind_address, or the address ‘*’, indicates that the remote socket should listen on all interfaces.</span><br><span class="line">             Specifying a remote bind_address will only succeed if the server&#x27;s GatewayPorts option is enabled (see sshd_config(5)).</span><br><span class="line"></span><br><span class="line">             If the port argument is ‘0’, the listen port will be dynamically allocated on the server and reported to the client at run time.</span><br><span class="line">             When used together with -O forward the allocated port will be printed to the standard output.</span><br></pre></td></tr></table></figure>
<h2 id="SOCKS-tunnel-for-remote-server-via-local-PC"><a href="#SOCKS-tunnel-for-remote-server-via-local-PC" class="headerlink" title="SOCKS tunnel for remote server via local PC"></a>SOCKS tunnel for remote server via local PC</h2><ol>
<li><p>Setup a forwarding from remote to local for ssh service with <code>-R</code> option, <strong>on the local PC</strong>  </p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -R 1022:localhost:22 <span class="variable">$&#123;remoteuser&#125;</span>@<span class="variable">$&#123;remotehost&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>With that forwarding, you can login ssh of local PC via <code>localhost:1022</code> on the remote server  </p>
</li>
<li><p>Setup a SOCKS tunnel from remote to local with <code>-D</code> option, <strong>on the remote server</strong>  </p>
 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh -D 1080 -p 1022 <span class="variable">$&#123;localuser&#125;</span>@localhost</span><br></pre></td></tr></table></figure></li>
<li>Then you can access network resources with SOCKS proxy <code>socks5://localhost:1080</code> on the remote server  </li>
</ol>
<h2 id="Proxy-utils"><a href="#Proxy-utils" class="headerlink" title="Proxy utils"></a>Proxy utils</h2><p>Many network applications already have SOCKS support built into them.  </p>
<p>For applications without SOCKS support, <a href="https://github.com/haad/proxychains">proxychains</a> can help.  </p>
<p>For example,  you can curl with SOCKS proxy:<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains4 -f ~/.proxychains/proxychains.conf curl google.com</span><br></pre></td></tr></table></figure></p>
<p>And you can proxychains a bash:<br>    <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains4 bash</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Relay TCP upload traffic and make download traffic go directly to the client</title>
    <url>/2022/03/24/Relay%20TCP%20upload%20traffic/</url>
    <content><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>This blog grew out of a question I asked in the SuperUser community : <a href="https://superuser.com/questions/1712341">Relay TCP upload traffic and make download traffic go directly to the client</a>.  </p>
<h2 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h2><p><img src="https://cdn.jsdelivr.net/gh/lpypl/picgo-repo/data/20220323210146.png" alt="the traffic flow"></p>
<ul>
<li><code>Client</code> sends request traffic to <code>RelayServer:10080</code>   </li>
<li><code>RelayServer:10080</code> relay request traffic from client to <code>TargetServer:10080</code>  (<em>Achieved by DNAT rules on the relay server</em>)</li>
<li><code>TargetServer:10080</code> response <code>client</code> as if it is <code>RelayServer:10080</code> (<em>Achieved by SNAT rules on the target server</em>)  </li>
<li><code>Client</code> receives response traffic from <code>RelayServer:10080</code>, which is actually from <code>TargetServer:10080</code>   </li>
<li>it works for both TCP and UDP protocol  </li>
</ul>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>It <strong>cannot</strong> be implemented in the real-world network due to the <strong>source address verification</strong>.</p>
<h2 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h2><ul>
<li><p>Devices: 4 Vmware Machines with bridged network  </p>
<ul>
<li>Router  </li>
<li>Client  </li>
<li>Relay Server  </li>
<li>Target Server  </li>
</ul>
</li>
<li><p>OS: Alpine Linux 3.15.1  </p>
</li>
</ul>
<h2 id="Devices-IP-Addresses"><a href="#Devices-IP-Addresses" class="headerlink" title="Devices IP Addresses"></a>Devices IP Addresses</h2><ul>
<li>Client  <ul>
<li>IP: <code>192.168.10.2/24</code>  </li>
<li>Gateway: <code>192.168.10.1</code></li>
<li>MAC: <code>00:0c:29:06:c7:7e</code>  </li>
</ul>
</li>
<li>Relay Server  <ul>
<li>IP: <code>192.168.20.2/24</code>  </li>
<li>Gateway: <code>192.168.20.1</code></li>
<li>MAC: <code>00:0c:29:5b:89:3e</code>  </li>
</ul>
</li>
<li>Target Server  <ul>
<li>IP: <code>192.168.30.2/24</code>  </li>
<li>Gateway: <code>192.168.30.1</code></li>
<li>MAC: <code>00:0c:29:15:da:6a</code>  </li>
</ul>
</li>
</ul>
<h2 id="Router-Config"><a href="#Router-Config" class="headerlink" title="Router Config"></a>Router Config</h2><h3 id="Network-Interfaces"><a href="#Network-Interfaces" class="headerlink" title="Network Interfaces"></a>Network Interfaces</h3><ul>
<li>eth0  <ul>
<li>MAC: <code>00:0c:29:65:3c:a3</code></li>
<li>IP: <code>192.168.10.1/24</code></li>
</ul>
</li>
<li>eth1  <ul>
<li>MAC: <code>00:0c:29:65:3c:ad</code></li>
<li>IP: <code>192.168.20.1/24</code></li>
</ul>
</li>
<li>eth2  <ul>
<li>MAC: <code>00:0c:29:65:3c:b7</code></li>
<li>IP: <code>192.168.30.1/24</code>  </li>
</ul>
</li>
</ul>
<h3 id="Enable-ipv4-forward"><a href="#Enable-ipv4-forward" class="headerlink" title="Enable ipv4_forward"></a>Enable ipv4_forward</h3>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>
<h3 id="Disable-source-address-verification-for-all-interfaces"><a href="#Disable-source-address-verification-for-all-interfaces" class="headerlink" title="Disable source address verification for all interfaces"></a>Disable source address verification for all interfaces</h3><p>  For linux-based router, refer to kernel sysctl parameter <code>rp_filter</code><br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/eth0/rp_filter</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/eth1/rp_filter</span><br><span class="line">echo 0 &gt; /proc/sys/net/ipv4/conf/eth2/rp_filter</span><br></pre></td></tr></table></figure></p>
<h2 id="Relay-Target-Server-Config"><a href="#Relay-Target-Server-Config" class="headerlink" title="Relay/Target Server Config"></a>Relay/Target Server Config</h2><h3 id="Both"><a href="#Both" class="headerlink" title="Both"></a>Both</h3><ul>
<li>uninstall iptables &amp; install nftables</li>
<li>enable ipv4_forward option for the kernel<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="nftables-rules-for-the-relay-server"><a href="#nftables-rules-for-the-relay-server" class="headerlink" title="nftables rules for the relay server"></a>nftables rules for the relay server</h3>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">table ip route &#123;</span><br><span class="line">        chain prerouting &#123;</span><br><span class="line">                type filter hook prerouting priority dstnat + 1; policy accept;</span><br><span class="line">                ip daddr 192.168.20.2 udp dport 10080 ip daddr set 192.168.30.2</span><br><span class="line">                ip daddr 192.168.20.2 tcp dport 10080 ip daddr set 192.168.30.2</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="nftables-rules-for-the-target-server"><a href="#nftables-rules-for-the-target-server" class="headerlink" title="nftables rules for the target server:"></a>nftables rules for the target server:</h3>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">table ip raw &#123;</span><br><span class="line">        chain prerouting &#123;</span><br><span class="line">                type filter hook prerouting priority raw; policy accept;</span><br><span class="line">                ip daddr 192.168.30.2 udp dport 10080 notrack return</span><br><span class="line">                ip daddr 192.168.30.2 tcp dport 10080 notrack return</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">table ip route &#123;</span><br><span class="line">        chain output &#123;</span><br><span class="line">                type filter hook postrouting priority srcnat + 1; policy accept;</span><br><span class="line">                ip saddr 192.168.30.2 udp sport 10080 ip saddr set 192.168.20.2</span><br><span class="line">                ip saddr 192.168.30.2 tcp sport 10080 ip saddr set 192.168.20.2</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="How-to-test"><a href="#How-to-test" class="headerlink" title="How to test"></a>How to test</h2><ul>
<li><p>On the target server, start a tcp/udp server  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -s 192.168.30.2 -l -p 10080 # for tcp</span><br><span class="line">nc -s 192.168.30.2 -l -u -p 10080 # for udp</span><br></pre></td></tr></table></figure>
</li>
<li><p>On the client, start a tcp/udp client to server  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -s 192.168.10.2 -p 12345 192.168.20.2 10080 # for tcp</span><br><span class="line">nc -s 192.168.10.2 -u -p 12345 192.168.20.2 10080 # for udp</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="My-Testing"><a href="#My-Testing" class="headerlink" title="My Testing"></a>My Testing</h2><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h3><ol>
<li>The client establishes a TCP connection with the server</li>
<li>The client sends “Hello” to the server</li>
<li>The server replies “World” to the client</li>
<li>The client terminates the TCP connection  </li>
</ol>
<h3 id="Packets-flow-captured-by-the-Router"><a href="#Packets-flow-captured-by-the-Router" class="headerlink" title="Packets flow captured by the Router"></a>Packets flow captured by the Router</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">router:~# tcpdump &#x27;(dst 192.168.10.2 &amp;&amp; dst port 12345) || (src 192.168.10.2 &amp;&amp; src port 12345)&#x27; -e</span><br><span class="line">tcpdump: verbose output suppressed, use -v[v]... for full protocol decode</span><br><span class="line">listening on eth0, link-type EN10MB (Ethernet), snapshot length 262144 bytes</span><br><span class="line">17:33:45.712751 00:0c:29:06:c7:7e (oui Unknown) &gt; 00:0c:29:65:3c:a3 (oui Unknown), ethertype IPv4 (0x0800), length 74: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [S], seq 4018363570, win 64240, options [mss 1460,sackOK,TS val 1510067563 ecr 0,nop,wscale 7], length 0</span><br><span class="line">17:33:45.712870 00:0c:29:65:3c:ad (oui Unknown) &gt; 00:0c:29:5b:89:3e (oui Unknown), ethertype IPv4 (0x0800), length 74: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [S], seq 4018363570, win 64240, options [mss 1460,sackOK,TS val 1510067563 ecr 0,nop,wscale 7], length 0</span><br><span class="line">17:33:45.713459 00:0c:29:5b:89:3e (oui Unknown) &gt; 00:0c:29:65:3c:ad (oui Unknown), ethertype IPv4 (0x0800), length 74: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [S], seq 4018363570, win 64240, options [mss 1460,sackOK,TS val 1510067563 ecr 0,nop,wscale 7], length 0</span><br><span class="line">17:33:45.713460 00:0c:29:65:3c:b7 (oui Unknown) &gt; 00:0c:29:15:da:6a (oui Unknown), ethertype IPv4 (0x0800), length 74: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [S], seq 4018363570, win 64240, options [mss 1460,sackOK,TS val 1510067563 ecr 0,nop,wscale 7], length 0</span><br><span class="line">17:33:45.713557 00:0c:29:15:da:6a (oui Unknown) &gt; 00:0c:29:65:3c:b7 (oui Unknown), ethertype IPv4 (0x0800), length 74: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [S.], seq 4008910075, ack 4018363571, win 65160, options [mss 1460,sackOK,TS val 3299425652 ecr 1510067563,nop,wscale 7], length 0</span><br><span class="line">17:33:45.713572 00:0c:29:65:3c:a3 (oui Unknown) &gt; 00:0c:29:06:c7:7e (oui Unknown), ethertype IPv4 (0x0800), length 74: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [S.], seq 4008910075, ack 4018363571, win 65160, options [mss 1460,sackOK,TS val 3299425652 ecr 1510067563,nop,wscale 7], length 0</span><br><span class="line">17:33:45.713802 00:0c:29:06:c7:7e (oui Unknown) &gt; 00:0c:29:65:3c:a3 (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [.], ack 1, win 502, options [nop,nop,TS val 1510067564 ecr 3299425652], length 0</span><br><span class="line">17:33:45.713907 00:0c:29:65:3c:ad (oui Unknown) &gt; 00:0c:29:5b:89:3e (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [.], ack 1, win 502, options [nop,nop,TS val 1510067564 ecr 3299425652], length 0</span><br><span class="line">17:33:45.714096 00:0c:29:5b:89:3e (oui Unknown) &gt; 00:0c:29:65:3c:ad (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [.], ack 4008910076, win 502, options [nop,nop,TS val 1510067564 ecr 3299425652], length 0</span><br><span class="line">17:33:45.714207 00:0c:29:65:3c:b7 (oui Unknown) &gt; 00:0c:29:15:da:6a (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [.], ack 1, win 502, options [nop,nop,TS val 1510067564 ecr 3299425652], length 0</span><br><span class="line">17:33:49.369321 00:0c:29:06:c7:7e (oui Unknown) &gt; 00:0c:29:65:3c:a3 (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [P.], seq 1:7, ack 1, win 502, options [nop,nop,TS val 1510071219 ecr 3299425652], length 6</span><br><span class="line">17:33:49.369451 00:0c:29:65:3c:ad (oui Unknown) &gt; 00:0c:29:5b:89:3e (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [P.], seq 1:7, ack 1, win 502, options [nop,nop,TS val 1510071219 ecr 3299425652], length 6</span><br><span class="line">17:33:49.369819 00:0c:29:5b:89:3e (oui Unknown) &gt; 00:0c:29:65:3c:ad (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [P.], seq 0:6, ack 1, win 502, options [nop,nop,TS val 1510071219 ecr 3299425652], length 6</span><br><span class="line">17:33:49.369820 00:0c:29:65:3c:b7 (oui Unknown) &gt; 00:0c:29:15:da:6a (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [P.], seq 0:6, ack 1, win 502, options [nop,nop,TS val 1510071219 ecr 3299425652], length 6</span><br><span class="line">17:33:49.370069 00:0c:29:15:da:6a (oui Unknown) &gt; 00:0c:29:65:3c:b7 (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [.], ack 7, win 510, options [nop,nop,TS val 3299429309 ecr 1510071219], length 0</span><br><span class="line">17:33:49.370087 00:0c:29:65:3c:a3 (oui Unknown) &gt; 00:0c:29:06:c7:7e (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [.], ack 7, win 510, options [nop,nop,TS val 3299429309 ecr 1510071219], length 0</span><br><span class="line">17:33:51.689563 00:0c:29:06:c7:7e (oui Unknown) &gt; 00:0c:29:65:3c:a3 (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [P.], seq 7:13, ack 1, win 502, options [nop,nop,TS val 1510073539 ecr 3299429309], length 6</span><br><span class="line">17:33:51.689687 00:0c:29:65:3c:ad (oui Unknown) &gt; 00:0c:29:5b:89:3e (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [P.], seq 7:13, ack 1, win 502, options [nop,nop,TS val 1510073539 ecr 3299429309], length 6</span><br><span class="line">17:33:51.690131 00:0c:29:5b:89:3e (oui Unknown) &gt; 00:0c:29:65:3c:ad (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [P.], seq 6:12, ack 1, win 502, options [nop,nop,TS val 1510073539 ecr 3299429309], length 6</span><br><span class="line">17:33:51.690131 00:0c:29:65:3c:b7 (oui Unknown) &gt; 00:0c:29:15:da:6a (oui Unknown), ethertype IPv4 (0x0800), length 72: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [P.], seq 6:12, ack 1, win 502, options [nop,nop,TS val 1510073539 ecr 3299429309], length 6</span><br><span class="line">17:33:51.690297 00:0c:29:15:da:6a (oui Unknown) &gt; 00:0c:29:65:3c:b7 (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [.], ack 13, win 510, options [nop,nop,TS val 3299431629 ecr 1510073539], length 0</span><br><span class="line">17:33:51.690305 00:0c:29:65:3c:a3 (oui Unknown) &gt; 00:0c:29:06:c7:7e (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [.], ack 13, win 510, options [nop,nop,TS val 3299431629 ecr 1510073539], length 0</span><br><span class="line">17:33:55.442820 00:0c:29:06:c7:7e (oui Unknown) &gt; 00:0c:29:65:3c:a3 (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [F.], seq 13, ack 1, win 502, options [nop,nop,TS val 1510077293 ecr 3299431629], length 0</span><br><span class="line">17:33:55.442935 00:0c:29:65:3c:ad (oui Unknown) &gt; 00:0c:29:5b:89:3e (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.20.2.10080: Flags [F.], seq 13, ack 1, win 502, options [nop,nop,TS val 1510077293 ecr 3299431629], length 0</span><br><span class="line">17:33:55.443307 00:0c:29:5b:89:3e (oui Unknown) &gt; 00:0c:29:65:3c:ad (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [F.], seq 12, ack 1, win 502, options [nop,nop,TS val 1510077293 ecr 3299431629], length 0</span><br><span class="line">17:33:55.443307 00:0c:29:65:3c:b7 (oui Unknown) &gt; 00:0c:29:15:da:6a (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.10.2.12345 &gt; 192.168.30.2.10080: Flags [F.], seq 12, ack 1, win 502, options [nop,nop,TS val 1510077293 ecr 3299431629], length 0</span><br><span class="line">17:33:55.486509 00:0c:29:15:da:6a (oui Unknown) &gt; 00:0c:29:65:3c:b7 (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [.], ack 14, win 510, options [nop,nop,TS val 3299435425 ecr 1510077293], length 0</span><br><span class="line">17:33:55.486527 00:0c:29:65:3c:a3 (oui Unknown) &gt; 00:0c:29:06:c7:7e (oui Unknown), ethertype IPv4 (0x0800), length 66: 192.168.20.2.10080 &gt; 192.168.10.2.12345: Flags [.], ack 14, win 510, options [nop,nop,TS val 3299435425 ecr 1510077293], length 0</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
        <tag>Nftables</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian on Android: Install Debian from Scratch</title>
    <url>/2023/12/02/Android%20as%20Server:%20Install%20Debian%20from%20Scratch/</url>
    <content><![CDATA[<h2 id="Outline"><a href="#Outline" class="headerlink" title="Outline"></a>Outline</h2><p>In this blog, you will know how to install Debian for an  Android device with root privileges.  </p>
<p><strong>No Termux. No Linux Deploy. No Black Box.</strong></p>
<p><strong>Only Debian offical installer. Everything is under your control.</strong></p>
<h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul>
<li><code>root privileges</code></li>
<li><code>busybox</code></li>
</ul>
<p>With Magisk installed, you can get both root privileges and busybox.  </p>
<h2 id="Install-Debian-with-debootstrap"><a href="#Install-Debian-with-debootstrap" class="headerlink" title="Install Debian with debootstrap"></a>Install Debian with <code>debootstrap</code></h2><h3 id="Switch-to-root-user"><a href="#Switch-to-root-user" class="headerlink" title="Switch to root user"></a>Switch to root user</h3><p>Most commands should be executed with root privileges.</p>
<p>With adb, you can type:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell</span><br><span class="line">su</span><br></pre></td></tr></table></figure></p>
<h3 id="Prepare-necessary-commands"><a href="#Prepare-necessary-commands" class="headerlink" title="Prepare necessary commands"></a>Prepare necessary commands</h3><p><code>debootstrap</code> requires several basic commands to run.  </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># The most important program is busybox, and we can use busybox binary from Magisk</span></span><br><span class="line"><span class="built_in">export</span> BUSYBOX=/data/adb/magisk/busybox</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the base directory of our Linux distributions</span></span><br><span class="line"><span class="built_in">export</span> LINUX_DIST=/data/linux_dist</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$LINUX_DIST</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prepare necessary utils required by debootstrap</span></span><br><span class="line">LINUX_UTILS=<span class="variable">$LINUX_DIST</span>/utils</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$LINUX_UTILS</span></span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$BUSYBOX</span> <span class="variable">$LINUX_UTILS</span>/ar</span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$BUSYBOX</span> <span class="variable">$LINUX_UTILS</span>/wget</span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$BUSYBOX</span> <span class="variable">$LINUX_UTILS</span>/xzcat</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$LINUX_UTILS</span>:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<h3 id="Setup-debian-system-image-path-and-mount-point"><a href="#Setup-debian-system-image-path-and-mount-point" class="headerlink" title="Setup debian system image path and mount point"></a>Setup debian system image path and mount point</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set the debian inst directory</span></span><br><span class="line"><span class="built_in">export</span> DEBINST=<span class="variable">$LINUX_DIST</span>/debinst</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$DEBINST</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian rootfs image path</span></span><br><span class="line"><span class="built_in">export</span> DEBIMG=/sdcard/debian.img</span><br></pre></td></tr></table></figure>
<h3 id="Create-a-img-file-as-rootfs"><a href="#Create-a-img-file-as-rootfs" class="headerlink" title="Create a img file as rootfs"></a>Create a img file as rootfs</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=<span class="variable">$DEBIMG</span> bs=1G count=10</span><br><span class="line">mkfs.ext4 <span class="variable">$DEBIMG</span></span><br><span class="line"><span class="variable">$BUSYBOX</span> mount -o loop <span class="variable">$DEBIMG</span> <span class="variable">$DEBINST</span></span><br></pre></td></tr></table></figure>
<h3 id="Build-pkgdetail-on-your-pc-server"><a href="#Build-pkgdetail-on-your-pc-server" class="headerlink" title="Build pkgdetail (on your pc/server)"></a>Build pkgdetail (on your pc/server)</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget -O pkgdetails.c https://salsa.debian.org/installer-team/base-installer/-/raw/master/pkgdetails.c?inline=<span class="literal">false</span></span><br><span class="line">aarch64-linux-gnu-gcc -static -o pkgdetail pkgdetails.c</span><br></pre></td></tr></table></figure>
<h3 id="Transfer-pkgdetail-to-Android-device"><a href="#Transfer-pkgdetail-to-Android-device" class="headerlink" title="Transfer pkgdetail to Android device"></a>Transfer <code>pkgdetail</code> to Android device</h3><p>Take adb as an example.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push pkgdetail /sdcard</span><br></pre></td></tr></table></figure></p>
<h3 id="Install-debootstrap"><a href="#Install-debootstrap" class="headerlink" title="Install debootstrap"></a>Install debootstrap</h3><p>Download <code>debootstrap</code> and prepare <code>pkgdetails</code> for it.<br><strong>Note</strong>: the dest file is pkgdetail<strong>s</strong>, not pkgdetail</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Download debootstrap</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$LINUX_DIST</span></span><br><span class="line">wget -O debootstrap.tgz http://mirrors.aliyun.com/debian/pool/main/d/debootstrap/debootstrap_1.0.133.tar.gz</span><br><span class="line">tar -xf <span class="variable">$LINUX_DIST</span>/debootstrap.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the necessary environment: DEBOOTSTRAP_DIR</span></span><br><span class="line"><span class="built_in">export</span> DEBOOTSTRAP_DIR=<span class="variable">$LINUX_DIST</span>/debootstrap</span><br><span class="line"></span><br><span class="line"><span class="comment"># Put pkgdetail to $LINUX_DIST/pkgdetails</span></span><br><span class="line"><span class="comment"># !!! Note that the dest file is: pkgdetails (not pkgdetail)</span></span><br><span class="line"><span class="built_in">cp</span> /sdcard/pkgdetail <span class="variable">$DEBOOTSTRAP_DIR</span>/pkgdetails</span><br><span class="line"><span class="built_in">chmod</span> +x <span class="variable">$DEBOOTSTRAP_DIR</span>/pkgdetails</span><br></pre></td></tr></table></figure>
<h3 id="Install-Debian-with-debootstrap-1"><a href="#Install-Debian-with-debootstrap-1" class="headerlink" title="Install Debian with debootstrap"></a>Install Debian with debootstrap</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install Debian</span></span><br><span class="line"><span class="variable">$DEBOOTSTRAP_DIR</span>/debootstrap --<span class="built_in">arch</span> arm64 stable <span class="variable">$DEBINST</span> http://mirrors.aliyun.com/debian/</span><br></pre></td></tr></table></figure>
<h2 id="Configure-Debian"><a href="#Configure-Debian" class="headerlink" title="Configure Debian"></a>Configure Debian</h2><h3 id="Chroot-to-Debian-chroot-debian-sh"><a href="#Chroot-to-Debian-chroot-debian-sh" class="headerlink" title="Chroot to Debian: chroot-debian.sh"></a>Chroot to Debian: <code>chroot-debian.sh</code></h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">BUSYBOX=/data/adb/magisk/busybox</span><br><span class="line">DEBINST=/data/linux_dist/debinst</span><br><span class="line"></span><br><span class="line"><span class="variable">$BUSYBOX</span> mount --rbind /dev <span class="variable">$DEBINST</span>/dev/</span><br><span class="line"><span class="variable">$BUSYBOX</span> mount --rbind /proc <span class="variable">$DEBINST</span>/proc/</span><br><span class="line"><span class="variable">$BUSYBOX</span> mount --rbind /sys <span class="variable">$DEBINST</span>/sys/</span><br><span class="line"><span class="variable">$BUSYBOX</span> mount -t tmpfs tmpfs <span class="variable">$DEBINST</span>/tmp/</span><br><span class="line"></span><br><span class="line"><span class="variable">$BUSYBOX</span> <span class="built_in">chroot</span> <span class="variable">$DEBINST</span> /bin/env --ignore-environment su -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># $BUSYBOX umount $DEBINST/dev/</span></span><br><span class="line"><span class="comment"># $BUSYBOX umount $DEBINST/proc/</span></span><br><span class="line"><span class="comment"># $BUSYBOX umount $DEBINST/sys/</span></span><br><span class="line"><span class="comment"># $BUSYBOX umount $DEBINST/tmp/</span></span><br></pre></td></tr></table></figure>
<h3 id="Fix-network-error-inside-Debian"><a href="#Fix-network-error-inside-Debian" class="headerlink" title="Fix network error inside Debian"></a>Fix network error inside Debian</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Add network related groups required by Android kernel</span><br><span class="line">groupadd -g 3001 aid_bt</span><br><span class="line">groupadd -g 3002 aid_bt_net</span><br><span class="line">groupadd -g 3003 aid_inet</span><br><span class="line">groupadd -g 3004 aid_net_raw</span><br><span class="line">groupadd -g 3005 aid_admin</span><br><span class="line"></span><br><span class="line"># Add root to network groups so that root has network access rights</span><br><span class="line">usermod -aG aid_bt,aid_bt_net,aid_inet,aid_net_raw,aid_admin root</span><br><span class="line"></span><br><span class="line"># Set gid of _apt as aid_inet to fix apt network error</span><br><span class="line">usermod -g aid_inet _apt</span><br></pre></td></tr></table></figure>
<h3 id="Configure-DNS-resolution"><a href="#Configure-DNS-resolution" class="headerlink" title="Configure DNS resolution"></a>Configure DNS resolution</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;/etc/resolv.conf &lt;&lt;<span class="string">EOL</span></span><br><span class="line"><span class="string">domain lan</span></span><br><span class="line"><span class="string">search lan</span></span><br><span class="line"><span class="string">nameserver 223.5.5.5</span></span><br><span class="line"><span class="string">nameserver 223.6.6.6</span></span><br><span class="line"><span class="string">EOL</span></span><br></pre></td></tr></table></figure>
<h3 id="Enjoy-your-Debian"><a href="#Enjoy-your-Debian" class="headerlink" title="Enjoy your Debian!"></a>Enjoy your Debian!</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install neovim</span><br></pre></td></tr></table></figure>
<h2 id="Troubles"><a href="#Troubles" class="headerlink" title="Troubles"></a>Troubles</h2><h3 id="Android-kernel-does-not-support-System-V-IPC"><a href="#Android-kernel-does-not-support-System-V-IPC" class="headerlink" title="Android kernel does not support System V IPC"></a>Android kernel does not support System V IPC</h3><p>Applications that rely on System V IPC, such as PostgreSQL, cannot be run directly in Debian on Android.  </p>
<p>Possible solutions: Termux emulates System V IPC.</p>
<p>Refer to:</p>
<ul>
<li><a href="https://android.googlesource.com/platform/ndk/+/4e159d95ebf23b5f72bb707b0cb1518ef96b3d03/docs/system/libc/SYSV-IPC.TXT">Android Doc - SYS-IPC</a></li>
<li><a href="https://github.com/termux/termux-packages/tree/master/packages/libandroid-shmem">Termux - libandroid-shmem</a></li>
<li><a href="https://github.com/termux/termux-packages/tree/master/packages/libandroid-sysv-semaphore">Termux - libandroid-sysv-semaphore</a></li>
<li><a href="hhttps://github.com/termux/termux-packages/tree/master/packages/postgresql">Termux - postgresql</a></li>
</ul>
<h3 id="Android-kernel-allows-only-specific-groups-to-access-the-network"><a href="#Android-kernel-allows-only-specific-groups-to-access-the-network" class="headerlink" title="Android kernel allows only specific groups to access the network"></a>Android kernel allows only specific groups to access the network</h3><p>That’s why we add <code>root</code> to some groups and modify gid of <code>_apt</code> to <code>aid_inet</code></p>
<p>Refer to:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/36451444/what-can-cause-a-socket-permission-denied-error">stackoverflow - what can cause a socket() “Permission denied” error?</a></li>
<li><a href="https://android.googlesource.com/platform/system/core/+/android-9.0.0_r30/libcutils/include/private/android_filesystem_config.h">Andorid hardcoded groups</a></li>
</ul>
<p><strong>If your application fail to run, check if it’s a network issue!</strong></p>
<p>For example, mysqld run as user <code>mysql</code>, and its default group is <code>mysql</code>.<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql:x:104:104:MySQL Server,,,:/nonexistent:/bin/false</span><br></pre></td></tr></table></figure></p>
<p>Without modifying its group to aid_inet, <code>service start mysql</code> / <code>mysqld</code> would fail.</p>
<p>If you do not change the group of user <code>mysql</code> to <code>aid_inet</code>, command <code>service start mysql</code> / <code>mysqld</code> will fail.</p>
<h2 id="Optional-Steps"><a href="#Optional-Steps" class="headerlink" title="Optional Steps"></a>Optional Steps</h2><h3 id="Modern-bashrc"><a href="#Modern-bashrc" class="headerlink" title="Modern bashrc"></a>Modern bashrc</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/.bashrc: executed by bash(1) for non-login shells.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: PS1 and umask are already set in /etc/profile. You should not</span></span><br><span class="line"><span class="comment"># need this unless you want different defaults for root.</span></span><br><span class="line">PS1=<span class="string">&quot;\[\e]0;\u@\h: \w\a\]<span class="variable">$&#123;debian_chroot:+($debian_chroot)&#125;</span>\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ &quot;</span></span><br><span class="line"><span class="comment"># umask 022</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> TERM=xterm-256color</span><br><span class="line"></span><br><span class="line"><span class="comment"># You may uncomment the following lines if you want `ls&#x27; to be colorized:</span></span><br><span class="line"><span class="built_in">export</span> LS_OPTIONS=<span class="string">&#x27;--color=auto&#x27;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;`dircolors`&quot;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls $LS_OPTIONS&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls $LS_OPTIONS -l&#x27;</span></span><br><span class="line"><span class="comment"># alias l=&#x27;ls $LS_OPTIONS -lA&#x27;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Some more alias to avoid making mistakes:</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="Update-apt-source-list"><a href="#Update-apt-source-list" class="headerlink" title="Update apt source list"></a>Update apt source list</h3><p>Refer to <a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/">Tsinghua Mirrors - Debian</a></p>
<h3 id="Install-sysvinit-core-to-run-daemons"><a href="#Install-sysvinit-core-to-run-daemons" class="headerlink" title="Install sysvinit-core to run daemons"></a>Install <code>sysvinit-core</code> to run daemons</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt install sysvinit-core</span><br><span class="line"><span class="comment"># apt remove systemd</span></span><br></pre></td></tr></table></figure>
<h3 id="Configure-timezone"><a href="#Configure-timezone" class="headerlink" title="Configure timezone"></a>Configure timezone</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure tzdata</span><br></pre></td></tr></table></figure>
<h3 id="Configure-locales"><a href="#Configure-locales" class="headerlink" title="Configure locales"></a>Configure locales</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt install locales</span><br><span class="line">dpkg-reconfigure locales</span><br></pre></td></tr></table></figure>
<h3 id="Install-and-configure-mariadb"><a href="#Install-and-configure-mariadb" class="headerlink" title="Install and configure mariadb"></a>Install and configure mariadb</h3><p>Install mariadb with proper apt source<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt install mariadb-server</span><br></pre></td></tr></table></figure></p>
<p>You must change group of user <code>mysql</code> to <code>aid_inet</code><br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">usermod -g aid_inet mysql</span><br></pre></td></tr></table></figure></p>
<p>If package <code>sysvinit-core</code> is installed, start mysqld with<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">service mysql start</span><br></pre></td></tr></table></figure></p>
<p>Without <code>sysvinit-core</code>, you can run<br><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mysqld</span><br></pre></td></tr></table></figure></p>
<h3 id="Configure-bash-completion"><a href="#Configure-bash-completion" class="headerlink" title="Configure bash completion"></a>Configure bash completion</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apt install bash-completion</span><br></pre></td></tr></table></figure>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://www.debian.org/releases/bullseye/amd64/apds03.en.html">Debian - D.3. Installing Debian GNU/Linux from a Unix/Linux System</a></li>
<li><a href="https://github.com/topjohnwu/Magisk">Github - Magisk</a></li>
</ul>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Android</tag>
        <tag>Debian</tag>
      </tags>
  </entry>
</search>
